KIDS Distribution saved on Jul 18, 2015@08:55:50
BGO COMMON 1.0
**KIDS**:BGO COMMON 1.0^

**INSTALL NAME**
BGO COMMON 1.0
"BLD",8514,0)
BGO COMMON 1.0^^0^3150718^n
"BLD",8514,4,0)
^9.64PA^9999999.27^1
"BLD",8514,4,9999999.27,0)
9999999.27
"BLD",8514,4,9999999.27,222)
y^y^f^^^^n
"BLD",8514,4,"B",9999999.27,9999999.27)

"BLD",8514,6.3)
15
"BLD",8514,"KRN",0)
^9.67PA^9002226^21
"BLD",8514,"KRN",.4,0)
.4
"BLD",8514,"KRN",.401,0)
.401
"BLD",8514,"KRN",.402,0)
.402
"BLD",8514,"KRN",.403,0)
.403
"BLD",8514,"KRN",.5,0)
.5
"BLD",8514,"KRN",.84,0)
.84
"BLD",8514,"KRN",.84,"NM",0)
^9.68A^109^109
"BLD",8514,"KRN",.84,"NM",1,0)
903621001^^0
"BLD",8514,"KRN",.84,"NM",2,0)
903621002^^0
"BLD",8514,"KRN",.84,"NM",3,0)
903621003^^0
"BLD",8514,"KRN",.84,"NM",4,0)
903621004^^0
"BLD",8514,"KRN",.84,"NM",5,0)
903621005^^0
"BLD",8514,"KRN",.84,"NM",6,0)
903621006^^0
"BLD",8514,"KRN",.84,"NM",7,0)
903621007^^0
"BLD",8514,"KRN",.84,"NM",8,0)
903621008^^0
"BLD",8514,"KRN",.84,"NM",9,0)
903621009^^0
"BLD",8514,"KRN",.84,"NM",10,0)
903621010^^0
"BLD",8514,"KRN",.84,"NM",11,0)
903621011^^0
"BLD",8514,"KRN",.84,"NM",12,0)
903621012^^0
"BLD",8514,"KRN",.84,"NM",13,0)
903621013^^0
"BLD",8514,"KRN",.84,"NM",14,0)
903621014^^0
"BLD",8514,"KRN",.84,"NM",15,0)
903621015^^0
"BLD",8514,"KRN",.84,"NM",16,0)
903621016^^0
"BLD",8514,"KRN",.84,"NM",17,0)
903621017^^0
"BLD",8514,"KRN",.84,"NM",18,0)
903621018^^0
"BLD",8514,"KRN",.84,"NM",19,0)
903621019^^0
"BLD",8514,"KRN",.84,"NM",20,0)
903621020^^0
"BLD",8514,"KRN",.84,"NM",21,0)
903621021^^0
"BLD",8514,"KRN",.84,"NM",22,0)
903621022^^0
"BLD",8514,"KRN",.84,"NM",23,0)
903621023^^0
"BLD",8514,"KRN",.84,"NM",24,0)
903621024^^0
"BLD",8514,"KRN",.84,"NM",25,0)
903621025^^0
"BLD",8514,"KRN",.84,"NM",26,0)
903621026^^0
"BLD",8514,"KRN",.84,"NM",27,0)
903621027^^0
"BLD",8514,"KRN",.84,"NM",28,0)
903621028^^0
"BLD",8514,"KRN",.84,"NM",29,0)
903621029^^0
"BLD",8514,"KRN",.84,"NM",30,0)
903621030^^0
"BLD",8514,"KRN",.84,"NM",31,0)
903621031^^0
"BLD",8514,"KRN",.84,"NM",32,0)
903621032^^0
"BLD",8514,"KRN",.84,"NM",33,0)
903621033^^0
"BLD",8514,"KRN",.84,"NM",34,0)
903621034^^0
"BLD",8514,"KRN",.84,"NM",35,0)
903621035^^0
"BLD",8514,"KRN",.84,"NM",36,0)
903621036^^0
"BLD",8514,"KRN",.84,"NM",37,0)
903621037^^0
"BLD",8514,"KRN",.84,"NM",38,0)
903621038^^0
"BLD",8514,"KRN",.84,"NM",39,0)
903621039^^0
"BLD",8514,"KRN",.84,"NM",40,0)
903621040^^0
"BLD",8514,"KRN",.84,"NM",41,0)
903621041^^0
"BLD",8514,"KRN",.84,"NM",42,0)
903621042^^0
"BLD",8514,"KRN",.84,"NM",43,0)
903621043^^0
"BLD",8514,"KRN",.84,"NM",44,0)
903621044^^0
"BLD",8514,"KRN",.84,"NM",45,0)
903621045^^0
"BLD",8514,"KRN",.84,"NM",46,0)
903621046^^0
"BLD",8514,"KRN",.84,"NM",47,0)
903621047^^0
"BLD",8514,"KRN",.84,"NM",48,0)
903621048^^0
"BLD",8514,"KRN",.84,"NM",49,0)
903621049^^0
"BLD",8514,"KRN",.84,"NM",50,0)
903621050^^0
"BLD",8514,"KRN",.84,"NM",51,0)
903621051^^0
"BLD",8514,"KRN",.84,"NM",52,0)
903621052^^0
"BLD",8514,"KRN",.84,"NM",53,0)
903621053^^0
"BLD",8514,"KRN",.84,"NM",54,0)
903621054^^0
"BLD",8514,"KRN",.84,"NM",55,0)
903621055^^0
"BLD",8514,"KRN",.84,"NM",56,0)
903621056^^0
"BLD",8514,"KRN",.84,"NM",57,0)
903621057^^0
"BLD",8514,"KRN",.84,"NM",58,0)
903621058^^0
"BLD",8514,"KRN",.84,"NM",59,0)
903621059^^0
"BLD",8514,"KRN",.84,"NM",60,0)
903621060^^0
"BLD",8514,"KRN",.84,"NM",61,0)
903621061^^0
"BLD",8514,"KRN",.84,"NM",62,0)
903621062^^0
"BLD",8514,"KRN",.84,"NM",63,0)
903621063^^0
"BLD",8514,"KRN",.84,"NM",64,0)
903621064^^0
"BLD",8514,"KRN",.84,"NM",65,0)
903621065^^0
"BLD",8514,"KRN",.84,"NM",66,0)
903621066^^0
"BLD",8514,"KRN",.84,"NM",67,0)
903621067^^0
"BLD",8514,"KRN",.84,"NM",68,0)
903621068^^0
"BLD",8514,"KRN",.84,"NM",69,0)
903621069^^0
"BLD",8514,"KRN",.84,"NM",70,0)
903621070^^0
"BLD",8514,"KRN",.84,"NM",71,0)
903621071^^0
"BLD",8514,"KRN",.84,"NM",72,0)
903621072^^0
"BLD",8514,"KRN",.84,"NM",73,0)
903621073^^0
"BLD",8514,"KRN",.84,"NM",74,0)
903621074^^0
"BLD",8514,"KRN",.84,"NM",75,0)
903621075^^0
"BLD",8514,"KRN",.84,"NM",76,0)
903621076^^0
"BLD",8514,"KRN",.84,"NM",77,0)
903621077^^0
"BLD",8514,"KRN",.84,"NM",78,0)
903621078^^0
"BLD",8514,"KRN",.84,"NM",79,0)
903621079^^0
"BLD",8514,"KRN",.84,"NM",80,0)
903621080^^0
"BLD",8514,"KRN",.84,"NM",81,0)
903621081^^0
"BLD",8514,"KRN",.84,"NM",82,0)
903621082^^0
"BLD",8514,"KRN",.84,"NM",83,0)
903621083^^0
"BLD",8514,"KRN",.84,"NM",84,0)
903621084^^0
"BLD",8514,"KRN",.84,"NM",85,0)
903621085^^0
"BLD",8514,"KRN",.84,"NM",86,0)
903621086^^0
"BLD",8514,"KRN",.84,"NM",87,0)
903621087^^0
"BLD",8514,"KRN",.84,"NM",88,0)
903621088^^0
"BLD",8514,"KRN",.84,"NM",89,0)
903621089^^0
"BLD",8514,"KRN",.84,"NM",90,0)
903621090^^0
"BLD",8514,"KRN",.84,"NM",91,0)
903621091^^0
"BLD",8514,"KRN",.84,"NM",92,0)
903621092^^0
"BLD",8514,"KRN",.84,"NM",93,0)
903621093^^0
"BLD",8514,"KRN",.84,"NM",94,0)
903621094^^0
"BLD",8514,"KRN",.84,"NM",95,0)
903621095^^0
"BLD",8514,"KRN",.84,"NM",96,0)
903621096^^0
"BLD",8514,"KRN",.84,"NM",97,0)
903621097^^0
"BLD",8514,"KRN",.84,"NM",98,0)
903621098^^0
"BLD",8514,"KRN",.84,"NM",99,0)
903621099^^0
"BLD",8514,"KRN",.84,"NM",100,0)
903621100^^0
"BLD",8514,"KRN",.84,"NM",101,0)
903621101^^0
"BLD",8514,"KRN",.84,"NM",102,0)
903621102^^0
"BLD",8514,"KRN",.84,"NM",103,0)
903621103^^0
"BLD",8514,"KRN",.84,"NM",104,0)
903621104^^0
"BLD",8514,"KRN",.84,"NM",105,0)
903621105^^0
"BLD",8514,"KRN",.84,"NM",106,0)
903621106^^0
"BLD",8514,"KRN",.84,"NM",107,0)
903621107^^0
"BLD",8514,"KRN",.84,"NM",108,0)
903621108^^0
"BLD",8514,"KRN",.84,"NM",109,0)
903621109^^0
"BLD",8514,"KRN",.84,"NM","B",903621001,1)

"BLD",8514,"KRN",.84,"NM","B",903621002,2)

"BLD",8514,"KRN",.84,"NM","B",903621003,3)

"BLD",8514,"KRN",.84,"NM","B",903621004,4)

"BLD",8514,"KRN",.84,"NM","B",903621005,5)

"BLD",8514,"KRN",.84,"NM","B",903621006,6)

"BLD",8514,"KRN",.84,"NM","B",903621007,7)

"BLD",8514,"KRN",.84,"NM","B",903621008,8)

"BLD",8514,"KRN",.84,"NM","B",903621009,9)

"BLD",8514,"KRN",.84,"NM","B",903621010,10)

"BLD",8514,"KRN",.84,"NM","B",903621011,11)

"BLD",8514,"KRN",.84,"NM","B",903621012,12)

"BLD",8514,"KRN",.84,"NM","B",903621013,13)

"BLD",8514,"KRN",.84,"NM","B",903621014,14)

"BLD",8514,"KRN",.84,"NM","B",903621015,15)

"BLD",8514,"KRN",.84,"NM","B",903621016,16)

"BLD",8514,"KRN",.84,"NM","B",903621017,17)

"BLD",8514,"KRN",.84,"NM","B",903621018,18)

"BLD",8514,"KRN",.84,"NM","B",903621019,19)

"BLD",8514,"KRN",.84,"NM","B",903621020,20)

"BLD",8514,"KRN",.84,"NM","B",903621021,21)

"BLD",8514,"KRN",.84,"NM","B",903621022,22)

"BLD",8514,"KRN",.84,"NM","B",903621023,23)

"BLD",8514,"KRN",.84,"NM","B",903621024,24)

"BLD",8514,"KRN",.84,"NM","B",903621025,25)

"BLD",8514,"KRN",.84,"NM","B",903621026,26)

"BLD",8514,"KRN",.84,"NM","B",903621027,27)

"BLD",8514,"KRN",.84,"NM","B",903621028,28)

"BLD",8514,"KRN",.84,"NM","B",903621029,29)

"BLD",8514,"KRN",.84,"NM","B",903621030,30)

"BLD",8514,"KRN",.84,"NM","B",903621031,31)

"BLD",8514,"KRN",.84,"NM","B",903621032,32)

"BLD",8514,"KRN",.84,"NM","B",903621033,33)

"BLD",8514,"KRN",.84,"NM","B",903621034,34)

"BLD",8514,"KRN",.84,"NM","B",903621035,35)

"BLD",8514,"KRN",.84,"NM","B",903621036,36)

"BLD",8514,"KRN",.84,"NM","B",903621037,37)

"BLD",8514,"KRN",.84,"NM","B",903621038,38)

"BLD",8514,"KRN",.84,"NM","B",903621039,39)

"BLD",8514,"KRN",.84,"NM","B",903621040,40)

"BLD",8514,"KRN",.84,"NM","B",903621041,41)

"BLD",8514,"KRN",.84,"NM","B",903621042,42)

"BLD",8514,"KRN",.84,"NM","B",903621043,43)

"BLD",8514,"KRN",.84,"NM","B",903621044,44)

"BLD",8514,"KRN",.84,"NM","B",903621045,45)

"BLD",8514,"KRN",.84,"NM","B",903621046,46)

"BLD",8514,"KRN",.84,"NM","B",903621047,47)

"BLD",8514,"KRN",.84,"NM","B",903621048,48)

"BLD",8514,"KRN",.84,"NM","B",903621049,49)

"BLD",8514,"KRN",.84,"NM","B",903621050,50)

"BLD",8514,"KRN",.84,"NM","B",903621051,51)

"BLD",8514,"KRN",.84,"NM","B",903621052,52)

"BLD",8514,"KRN",.84,"NM","B",903621053,53)

"BLD",8514,"KRN",.84,"NM","B",903621054,54)

"BLD",8514,"KRN",.84,"NM","B",903621055,55)

"BLD",8514,"KRN",.84,"NM","B",903621056,56)

"BLD",8514,"KRN",.84,"NM","B",903621057,57)

"BLD",8514,"KRN",.84,"NM","B",903621058,58)

"BLD",8514,"KRN",.84,"NM","B",903621059,59)

"BLD",8514,"KRN",.84,"NM","B",903621060,60)

"BLD",8514,"KRN",.84,"NM","B",903621061,61)

"BLD",8514,"KRN",.84,"NM","B",903621062,62)

"BLD",8514,"KRN",.84,"NM","B",903621063,63)

"BLD",8514,"KRN",.84,"NM","B",903621064,64)

"BLD",8514,"KRN",.84,"NM","B",903621065,65)

"BLD",8514,"KRN",.84,"NM","B",903621066,66)

"BLD",8514,"KRN",.84,"NM","B",903621067,67)

"BLD",8514,"KRN",.84,"NM","B",903621068,68)

"BLD",8514,"KRN",.84,"NM","B",903621069,69)

"BLD",8514,"KRN",.84,"NM","B",903621070,70)

"BLD",8514,"KRN",.84,"NM","B",903621071,71)

"BLD",8514,"KRN",.84,"NM","B",903621072,72)

"BLD",8514,"KRN",.84,"NM","B",903621073,73)

"BLD",8514,"KRN",.84,"NM","B",903621074,74)

"BLD",8514,"KRN",.84,"NM","B",903621075,75)

"BLD",8514,"KRN",.84,"NM","B",903621076,76)

"BLD",8514,"KRN",.84,"NM","B",903621077,77)

"BLD",8514,"KRN",.84,"NM","B",903621078,78)

"BLD",8514,"KRN",.84,"NM","B",903621079,79)

"BLD",8514,"KRN",.84,"NM","B",903621080,80)

"BLD",8514,"KRN",.84,"NM","B",903621081,81)

"BLD",8514,"KRN",.84,"NM","B",903621082,82)

"BLD",8514,"KRN",.84,"NM","B",903621083,83)

"BLD",8514,"KRN",.84,"NM","B",903621084,84)

"BLD",8514,"KRN",.84,"NM","B",903621085,85)

"BLD",8514,"KRN",.84,"NM","B",903621086,86)

"BLD",8514,"KRN",.84,"NM","B",903621087,87)

"BLD",8514,"KRN",.84,"NM","B",903621088,88)

"BLD",8514,"KRN",.84,"NM","B",903621089,89)

"BLD",8514,"KRN",.84,"NM","B",903621090,90)

"BLD",8514,"KRN",.84,"NM","B",903621091,91)

"BLD",8514,"KRN",.84,"NM","B",903621092,92)

"BLD",8514,"KRN",.84,"NM","B",903621093,93)

"BLD",8514,"KRN",.84,"NM","B",903621094,94)

"BLD",8514,"KRN",.84,"NM","B",903621095,95)

"BLD",8514,"KRN",.84,"NM","B",903621096,96)

"BLD",8514,"KRN",.84,"NM","B",903621097,97)

"BLD",8514,"KRN",.84,"NM","B",903621098,98)

"BLD",8514,"KRN",.84,"NM","B",903621099,99)

"BLD",8514,"KRN",.84,"NM","B",903621100,100)

"BLD",8514,"KRN",.84,"NM","B",903621101,101)

"BLD",8514,"KRN",.84,"NM","B",903621102,102)

"BLD",8514,"KRN",.84,"NM","B",903621103,103)

"BLD",8514,"KRN",.84,"NM","B",903621104,104)

"BLD",8514,"KRN",.84,"NM","B",903621105,105)

"BLD",8514,"KRN",.84,"NM","B",903621106,106)

"BLD",8514,"KRN",.84,"NM","B",903621107,107)

"BLD",8514,"KRN",.84,"NM","B",903621108,108)

"BLD",8514,"KRN",.84,"NM","B",903621109,109)

"BLD",8514,"KRN",3.6,0)
3.6
"BLD",8514,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",8514,"KRN",3.8,0)
3.8
"BLD",8514,"KRN",9.2,0)
9.2
"BLD",8514,"KRN",9.8,0)
9.8
"BLD",8514,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",8514,"KRN",9.8,"NM",1,0)
BGOUTL^^0^B122246595
"BLD",8514,"KRN",9.8,"NM",2,0)
BGOUTL2^^0^B71576538
"BLD",8514,"KRN",9.8,"NM",3,0)
BGOUTL3^^0^B3068906
"BLD",8514,"KRN",9.8,"NM",4,0)
BGOUTL4^^0^B2962827
"BLD",8514,"KRN",9.8,"NM",5,0)
AUPNSICD^^0^B84539137
"BLD",8514,"KRN",9.8,"NM",6,0)
AUPNVUTL^^0^B14090601
"BLD",8514,"KRN",9.8,"NM",7,0)
AUPNSICH^^0^B98931011
"BLD",8514,"KRN",9.8,"NM","B","AUPNSICD",5)

"BLD",8514,"KRN",9.8,"NM","B","AUPNSICH",7)

"BLD",8514,"KRN",9.8,"NM","B","AUPNVUTL",6)

"BLD",8514,"KRN",9.8,"NM","B","BGOUTL",1)

"BLD",8514,"KRN",9.8,"NM","B","BGOUTL2",2)

"BLD",8514,"KRN",9.8,"NM","B","BGOUTL3",3)

"BLD",8514,"KRN",9.8,"NM","B","BGOUTL4",4)

"BLD",8514,"KRN",19,0)
19
"BLD",8514,"KRN",19.1,0)
19.1
"BLD",8514,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",8514,"KRN",19.1,"NM",1,0)
BGOZ CAC^^0
"BLD",8514,"KRN",19.1,"NM","B","BGOZ CAC",1)

"BLD",8514,"KRN",101,0)
101
"BLD",8514,"KRN",409.61,0)
409.61
"BLD",8514,"KRN",771,0)
771
"BLD",8514,"KRN",779.2,0)
779.2
"BLD",8514,"KRN",870,0)
870
"BLD",8514,"KRN",8989.51,0)
8989.51
"BLD",8514,"KRN",8989.52,0)
8989.52
"BLD",8514,"KRN",8994,0)
8994
"BLD",8514,"KRN",8994,"NM",0)
^9.68A^18^18
"BLD",8514,"KRN",8994,"NM",1,0)
BGOUTL CHKSEC^^0
"BLD",8514,"KRN",8994,"NM",2,0)
BGOUTL CPTLEXCD^^0
"BLD",8514,"KRN",8994,"NM",3,0)
BGOUTL DICLKUP^^0
"BLD",8514,"KRN",8994,"NM",4,0)
BGOUTL DICLKUP2^^0
"BLD",8514,"KRN",8994,"NM",5,0)
BGOUTL FIRVIS^^0
"BLD",8514,"KRN",8994,"NM",6,0)
BGOUTL GETCLN^^0
"BLD",8514,"KRN",8994,"NM",7,0)
BGOUTL GETPARM^^0
"BLD",8514,"KRN",8994,"NM",8,0)
BGOUTL GETRPT^^0
"BLD",8514,"KRN",8994,"NM",9,0)
BGOUTL ICDLEX^^0
"BLD",8514,"KRN",8994,"NM",10,0)
BGOUTL ICDLEXCD^^0
"BLD",8514,"KRN",8994,"NM",11,0)
BGOUTL LEXLKUP^^0
"BLD",8514,"KRN",8994,"NM",12,0)
BGOUTL LOCK^^0
"BLD",8514,"KRN",8994,"NM",13,0)
BGOUTL SETPARM^^0
"BLD",8514,"KRN",8994,"NM",14,0)
BGOUTL SNMDCONC^^0
"BLD",8514,"KRN",8994,"NM",15,0)
BGOUTL VCLN^^0
"BLD",8514,"KRN",8994,"NM",16,0)
BGOUTL VFDEL^^0
"BLD",8514,"KRN",8994,"NM",17,0)
BGOUTL2 SUBSET^^0
"BLD",8514,"KRN",8994,"NM",18,0)
BGOUTL3 GETSET^^0
"BLD",8514,"KRN",8994,"NM","B","BGOUTL CHKSEC",1)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL CPTLEXCD",2)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL DICLKUP",3)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL DICLKUP2",4)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL FIRVIS",5)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL GETCLN",6)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL GETPARM",7)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL GETRPT",8)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL ICDLEX",9)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL ICDLEXCD",10)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL LEXLKUP",11)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL LOCK",12)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL SETPARM",13)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL SNMDCONC",14)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL VCLN",15)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL VFDEL",16)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL2 SUBSET",17)

"BLD",8514,"KRN",8994,"NM","B","BGOUTL3 GETSET",18)

"BLD",8514,"KRN",9002226,0)
9002226
"BLD",8514,"KRN","B",.4,.4)

"BLD",8514,"KRN","B",.401,.401)

"BLD",8514,"KRN","B",.402,.402)

"BLD",8514,"KRN","B",.403,.403)

"BLD",8514,"KRN","B",.5,.5)

"BLD",8514,"KRN","B",.84,.84)

"BLD",8514,"KRN","B",3.6,3.6)

"BLD",8514,"KRN","B",3.8,3.8)

"BLD",8514,"KRN","B",9.2,9.2)

"BLD",8514,"KRN","B",9.8,9.8)

"BLD",8514,"KRN","B",19,19)

"BLD",8514,"KRN","B",19.1,19.1)

"BLD",8514,"KRN","B",101,101)

"BLD",8514,"KRN","B",409.61,409.61)

"BLD",8514,"KRN","B",771,771)

"BLD",8514,"KRN","B",779.2,779.2)

"BLD",8514,"KRN","B",870,870)

"BLD",8514,"KRN","B",8989.51,8989.51)

"BLD",8514,"KRN","B",8989.52,8989.52)

"BLD",8514,"KRN","B",8994,8994)

"BLD",8514,"KRN","B",9002226,9002226)

"FIA",9999999.27)
PROVIDER NARRATIVE
"FIA",9999999.27,0)
^AUTNPOV(
"FIA",9999999.27,0,0)
9999999.27
"FIA",9999999.27,0,1)
y^y^f^^^^n
"FIA",9999999.27,0,10)

"FIA",9999999.27,0,11)

"FIA",9999999.27,0,"RLRO")

"FIA",9999999.27,9999999.27)
0
"KRN",.84,903621001,-1)
0^1
"KRN",.84,903621001,0)
903621001^1^^^Unknown patient
"KRN",.84,903621001,2,0)
^^1^1^3061222.171124
"KRN",.84,903621001,2,1,0)
Unknown patient specified
"KRN",.84,903621002,-1)
0^2
"KRN",.84,903621002,0)
903621002^1^^^Visit not specified
"KRN",.84,903621002,2,0)
^^1^1^3061222.171354
"KRN",.84,903621002,2,1,0)
Visit not specified 
"KRN",.84,903621003,-1)
0^3
"KRN",.84,903621003,0)
903621003^1^^^Visit does not exist
"KRN",.84,903621003,2,0)
^^1^1^3061222.171519
"KRN",.84,903621003,2,1,0)
Visit does not exist.
"KRN",.84,903621004,-1)
0^4
"KRN",.84,903621004,0)
903621004^1^^^Cannot create narrative type
"KRN",.84,903621004,2,0)
^^1^1^3061222.171638
"KRN",.84,903621004,2,1,0)
Unable to create a narrative type for chief complaint.
"KRN",.84,903621005,-1)
0^5
"KRN",.84,903621005,0)
903621005^1^y^^Chief complaint only editable by author
"KRN",.84,903621005,2,0)
^^1^1^3061222.171736
"KRN",.84,903621005,2,1,0)
The chief complaint can only be edited by the author (|1|).
"KRN",.84,903621005,3,0)
^.845^1^1
"KRN",.84,903621005,3,1,0)
1^Author name
"KRN",.84,903621006,-1)
0^6
"KRN",.84,903621006,0)
903621006^1^^^Type not specified
"KRN",.84,903621006,2,0)
^^1^1^3061222.171909
"KRN",.84,903621006,2,1,0)
Type not specified.
"KRN",.84,903621007,-1)
0^7
"KRN",.84,903621007,0)
903621007^1^^^Name not specified
"KRN",.84,903621007,2,0)
^^1^1^3061222.171935
"KRN",.84,903621007,2,1,0)
Name not specified.
"KRN",.84,903621008,-1)
0^8
"KRN",.84,903621008,0)
903621008^1^^^Missing input data
"KRN",.84,903621008,2,0)
^^1^1^3061222.172155
"KRN",.84,903621008,2,1,0)
At least one required data element was not specified.
"KRN",.84,903621009,-1)
0^9
"KRN",.84,903621009,0)
903621009^1^^^Invalid category
"KRN",.84,903621009,2,0)
^^1^1^3061222.172216
"KRN",.84,903621009,2,1,0)
Invalid category.
"KRN",.84,903621010,-1)
0^10
"KRN",.84,903621010,0)
903621010^1^^^Missing item node
"KRN",.84,903621010,2,0)
^^1^1^3061222.172235
"KRN",.84,903621010,2,1,0)
Missing item node.
"KRN",.84,903621011,-1)
0^11
"KRN",.84,903621011,0)
903621011^1^^^CPT preference node not defined
"KRN",.84,903621011,2,0)
^^1^1^3061222.172336
"KRN",.84,903621011,2,1,0)
CPT preference node not defined.
"KRN",.84,903621012,-1)
0^12
"KRN",.84,903621012,0)
903621012^1^^^Unknown data type
"KRN",.84,903621012,2,0)
^^1^1^3061222.172431
"KRN",.84,903621012,2,1,0)
Unknown data type specified.
"KRN",.84,903621013,-1)
0^13
"KRN",.84,903621013,0)
903621013^1^^^Value not specified
"KRN",.84,903621013,2,0)
^^1^1^3061222.172522
"KRN",.84,903621013,2,1,0)
Value not specified.
"KRN",.84,903621014,-1)
0^14
"KRN",.84,903621014,0)
903621014^1^^^CPT preference entry not found
"KRN",.84,903621014,2,0)
^^1^1^3061222.1727
"KRN",.84,903621014,2,1,0)
CPT preference entry not found.
"KRN",.84,903621015,-1)
0^15
"KRN",.84,903621015,0)
903621015^1^^^Invalid column number
"KRN",.84,903621015,2,0)
^^1^1^3061222.172754
"KRN",.84,903621015,2,1,0)
Invalid column number specified.
"KRN",.84,903621016,-1)
0^16
"KRN",.84,903621016,0)
903621016^1^^^Data value not specified
"KRN",.84,903621016,2,0)
^^1^1^3061222.172851
"KRN",.84,903621016,2,1,0)
Data value not specified.
"KRN",.84,903621017,-1)
0^17
"KRN",.84,903621017,0)
903621017^1^^^CPT category not specified
"KRN",.84,903621017,2,0)
^^1^1^3061222.172926
"KRN",.84,903621017,2,1,0)
CPT category not specified.
"KRN",.84,903621018,-1)
0^18
"KRN",.84,903621018,0)
903621018^1^^^Preference category not specified
"KRN",.84,903621018,2,0)
^^1^1^3061222.172956
"KRN",.84,903621018,2,1,0)
Preference category not specified.
"KRN",.84,903621019,-1)
0^19
"KRN",.84,903621019,0)
903621019^1^^^Unknown category specified
"KRN",.84,903621019,2,0)
^^1^1^3061222.173852
"KRN",.84,903621019,2,1,0)
Unknown category specified.
"KRN",.84,903621020,-1)
0^20
"KRN",.84,903621020,0)
903621020^1^y^^CPT code not valid
"KRN",.84,903621020,2,0)
^^1^1^3061222.173233
"KRN",.84,903621020,2,1,0)
CPT code is not valid: |1|.
"KRN",.84,903621020,3,0)
^.845^1^1
"KRN",.84,903621020,3,1,0)
1^CPT code
"KRN",.84,903621021,-1)
0^21
"KRN",.84,903621021,0)
903621021^1^^^CPT code not specified
"KRN",.84,903621021,2,0)
^^1^1^3061222.173308
"KRN",.84,903621021,2,1,0)
CPT code not specified.
"KRN",.84,903621022,-1)
0^22
"KRN",.84,903621022,0)
903621022^1^^^Missing query criteria
"KRN",.84,903621022,2,0)
^^1^1^3061222.17354
"KRN",.84,903621022,2,1,0)
Missing query criteria: either provider, clinic, or discipline is required.
"KRN",.84,903621023,-1)
0^23
"KRN",.84,903621023,0)
903621023^1^^^Education topic not specified
"KRN",.84,903621023,2,0)
^^1^1^3061222.173609
"KRN",.84,903621023,2,1,0)
Education topic not specified.
"KRN",.84,903621024,-1)
0^24
"KRN",.84,903621024,0)
903621024^1^^^Education topic not recognized
"KRN",.84,903621024,2,0)
^^1^1^3061222.173646
"KRN",.84,903621024,2,1,0)
Education topic not recognized.
"KRN",.84,903621025,-1)
0^25
"KRN",.84,903621025,0)
903621025^1^^^Education topic inactive
"KRN",.84,903621025,2,0)
^^1^1^3061222.17372
"KRN",.84,903621025,2,1,0)
Education topic is inactive.
"KRN",.84,903621026,-1)
0^26
"KRN",.84,903621026,0)
903621026^1^y^^Unrecognized input
"KRN",.84,903621026,2,0)
^.844^1^1^3061223^
"KRN",.84,903621026,2,1,0)
Unrecognized input: |1|
"KRN",.84,903621026,3,0)
^.845^1^1
"KRN",.84,903621026,3,1,0)
1^Input parameter
"KRN",.84,903621027,-1)
0^27
"KRN",.84,903621027,0)
903621027^1^^^Provider not specified
"KRN",.84,903621027,2,0)
^^1^1^3061222.173935
"KRN",.84,903621027,2,1,0)
Provider not specified.
"KRN",.84,903621028,-1)
0^28
"KRN",.84,903621028,0)
903621028^1^^^Provider not in preference file
"KRN",.84,903621028,2,0)
^^1^1^3061222.174059
"KRN",.84,903621028,2,1,0)
The specified provider is not in the preference file.
"KRN",.84,903621029,-1)
0^29
"KRN",.84,903621029,0)
903621029^1^y^^ICD9 code not valid
"KRN",.84,903621029,2,0)
^^1^1^3061222.174324
"KRN",.84,903621029,2,1,0)
The specified ICD9 code is not recognized: |1|.
"KRN",.84,903621029,3,0)
^.845^1^1
"KRN",.84,903621029,3,1,0)
1^ICD9 code
"KRN",.84,903621030,-1)
0^30
"KRN",.84,903621030,0)
903621030^1^^^ICD9 code not specified
"KRN",.84,903621030,2,0)
^^1^1^3061222.174418
"KRN",.84,903621030,2,1,0)
ICD9 code not specified.
"KRN",.84,903621031,-1)
0^31
"KRN",.84,903621031,0)
903621031^1^^^Manager not specified
"KRN",.84,903621031,2,0)
^^1^1^3061222.17462
"KRN",.84,903621031,2,1,0)
Manager not specified.
"KRN",.84,903621032,-1)
0^32
"KRN",.84,903621032,0)
903621032^1^^^Add/delete flag not specified
"KRN",.84,903621032,2,0)
^^1^1^3061222.174702
"KRN",.84,903621032,2,1,0)
Add/delete flag was not specified.
"KRN",.84,903621033,-1)
0^33
"KRN",.84,903621033,0)
903621033^1^^^Item not specified
"KRN",.84,903621033,2,0)
^^1^1^3061222.174806
"KRN",.84,903621033,2,1,0)
Item not specified.
"KRN",.84,903621034,-1)
0^34
"KRN",.84,903621034,0)
903621034^1^^^Display name not specified
"KRN",.84,903621034,2,0)
^^1^1^3061222.174836
"KRN",.84,903621034,2,1,0)
Display name not specified.
"KRN",.84,903621035,-1)
0^35
"KRN",.84,903621035,0)
903621035^1^^^Item not found
"KRN",.84,903621035,2,0)
^^1^1^3061222.174915
"KRN",.84,903621035,2,1,0)
Item not found.
"KRN",.84,903621036,-1)
0^36
"KRN",.84,903621036,0)
903621036^1^^^Unknown file specified
"KRN",.84,903621036,2,0)
^^1^1^3061222.175006
"KRN",.84,903621036,2,1,0)
Unknown file specified.
"KRN",.84,903621037,-1)
0^37
"KRN",.84,903621037,0)
903621037^1^^^Item field not found
"KRN",.84,903621037,2,0)
^^1^1^3061222.175033
"KRN",.84,903621037,2,1,0)
Item field not found.
"KRN",.84,903621038,-1)
0^38
"KRN",.84,903621038,0)
903621038^1^^^Source category not specified
"KRN",.84,903621038,2,0)
^^1^1^3061222.17512
"KRN",.84,903621038,2,1,0)
Source category was not specified.
"KRN",.84,903621039,-1)
0^39
"KRN",.84,903621039,0)
903621039^1^^^Source category does not exist
"KRN",.84,903621039,2,0)
^^1^1^3061222.175156
"KRN",.84,903621039,2,1,0)
Source category does not exist.
"KRN",.84,903621040,-1)
0^40
"KRN",.84,903621040,0)
903621040^1^^^Destination category not specified.
"KRN",.84,903621040,2,0)
^^1^1^3061222.175321
"KRN",.84,903621040,2,1,0)
Destination category not specified.
"KRN",.84,903621041,-1)
0^41
"KRN",.84,903621041,0)
903621041^1^^^Destination category does not exist
"KRN",.84,903621041,2,0)
^^1^1^3061222.175654
"KRN",.84,903621041,2,1,0)
Destination category does not exist.
"KRN",.84,903621042,-1)
0^42
"KRN",.84,903621042,0)
903621042^1^^^Must be category owner
"KRN",.84,903621042,2,0)
^.844^1^1^3061222^
"KRN",.84,903621042,2,1,0)
You must be the owner to edit a category.
"KRN",.84,903621043,-1)
0^43
"KRN",.84,903621043,0)
903621043^1^^^Category name in use
"KRN",.84,903621043,2,0)
^^1^1^3061222.180202
"KRN",.84,903621043,2,1,0)
This category name is in use by another user.
"KRN",.84,903621044,-1)
0^44
"KRN",.84,903621044,0)
903621044^1^^^Query in progress
"KRN",.84,903621044,2,0)
^^1^1^3061222.180358
"KRN",.84,903621044,2,1,0)
A query is already in progress for this category.
"KRN",.84,903621045,-1)
0^45
"KRN",.84,903621045,0)
903621045^1^^^Unable to create problem note
"KRN",.84,903621045,2,0)
^^1^1^3061222.181132
"KRN",.84,903621045,2,1,0)
Unable to create the problem note.
"KRN",.84,903621046,-1)
0^46
"KRN",.84,903621046,0)
903621046^1^^^Note not found
"KRN",.84,903621046,2,0)
^^1^1^3061222.18123
"KRN",.84,903621046,2,1,0)
The problem note was not found.
"KRN",.84,903621047,-1)
0^47
"KRN",.84,903621047,0)
903621047^1^^^Problem ID in use
"KRN",.84,903621047,2,0)
^^1^1^3061222.224943
"KRN",.84,903621047,2,1,0)
The problem ID is already in use.
"KRN",.84,903621048,-1)
0^48
"KRN",.84,903621048,0)
903621048^1^^^Diagnosis code not recognized
"KRN",.84,903621048,2,0)
^^1^1^3061222.225126
"KRN",.84,903621048,2,1,0)
Diagnosis code not recognized.
"KRN",.84,903621049,-1)
0^49
"KRN",.84,903621049,0)
903621049^1^^^Unknown location
"KRN",.84,903621049,2,0)
^^1^1^3061222.225228
"KRN",.84,903621049,2,1,0)
The specified location is unknown.
"KRN",.84,903621050,-1)
0^50
"KRN",.84,903621050,0)
903621050^1^^^Patient not specified
"KRN",.84,903621050,2,0)
^^1^1^3061222.225629
"KRN",.84,903621050,2,1,0)
Patient not specified.
"KRN",.84,903621051,-1)
0^51
"KRN",.84,903621051,0)
903621051^1^y^^Unrecognized item
"KRN",.84,903621051,2,0)
^^1^1^3061222.230214
"KRN",.84,903621051,2,1,0)
Unrecognized item: |1|.
"KRN",.84,903621051,3,0)
^.845^1^1
"KRN",.84,903621051,3,1,0)
1^Item name
"KRN",.84,903621052,-1)
0^52
"KRN",.84,903621052,0)
903621052^1^^^Patient not female
"KRN",.84,903621052,2,0)
^^1^1^3061222.2303
"KRN",.84,903621052,2,1,0)
This patient is not female.
"KRN",.84,903621053,-1)
0^53
"KRN",.84,903621053,0)
903621053^1^^^User Id does not match
"KRN",.84,903621053,2,0)
^^1^1^3061222.230424
"KRN",.84,903621053,2,1,0)
Your user id (DUZ) does not match that of the user currently logged in.
"KRN",.84,903621054,-1)
0^54
"KRN",.84,903621054,0)
903621054^1^^^Missing parameter identifier
"KRN",.84,903621054,2,0)
^^1^1^3061222.230459
"KRN",.84,903621054,2,1,0)
The parameter identifier is missing.
"KRN",.84,903621055,-1)
0^55
"KRN",.84,903621055,0)
903621055^1^^^Parameter value missing
"KRN",.84,903621055,2,0)
^^1^1^3061222.230604
"KRN",.84,903621055,2,1,0)
The parameter value was not specified.
"KRN",.84,903621056,-1)
0^56
"KRN",.84,903621056,0)
903621056^1^^^Unknown file specified for lock
"KRN",.84,903621056,2,0)
^^1^1^3061222.230656
"KRN",.84,903621056,2,1,0)
An unknown file was specified for a record lock.
"KRN",.84,903621057,-1)
0^57
"KRN",.84,903621057,0)
903621057^1^^^Invalid record # for lock
"KRN",.84,903621057,2,0)
^^1^1^3061222.230737
"KRN",.84,903621057,2,1,0)
An invalid record number was specified for the lock request.
"KRN",.84,903621058,-1)
0^58
"KRN",.84,903621058,0)
903621058^1^^^Another user editing entry
"KRN",.84,903621058,2,0)
^^1^1^3061222.230809
"KRN",.84,903621058,2,1,0)
Another user is editing this entry.
"KRN",.84,903621059,-1)
0^59
"KRN",.84,903621059,0)
903621059^1^y^^Routine missing
"KRN",.84,903621059,2,0)
^^1^1^3061222.230901
"KRN",.84,903621059,2,1,0)
A required routine is missing: |1|.
"KRN",.84,903621059,3,0)
^.845^1^1
"KRN",.84,903621059,3,1,0)
1^Routine name
"KRN",.84,903621060,-1)
0^60
"KRN",.84,903621060,0)
903621060^1^y^^Failed to delete entry
"KRN",.84,903621060,2,0)
^^1^1^3061222.231037
"KRN",.84,903621060,2,1,0)
Failed to delete entry in file |1|.
"KRN",.84,903621060,3,0)
^.845^1^1
"KRN",.84,903621060,3,1,0)
1^File name
"KRN",.84,903621061,-1)
0^61
"KRN",.84,903621061,0)
903621061^1^^^Visit is locked
"KRN",.84,903621061,2,0)
^^1^1^3061222.231137
"KRN",.84,903621061,2,1,0)
The data associated with this visit may no longer be modified.
"KRN",.84,903621062,-1)
0^62
"KRN",.84,903621062,0)
903621062^1^^^Visit belongs to another patient
"KRN",.84,903621062,2,0)
^^1^1^3061222.23123
"KRN",.84,903621062,2,1,0)
This visit does not belong to the specified patient.
"KRN",.84,903621063,-1)
0^63
"KRN",.84,903621063,0)
903621063^1^^^Visit deleted
"KRN",.84,903621063,2,0)
^^1^1^3061222.23131
"KRN",.84,903621063,2,1,0)
This visit has been marked as deleted.
"KRN",.84,903621064,-1)
0^64
"KRN",.84,903621064,0)
903621064^1^y^^Operation not valid for visit
"KRN",.84,903621064,2,0)
^^1^1^3061222.231359
"KRN",.84,903621064,2,1,0)
This operation is not valid for a visit category of |1|.
"KRN",.84,903621064,3,0)
^.845^1^1
"KRN",.84,903621064,3,1,0)
1^Service category
"KRN",.84,903621065,-1)
0^65
"KRN",.84,903621065,0)
903621065^1^^^No primary provider for visit
"KRN",.84,903621065,2,0)
^^1^1^3061222.231506
"KRN",.84,903621065,2,1,0)
There is no designated primary provider for this visit.
"KRN",.84,903621066,-1)
0^66
"KRN",.84,903621066,0)
903621066^1^^^Visit date cannot be in future
"KRN",.84,903621066,2,0)
^^1^1^3061222.23154
"KRN",.84,903621066,2,1,0)
The visit date cannot be in the future.
"KRN",.84,903621067,-1)
0^67
"KRN",.84,903621067,0)
903621067^1^^^Unknown refusal type
"KRN",.84,903621067,2,0)
^^1^1^3061225.193248
"KRN",.84,903621067,2,1,0)
The specified refusal type was not recognized.
"KRN",.84,903621068,-1)
0^68
"KRN",.84,903621068,0)
903621068^1^y^^Entity already included in visit
"KRN",.84,903621068,2,0)
^^1^1^3061223.08201
"KRN",.84,903621068,2,1,0)
|1| already recorded for this visit.
"KRN",.84,903621068,3,0)
^.845^1^1
"KRN",.84,903621068,3,1,0)
1^Entity
"KRN",.84,903621069,-1)
0^69
"KRN",.84,903621069,0)
903621069^1^^^Unknown V file
"KRN",.84,903621069,2,0)
^^1^1^3061225.19342
"KRN",.84,903621069,2,1,0)
The specified V file was not recognized.
"KRN",.84,903621070,-1)
0^70
"KRN",.84,903621070,0)
903621070^1^^^Unknown file entry
"KRN",.84,903621070,2,0)
^^1^1^3061223.082356
"KRN",.84,903621070,2,1,0)
The specified record does not exist.
"KRN",.84,903621071,-1)
0^71
"KRN",.84,903621071,0)
903621071^1^^^Patient not in asthma registry
"KRN",.84,903621071,2,0)
^^1^1^3061223.082628
"KRN",.84,903621071,2,1,0)
The patient is not in the Asthma Registry.
"KRN",.84,903621072,-1)
0^72
"KRN",.84,903621072,0)
903621072^1^y^^Unknown record type
"KRN",.84,903621072,2,0)
^^1^1^3061223.082843
"KRN",.84,903621072,2,1,0)
The specified record type is not recognized: |1|.
"KRN",.84,903621072,3,0)
^.845^1^1
"KRN",.84,903621072,3,1,0)
1^Record type
"KRN",.84,903621073,-1)
0^73
"KRN",.84,903621073,0)
903621073^1^^^Not a valid CPT record
"KRN",.84,903621073,2,0)
^^1^1^3061223.082944
"KRN",.84,903621073,2,1,0)
The specified CPT record is not valid.
"KRN",.84,903621074,-1)
0^74
"KRN",.84,903621074,0)
903621074^1^^^CPT code inactive
"KRN",.84,903621074,2,0)
^^1^1^3061223.083015
"KRN",.84,903621074,2,1,0)
The specified CPT code is marked as inactive.
"KRN",.84,903621075,-1)
0^75
"KRN",.84,903621075,0)
903621075^1^^^CPT code deleted
"KRN",.84,903621075,2,0)
^^1^1^3061223.083044
"KRN",.84,903621075,2,1,0)
The specified CPT code is marked as deleted.
"KRN",.84,903621076,-1)
0^76
"KRN",.84,903621076,0)
903621076^1^^^Visit not emergency room
"KRN",.84,903621076,2,0)
^^1^1^3061223.083222
"KRN",.84,903621076,2,1,0)
The current visit location is not emergency room.
"KRN",.84,903621077,-1)
0^77
"KRN",.84,903621077,0)
903621077^1^^^Missing exam type
"KRN",.84,903621077,2,0)
^^1^1^3061223.083303
"KRN",.84,903621077,2,1,0)
The exam type was not specified.
"KRN",.84,903621078,-1)
0^78
"KRN",.84,903621078,0)
903621078^1^^^Refusal item not specified
"KRN",.84,903621078,2,0)
^^1^1^3061223.08351
"KRN",.84,903621078,2,1,0)
The refusal item was not specified.
"KRN",.84,903621079,-1)
0^79
"KRN",.84,903621079,0)
903621079^1^^^Infant feeding option not specified
"KRN",.84,903621079,2,0)
^^1^1^3061223.083545
"KRN",.84,903621079,2,1,0)
The infant feeding option was not specified.
"KRN",.84,903621080,-1)
0^80
"KRN",.84,903621080,0)
903621080^1^^^Immunization not found
"KRN",.84,903621080,2,0)
^.844^1^1^3061223^
"KRN",.84,903621080,2,1,0)
The specified immunization was not recognized.
"KRN",.84,903621081,-1)
0^81
"KRN",.84,903621081,0)
903621081^1^y^^Immunization already recorded
"KRN",.84,903621081,2,0)
^^1^1^3061223.083713
"KRN",.84,903621081,2,1,0)
A |1| has already been recorded for this date.
"KRN",.84,903621081,3,0)
^.845^1^1
"KRN",.84,903621081,3,1,0)
1^Immunization type
"KRN",.84,903621082,-1)
0^82
"KRN",.84,903621082,0)
903621082^1^y^^Immunization package error
"KRN",.84,903621082,2,0)
^^1^1^3061223.084504
"KRN",.84,903621082,2,1,0)
The immunization package has reported an error: |1|
"KRN",.84,903621082,3,0)
^.845^1^1
"KRN",.84,903621082,3,1,0)
1^Error text
"KRN",.84,903621083,-1)
0^83
"KRN",.84,903621083,0)
903621083^1^^^Patient not in immunization registry
"KRN",.84,903621083,2,0)
^^1^1^3061223.085121
"KRN",.84,903621083,2,1,0)
The specified patient is not registered in the immunization package.
"KRN",.84,903621084,-1)
0^84
"KRN",.84,903621084,0)
903621084^1^^^Vaccine not recognized
"KRN",.84,903621084,2,0)
^^1^1^3061223.085159
"KRN",.84,903621084,2,1,0)
The specified vaccine is not recognized.
"KRN",.84,903621085,-1)
0^85
"KRN",.84,903621085,0)
903621085^1^^^Contraindication not on file
"KRN",.84,903621085,2,0)
^^1^1^3061223.085251
"KRN",.84,903621085,2,1,0)
The specified contraindication is not on file.
"KRN",.84,903621086,-1)
0^86
"KRN",.84,903621086,0)
903621086^1^y^^Measurement only editable by author
"KRN",.84,903621086,2,0)
^^1^1^3061223.085339
"KRN",.84,903621086,2,1,0)
This measurement can only be edited by the author (|1|).
"KRN",.84,903621086,3,0)
^.845^1^1
"KRN",.84,903621086,3,1,0)
1^Author name
"KRN",.84,903621087,-1)
0^87
"KRN",.84,903621087,0)
903621087^1^^^Invalid measurement type
"KRN",.84,903621087,2,0)
^^1^1^3061223.085415
"KRN",.84,903621087,2,1,0)
The specified measurement type is invalid.
"KRN",.84,903621088,-1)
0^88
"KRN",.84,903621088,0)
903621088^1^^^Unknown education topic
"KRN",.84,903621088,2,0)
^^1^1^3061223.085504
"KRN",.84,903621088,2,1,0)
The specified education topic does not exist.
"KRN",.84,903621089,-1)
0^89
"KRN",.84,903621089,0)
903621089^1^^^Not primary provider
"KRN",.84,903621089,2,0)
^^1^1^3061223.085632
"KRN",.84,903621089,2,1,0)
You are not the primary provider for this visit.
"KRN",.84,903621090,-1)
0^90
"KRN",.84,903621090,0)
903621090^1^^^No primary provider note
"KRN",.84,903621090,2,0)
^^1^1^3061223.085723
"KRN",.84,903621090,2,1,0)
There is no note signed by the primary provider.
"KRN",.84,903621091,-1)
0^91
"KRN",.84,903621091,0)
903621091^1^^^Missing V POV record
"KRN",.84,903621091,2,0)
^^1^1^3061223.085749
"KRN",.84,903621091,2,1,0)
The specified V POV record is missing.
"KRN",.84,903621092,-1)
0^92
"KRN",.84,903621092,0)
903621092^1^^^Invalid ICD9 code
"KRN",.84,903621092,2,0)
^^1^1^3061223.085945
"KRN",.84,903621092,2,1,0)
The specified ICD9 code is not recognized.
"KRN",.84,903621093,-1)
0^93
"KRN",.84,903621093,0)
903621093^1^^^ICD9 code not active
"KRN",.84,903621093,2,0)
^^1^1^3061223.090045
"KRN",.84,903621093,2,1,0)
The specified ICD9 code is not active.
"KRN",.84,903621094,-1)
0^94
"KRN",.84,903621094,0)
903621094^1^^^Unknown POV
"KRN",.84,903621094,2,0)
^^1^1^3061223.090157
"KRN",.84,903621094,2,1,0)
The specified purpose of visit code is not recognized.
"KRN",.84,903621095,-1)
0^95
"KRN",.84,903621095,0)
903621095^1^^^ICD9 code does not apply
"KRN",.84,903621095,2,0)
^^1^1^3061223.090322
"KRN",.84,903621095,2,1,0)
The specified ICD9 code does not apply to this patient's gender.
"KRN",.84,903621096,-1)
0^96
"KRN",.84,903621096,0)
903621096^1^^^Unknown procedure type
"KRN",.84,903621096,2,0)
^^1^1^3061223.090358
"KRN",.84,903621096,2,1,0)
The specified procedure type is not recognized.
"KRN",.84,903621097,-1)
0^97
"KRN",.84,903621097,0)
903621097^1^^^Procedure inactive
"KRN",.84,903621097,2,0)
^^1^1^3061223.090434
"KRN",.84,903621097,2,1,0)
The specified procedure type is marked as inactive.
"KRN",.84,903621098,-1)
0^98
"KRN",.84,903621098,0)
903621098^1^y^^Already has primary provider
"KRN",.84,903621098,2,0)
^^1^1^3061223.090537
"KRN",.84,903621098,2,1,0)
|1| is already designated as the primary provider.
"KRN",.84,903621098,3,0)
^.845^1^1
"KRN",.84,903621098,3,1,0)
1^Provider name
"KRN",.84,903621099,-1)
0^99
"KRN",.84,903621099,0)
903621099^1^^^Trans code not specified
"KRN",.84,903621099,2,0)
^^1^1^3061223.090706
"KRN",.84,903621099,2,1,0)
A transaction code was not specified.
"KRN",.84,903621100,-1)
0^100
"KRN",.84,903621100,0)
903621100^1^^^Unknown trans code
"KRN",.84,903621100,2,0)
^.844^1^1^3061223^
"KRN",.84,903621100,2,1,0)
The specified transaction code is not recognized.
"KRN",.84,903621101,-1)
0^101
"KRN",.84,903621101,0)
903621101^1^^^Trans code inactive
"KRN",.84,903621101,2,0)
^^1^1^3061223.090908
"KRN",.84,903621101,2,1,0)
The specified transaction code is marked as inactive.
"KRN",.84,903621102,-1)
0^102
"KRN",.84,903621102,0)
903621102^1^^^User not specified
"KRN",.84,903621102,2,0)
^^1^1^3061223.090946
"KRN",.84,903621102,2,1,0)
A user was not specified.
"KRN",.84,903621103,-1)
0^103
"KRN",.84,903621103,0)
903621103^1^^^Unknown user
"KRN",.84,903621103,2,0)
^^1^1^3061223.091019
"KRN",.84,903621103,2,1,0)
The specified user was not recognized.
"KRN",.84,903621104,-1)
0^104
"KRN",.84,903621104,0)
903621104^1^^^Activity time record not on file
"KRN",.84,903621104,2,0)
^^1^1^3061223.091053
"KRN",.84,903621104,2,1,0)
The specified activity time record does not exist.
"KRN",.84,903621105,-1)
0^105
"KRN",.84,903621105,0)
903621105^1^^^Provider does not match activity record
"KRN",.84,903621105,2,0)
^^1^1^3061223.091242
"KRN",.84,903621105,2,1,0)
The specified provider does not match this activity record.
"KRN",.84,903621106,-1)
0^106
"KRN",.84,903621106,0)
903621106^1^^^Must be primary to delete
"KRN",.84,903621106,2,0)
^^1^1^3061223.091406
"KRN",.84,903621106,2,1,0)
To delete this record, you must either be the person that entered it or be designated as the primary provider for the visit.
"KRN",.84,903621107,-1)
0^107
"KRN",.84,903621107,0)
903621107^1^^^Cannot delete link
"KRN",.84,903621107,2,0)
^^1^1^3061223.091501
"KRN",.84,903621107,2,1,0)
This link was created by another user.  You may not delete it.
"KRN",.84,903621108,-1)
0^108
"KRN",.84,903621108,0)
903621108^1^^^Unrecognized link type specifier
"KRN",.84,903621108,2,0)
^^1^1^3061223.091546
"KRN",.84,903621108,2,1,0)
The link type specifier was not recognized.
"KRN",.84,903621109,-1)
0^109
"KRN",.84,903621109,0)
903621109^1^^^Missing pointer value
"KRN",.84,903621109,2,0)
^^1^1^3061223.091613
"KRN",.84,903621109,2,1,0)
The pointer value for the link was not specified.
"KRN",19.1,514,-1)
0^1
"KRN",19.1,514,0)
BGOZ CAC^CLINICAL APP COORDINATOR
"KRN",19.1,514,1,0)
^^1^1^3070403.133219
"KRN",19.1,514,1,1,0)
This key allows for full manipulation of all pick lists.
"KRN",19.1,514,1,2,0)
 managment of queues.
"KRN",19.1,514,1,3,0)

"KRN",8994,2754,-1)
0^6
"KRN",8994,2754,0)
BGOUTL GETCLN^GETCLN^BGOUTL^1
"KRN",8994,2754,1,0)
^^1^1^3061201.091628
"KRN",8994,2754,1,1,0)
Return clinic stop associated with a location.
"KRN",8994,2754,2,0)
^8994.02A^1^1
"KRN",8994,2754,2,1,0)
IEN^1^^1^1
"KRN",8994,2754,2,1,1,0)
^^1^1^3061201.091656
"KRN",8994,2754,2,1,1,1,0)
IEN of Hospital Location entry.
"KRN",8994,2754,2,"B","IEN",1)

"KRN",8994,2754,2,"PARAMSEQ",1,1)

"KRN",8994,2754,3,0)
^^1^1^3061201.091708
"KRN",8994,2754,3,1,0)
Name^Code
"KRN",8994,2755,-1)
0^8
"KRN",8994,2755,0)
BGOUTL GETRPT^GETRPT^BGOUTL^4^^^^1
"KRN",8994,2755,1,0)
^^1^1^3061201.092535
"KRN",8994,2755,1,1,0)
Retrieve visit detail report.
"KRN",8994,2755,2,0)
^8994.02A^1^1
"KRN",8994,2755,2,1,0)
VIEN^1^^1^1
"KRN",8994,2755,2,1,1,0)
^^1^1^3061201.092545
"KRN",8994,2755,2,1,1,1,0)
Visit file IEN
"KRN",8994,2755,2,"B","VIEN",1)

"KRN",8994,2755,2,"PARAMSEQ",1,1)

"KRN",8994,2755,3,0)
^^1^1^3061201.092557
"KRN",8994,2755,3,1,0)
Text of visit detail report.
"KRN",8994,2756,-1)
0^1
"KRN",8994,2756,0)
BGOUTL CHKSEC^CHKSEC^BGOUTL^1
"KRN",8994,2756,1,0)
^8994.01^1^1^3061201^
"KRN",8994,2756,1,1,0)
Check security keys and parameters.
"KRN",8994,2756,2,0)
^8994.02A^1^1
"KRN",8994,2756,2,1,0)
INP^1^^1^1
"KRN",8994,2756,2,1,1,0)
^8994.021^1^1^3061201^
"KRN",8994,2756,2,1,1,1,0)
<key 1>|<key 2>|...|<key n>^<param 1>|<param 2>|...|<param n>^User IEN (optional)
"KRN",8994,2756,2,"B","INP",1)

"KRN",8994,2756,2,"PARAMSEQ",1,1)

"KRN",8994,2756,3,0)
^8994.03^6^6^3061201^
"KRN",8994,2756,3,1,0)
<key 1>|<key 2>|...|<key n>^<param 1>|<param 2>|...|<param n>
"KRN",8994,2756,3,2,0)
  where <key n> is boolean value for presence of key
"KRN",8994,2756,3,3,0)
  and <param n> is of the format <user setting>~<user class name>
"KRN",8994,2756,3,4,0)
  where <user setting> is the user setting for the parameter and
"KRN",8994,2756,3,5,0)
  <user class name> is the user class that has a true value for
"KRN",8994,2756,3,6,0)
  the parameter. 
"KRN",8994,2757,-1)
0^7
"KRN",8994,2757,0)
BGOUTL GETPARM^GETPARM^BGOUTL^1
"KRN",8994,2757,1,0)
^^1^1^3061201.101124
"KRN",8994,2757,1,1,0)
Return a BGO parameter value.
"KRN",8994,2757,2,0)
^8994.02A^1^1
"KRN",8994,2757,2,1,0)
PID^1^^1^1
"KRN",8994,2757,2,1,1,0)
^^2^2^3061201.101201
"KRN",8994,2757,2,1,1,1,0)
Failure: -n^error text
"KRN",8994,2757,2,1,1,2,0)
Success: Parameter value 
"KRN",8994,2757,2,"B","PID",1)

"KRN",8994,2757,2,"PARAMSEQ",1,1)

"KRN",8994,2758,-1)
0^10
"KRN",8994,2758,0)
BGOUTL ICDLEXCD^ICDLEXCD^BGOUTL^1^^^^1
"KRN",8994,2758,1,0)
^8994.01^1^1^3061201.104643
"KRN",8994,2758,1,1,0)
Get ICD IEN from lexicon IEN.
"KRN",8994,2758,2,0)
^8994.02A^1^1
"KRN",8994,2758,2,1,0)
LEX^1^^1^1
"KRN",8994,2758,2,1,1,0)
^^1^1^3061201.104703
"KRN",8994,2758,2,1,1,1,0)
IEN of entry in Lexicon.
"KRN",8994,2758,2,"B","LEX",1)

"KRN",8994,2758,2,"PARAMSEQ",1,1)

"KRN",8994,2758,3,0)
^^1^1^3061201.104721
"KRN",8994,2758,3,1,0)
IEN of entry in ICD Diagnosis file.
"KRN",8994,2759,-1)
0^13
"KRN",8994,2759,0)
BGOUTL SETPARM^SETPARM^BGOUTL^1
"KRN",8994,2759,1,0)
^^1^1^3061201.100329
"KRN",8994,2759,1,1,0)
Set a BGO parameter value.
"KRN",8994,2759,2,0)
^8994.02A^1^1
"KRN",8994,2759,2,1,0)
INP^1^^1^1
"KRN",8994,2759,2,1,1,0)
^^3^3^3061219.115038
"KRN",8994,2759,2,1,1,1,0)
Parameter ID ^ Parameter Value ^ Entity (optional)
"KRN",8994,2759,2,1,1,2,0)

"KRN",8994,2759,2,1,1,3,0)
If entity is not specified, it defaults to USR.
"KRN",8994,2759,2,"B","INP",1)

"KRN",8994,2759,2,"PARAMSEQ",1,1)

"KRN",8994,2759,3,0)
^8994.03^2^2^3061219^
"KRN",8994,2759,3,1,0)
Failure: -n^error text
"KRN",8994,2759,3,2,0)
Success: null 
"KRN",8994,2760,-1)
0^9
"KRN",8994,2760,0)
BGOUTL ICDLEX^ICDLEX^BGOUTL^2^^^^1
"KRN",8994,2760,1,0)
^8994.01^1^1^3061201.105422
"KRN",8994,2760,1,1,0)
Lexicon ICD9 lookup.
"KRN",8994,2760,2,0)
^8994.02A^1^1
"KRN",8994,2760,2,1,0)
TERM^1^^1^1
"KRN",8994,2760,2,1,1,0)
^^1^1^3061201.105435
"KRN",8994,2760,2,1,1,1,0)
Term to lookup.
"KRN",8994,2760,2,"B","TERM",1)

"KRN",8994,2760,2,"PARAMSEQ",1,1)

"KRN",8994,2761,-1)
0^11
"KRN",8994,2761,0)
BGOUTL LEXLKUP^LEXLKUP^BGOUTL^2^^^^1
"KRN",8994,2761,1,0)
^^1^1^3061201.154745
"KRN",8994,2761,1,1,0)
Perform lookup in lexicon.
"KRN",8994,2761,2,0)
^8994.02A^1^1
"KRN",8994,2761,2,1,0)
INP^1^^1^1
"KRN",8994,2761,2,1,1,0)
^^1^1^3061201.154831
"KRN",8994,2761,2,1,1,1,0)
Term ^ Type (ICD/CHP)
"KRN",8994,2761,2,"B","INP",1)

"KRN",8994,2761,2,"PARAMSEQ",1,1)

"KRN",8994,2762,-1)
0^2
"KRN",8994,2762,0)
BGOUTL CPTLEXCD^CPTLEXCD^BGOUTL^1
"KRN",8994,2762,1,0)
^^1^1^3061201.155718
"KRN",8994,2762,1,1,0)
Get CPT IEN from lexicon IEN.
"KRN",8994,2762,2,0)
^8994.02A^1^1
"KRN",8994,2762,2,1,0)
LEX^1^^1^1
"KRN",8994,2762,2,1,1,0)
^^1^1^3061201.155733
"KRN",8994,2762,2,1,1,1,0)
IEN of entry in Lexicon.
"KRN",8994,2762,2,"B","LEX",1)

"KRN",8994,2762,2,"PARAMSEQ",1,1)

"KRN",8994,2762,3,0)
^^1^1^3061201.155751
"KRN",8994,2762,3,1,0)
IEN of corresponding entry in CPT Procedure file.
"KRN",8994,2763,-1)
0^5
"KRN",8994,2763,0)
BGOUTL FIRVIS^FIRVIS^BGOUTL^1
"KRN",8994,2763,1,0)
^^1^1^3061202.004637
"KRN",8994,2763,1,1,0)
Returns 1 if a visit exists for current day.
"KRN",8994,2763,2,0)
^8994.02A^1^1
"KRN",8994,2763,2,1,0)
DFN^1^^1^1
"KRN",8994,2763,2,1,1,0)
^^1^1^3061202.004652
"KRN",8994,2763,2,1,1,1,0)
Patient IEN
"KRN",8994,2763,2,"B","DFN",1)

"KRN",8994,2763,2,"PARAMSEQ",1,1)

"KRN",8994,2763,3,0)
^^2^2^3061202.004745
"KRN",8994,2763,3,1,0)
Failure: -n^error text
"KRN",8994,2763,3,2,0)
Success: 0 = no visit on current day; 1 = visit found on current day
"KRN",8994,2764,-1)
0^15
"KRN",8994,2764,0)
BGOUTL VCLN^VCLN^BGOUTL^1
"KRN",8994,2764,1,0)
^^1^1^3061202.005812
"KRN",8994,2764,1,1,0)
Returns the clinic stop code associated with the specified visit.
"KRN",8994,2764,2,0)
^8994.02A^1^1
"KRN",8994,2764,2,1,0)
VIEN^1^^1^1
"KRN",8994,2764,2,1,1,0)
^^1^1^3061202.005306
"KRN",8994,2764,2,1,1,1,0)
Visit IEN
"KRN",8994,2764,2,"B","VIEN",1)

"KRN",8994,2764,2,"PARAMSEQ",1,1)

"KRN",8994,2764,3,0)
^^1^1^3061202.00583
"KRN",8994,2764,3,1,0)
Clinic stop code associated with a visit.
"KRN",8994,2765,-1)
0^3
"KRN",8994,2765,0)
BGOUTL DICLKUP^DICLKUP^BGOUTL^4^^^^1
"KRN",8994,2765,1,0)
^^1^1^3061205.102108
"KRN",8994,2765,1,1,0)
Fileman Lookup utility
"KRN",8994,2765,2,0)
^8994.02A^1^1
"KRN",8994,2765,2,1,0)
INP^1^^1^1
"KRN",8994,2765,2,1,1,0)
^8994.021^13^13^3061205^
"KRN",8994,2765,2,1,1,1,0)
File [1] ^ Lookup Value [2] ^ From [3] ^ Direction [4] ^ Maximum [5] ^ 
"KRN",8994,2765,2,1,1,2,0)
Cross Ref [6] ^ Screen [7] ^ All [8] ^ Fields [9]
"KRN",8994,2765,2,1,1,3,0)

"KRN",8994,2765,2,1,1,4,0)
where
"KRN",8994,2765,2,1,1,5,0)
  File         = File global root (open or closed, without leading ^) or file
"KRN",8994,2765,2,1,1,6,0)
  Lookup Value = Value to look up
"KRN",8994,2765,2,1,1,7,0)
  From         = Text from which to start search
"KRN",8994,2765,2,1,1,8,0)
  Direction    = Search direction (defaults to 1)
"KRN",8994,2765,2,1,1,9,0)
  Maximum      = Maximum # to return (defaults to 44)
"KRN",8994,2765,2,1,1,10,0)
  Cross Ref    = Cross ref to use (defaults to "B")
"KRN",8994,2765,2,1,1,11,0)
  Screen       = Screening logic (e.g.  => .04 ="TEST";.07 =83)
"KRN",8994,2765,2,1,1,12,0)
  All          = Return all records, maximum of 9999
"KRN",8994,2765,2,1,1,13,0)
  Fields       = Fields to return 
"KRN",8994,2765,2,"B","INP",1)

"KRN",8994,2765,2,"PARAMSEQ",1,1)

"KRN",8994,2765,3,0)
^^3^3^3061205.102529
"KRN",8994,2765,3,1,0)
List of records in the format:
"KRN",8994,2765,3,2,0)

"KRN",8994,2765,3,3,0)
IEN ^ Next ^ Internal Value
"KRN",8994,2766,-1)
0^12
"KRN",8994,2766,0)
BGOUTL LOCK^LOCK^BGOUTL^1
"KRN",8994,2766,1,0)
^^1^1^3061214.162406
"KRN",8994,2766,1,1,0)
Locks or unlocks a record in a file.
"KRN",8994,2766,2,0)
^8994.02A^1^1
"KRN",8994,2766,2,1,0)
INP^1^^1^1
"KRN",8994,2766,2,1,1,0)
^^5^5^3061214.162521
"KRN",8994,2766,2,1,1,1,0)
File # ^ IEN ^ Unlock Flag
"KRN",8994,2766,2,1,1,2,0)

"KRN",8994,2766,2,1,1,3,0)
If unlock flag is zero or not specified, a lock operation is performed.
"KRN",8994,2766,2,1,1,4,0)
Otherwise, the lock count on the record is decremented and if the lock
"KRN",8994,2766,2,1,1,5,0)
count is zero, the record is unlocked.
"KRN",8994,2766,2,"B","INP",1)

"KRN",8994,2766,2,"PARAMSEQ",1,1)

"KRN",8994,2766,3,0)
^^3^3^3061214.163928
"KRN",8994,2766,3,1,0)
Failure: -n^error text
"KRN",8994,2766,3,2,0)
Success: 1 if successful (lock and unlock)
"KRN",8994,2766,3,3,0)
         0 if record already unlocked (unlock only)
"KRN",8994,2767,-1)
0^16
"KRN",8994,2767,0)
BGOUTL VFDEL^VFDEL^BGOUTL^1
"KRN",8994,2767,1,0)
^8994.01^1^1^3061218.225815
"KRN",8994,2767,1,1,0)
Deletes the specified V file entry.
"KRN",8994,2767,2,0)
^8994.02A^1^1
"KRN",8994,2767,2,1,0)
INP^1^^1^1
"KRN",8994,2767,2,1,1,0)
^^1^1^3061218.225908
"KRN",8994,2767,2,1,1,1,0)
V File # ^ V File IEN
"KRN",8994,2767,2,"B","INP",1)

"KRN",8994,2767,2,"PARAMSEQ",1,1)

"KRN",8994,2767,3,0)
^^2^2^3061218.225926
"KRN",8994,2767,3,1,0)
Failure: -n^error text
"KRN",8994,2767,3,2,0)
Success: null 
"KRN",8994,2768,-1)
0^4
"KRN",8994,2768,0)
BGOUTL DICLKUP2^DICLKUP2^BGOUTL^4^^^^1
"KRN",8994,2768,1,0)
^8994.01^1^1^3061205.102108
"KRN",8994,2768,1,1,0)
Fileman Lookup utility
"KRN",8994,2768,2,0)
^8994.02A^1^1
"KRN",8994,2768,2,1,0)
INP^1^^1^1
"KRN",8994,2768,2,1,1,0)
^^13^13^3070521.110022
"KRN",8994,2768,2,1,1,1,0)
File [1] ^ Lookup Value [2] ^ From [3] ^ Direction [4] ^ Maximum [5] ^ 
"KRN",8994,2768,2,1,1,2,0)
Cross Ref [6] ^ Screen [7] ^ All [8] ^ Fields [9]
"KRN",8994,2768,2,1,1,3,0)

"KRN",8994,2768,2,1,1,4,0)
where
"KRN",8994,2768,2,1,1,5,0)
  File         = File global root (open or closed, without leading ^) or file
"KRN",8994,2768,2,1,1,6,0)
  Lookup Value = Value to look up
"KRN",8994,2768,2,1,1,7,0)
  From         = Text from which to start search
"KRN",8994,2768,2,1,1,8,0)
  Direction    = Search direction (not supported)
"KRN",8994,2768,2,1,1,9,0)
  Maximum      = Maximum # to return (defaults to 44)
"KRN",8994,2768,2,1,1,10,0)
  Cross Ref    = Cross ref to use (defaults to "B")
"KRN",8994,2768,2,1,1,11,0)
  Screen       = Screening logic (e.g.  => .04 ="TEST";.07 =83)
"KRN",8994,2768,2,1,1,12,0)
  All          = Return all records, maximum of 9999
"KRN",8994,2768,2,1,1,13,0)
  Fields       = Fields to return 
"KRN",8994,2768,2,"B","INP",1)

"KRN",8994,2768,2,"PARAMSEQ",1,1)

"KRN",8994,2768,3,0)
^^3^3^3061205.102529
"KRN",8994,2768,3,1,0)
List of records in the format:
"KRN",8994,2768,3,2,0)

"KRN",8994,2768,3,3,0)
IEN ^ Next ^ Internal Value
"KRN",8994,2769,-1)
0^18
"KRN",8994,2769,0)
BGOUTL3 GETSET^GETSET^BGOUTL3^2^^^^1
"KRN",8994,2769,1,0)
^8994.01^1^1^3120316.110309
"KRN",8994,2769,1,1,0)
Return a set of codes from a field in a file
"KRN",8994,2769,2,0)
^8994.02A^3^3
"KRN",8994,2769,2,1,0)
BGOFILE^1^^1^1
"KRN",8994,2769,2,1,1,0)
^^1^1^3120316.110332
"KRN",8994,2769,2,1,1,1,0)
File number to check
"KRN",8994,2769,2,2,0)
BGOFLD^1^^1^2
"KRN",8994,2769,2,2,1,0)
^^1^1^3120316.110346
"KRN",8994,2769,2,2,1,1,0)
Field number in the file
"KRN",8994,2769,2,3,0)
BGOCHK^1^^^3
"KRN",8994,2769,2,3,1,0)
^^3^3^3120316.11044
"KRN",8994,2769,2,3,1,1,0)
Name of item if file has rules for particular item.
"KRN",8994,2769,2,3,1,2,0)
Example is exam. Some exams exclude certain sets of codes.
"KRN",8994,2769,2,3,1,3,0)
This parameter would contain the name of the exam to do that check.
"KRN",8994,2769,2,"B","BGOCHK",3)

"KRN",8994,2769,2,"B","BGOFILE",1)

"KRN",8994,2769,2,"B","BGOFLD",2)

"KRN",8994,2769,2,"PARAMSEQ",1,1)

"KRN",8994,2769,2,"PARAMSEQ",2,2)

"KRN",8994,2769,2,"PARAMSEQ",3,3)

"KRN",8994,2769,3,0)
^^21^21^3120316.110626
"KRN",8994,2769,3,1,0)
Array of items found
"KRN",8994,2769,3,2,0)
Example below is injection site for V immunization file
"KRN",8994,2769,3,3,0)

"KRN",8994,2769,3,4,0)
EHRD>D GETSET^BGOUTL3(.RET,9000010.11,.09,"")
"KRN",8994,2769,3,5,0)
 
"KRN",8994,2769,3,6,0)
EHRD>ZW RET
"KRN",8994,2769,3,7,0)
RET=""
"KRN",8994,2769,3,8,0)
RET(1)="LTI^Left thigh im"
"KRN",8994,2769,3,9,0)
RET(2)="LTS^Left thigh sq"
"KRN",8994,2769,3,10,0)
RET(3)="RTI^Right thigh im"
"KRN",8994,2769,3,11,0)
RET(4)="RTS^Right thigh sq"
"KRN",8994,2769,3,12,0)
RET(5)="BTI^Both thighs im"
"KRN",8994,2769,3,13,0)
RET(6)="LDI^Left deltoid im"
"KRN",8994,2769,3,14,0)
RET(7)="LAS^Left arm sq"
"KRN",8994,2769,3,15,0)
RET(8)="RDI^Right deltoid im"
"KRN",8994,2769,3,16,0)
RET(9)="RAS^Right arm sq"
"KRN",8994,2769,3,17,0)
RET(10)="O^Oral"
"KRN",8994,2769,3,18,0)
RET(11)="IN^Intranasal"
"KRN",8994,2769,3,19,0)
RET(12)="LID^Left arm intradermal"
"KRN",8994,2769,3,20,0)
RET(13)="RID^Right arm intradermal"
"KRN",8994,2769,3,21,0)

"KRN",8994,2770,-1)
0^17
"KRN",8994,2770,0)
BGOUTL2 SUBSET^SUBSET^BGOUTL2^4^^^^1
"KRN",8994,2770,1,0)
^8994.01^1^1^3130424^
"KRN",8994,2770,1,1,0)
Return a list of items in a subset
"KRN",8994,2770,2,0)
^8994.02A^1^1
"KRN",8994,2770,2,1,0)
SUBSET^1^^1^1
"KRN",8994,2770,2,1,1,0)
^^13^13^3130424.154019
"KRN",8994,2770,2,1,1,1,0)
Name of subset to search for.
"KRN",8994,2770,2,1,1,2,0)

"KRN",8994,2770,2,1,1,3,0)
^TMP("BGOSN",4940,1)="160425006^250101013^FH: Chromosomal anomaly"
"KRN",8994,2770,2,1,1,4,0)
^TMP("BGOSN",4940,2)="429950008^2764072010^Family history of attention deficit hyperactivity disorder"
"KRN",8994,2770,2,1,1,5,0)
^TMP("BGOSN",4940,3)="412749001^2474306014^Family history of development disorder"
"KRN",8994,2770,2,1,1,6,0)
^TMP("BGOSN",4940,4)="160324006^249846013^Family history of mental disorder"
"KRN",8994,2770,2,1,1,7,0)
^TMP("BGOSN",4940,5)="412750001^2474307017^Family history of autism"
"KRN",8994,2770,2,1,1,8,0)
^TMP("BGOSN",4940,6)="275937001^411910010^Family history of cancer"
"KRN",8994,2770,2,1,1,9,0)
^TMP("BGOSN",4940,7)="266883004^397670017^Family history of neoplasm"
"KRN",8994,2770,2,1,1,10,0)
^TMP("BGOSN",4940,8)="312824007^456612019^Family history of cancer of colon"
"KRN",8994,2770,2,1,1,11,0)
^TMP("BGOSN",4940,9)="275109007^411038017^FH: Bowel cancer"
"KRN",8994,2770,2,1,1,12,0)
^TMP("BGOSN",4940,10)="430329007^2765394018^Family history of celiac disease"
"KRN",8994,2770,2,1,1,13,0)
^TMP("BGOSN",4940,11)="160381001^250000012^FH: Gastrointestinal disease"
"KRN",8994,2770,2,"B","SUBSET",1)

"KRN",8994,2770,2,"PARAMSEQ",1,1)

"KRN",8994,2771,-1)
0^14
"KRN",8994,2771,0)
BGOUTL SNMDCONC^SNMDCONC^BGOUTL2^1
"KRN",8994,2771,1,0)
^^7^7^3130808.203512
"KRN",8994,2771,1,1,0)
Return SNOMED information for a given Concept ID
"KRN",8994,2771,1,2,0)
Function returns - [1]^[2]^[3]^[4]^[5]
"KRN",8994,2771,1,3,0)
[1] - Description Id of Fully Specified Name
"KRN",8994,2771,1,4,0)
[2] - Fully Specified Name
"KRN",8994,2771,1,5,0)
[3] - Description Id of Preferred Term
"KRN",8994,2771,1,6,0)
[4] - Preferred Term
"KRN",8994,2771,1,7,0)
[5] - ICD-9 code(s)
"KRN",8994,2771,2,0)
^8994.02A^1^1
"KRN",8994,2771,2,1,0)
CONCID^1^^1^1
"KRN",8994,2771,2,1,1,0)
^^1^1^3130808.203153
"KRN",8994,2771,2,1,1,1,0)
SNOMED Concept ID
"KRN",8994,2771,2,"B","CONCID",1)

"KRN",8994,2771,2,"PARAMSEQ",1,1)

"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","AUPNSICD")
0^5^B84539137
"RTN","AUPNSICD",1,0)
AUPNSICD ; IHS/CMI/LAB - Screen Purpose of Visit/ICD9 codes 24-MAY-1993 ;13-Jul-2015 15:20;DKM
"RTN","AUPNSICD",2,0)
 ;;2.0;IHS PCC SUITE;**2,10**;MAY 14, 2009;Build 15
"RTN","AUPNSICD",3,0)
 ;IHS/TUCSON/LAB - added checks for filegram and CHS, do not
"RTN","AUPNSICD",4,0)
 ;execute screen if in chs or filegrams 03/18/96 PATCH 4
"RTN","AUPNSICD",5,0)
 I $$CHK(Y)
"RTN","AUPNSICD",6,0)
 Q:$D(^ICD9(Y))
"RTN","AUPNSICD",7,0)
 Q
"RTN","AUPNSICD",8,0)
IMP(D) ;PEP - which coding system should be used:
"RTN","AUPNSICD",9,0)
 ;RETURN IEN of entry in ^ICDS
"RTN","AUPNSICD",10,0)
 ;1 = ICD9
"RTN","AUPNSICD",11,0)
 ;30 = ICD10
"RTN","AUPNSICD",12,0)
 ;will need to add subroutines for ICD11 when we have that.
"RTN","AUPNSICD",13,0)
 I $G(D)="" S D=DT
"RTN","AUPNSICD",14,0)
 NEW X,Y,Z
"RTN","AUPNSICD",15,0)
 I '$O(^ICDS("F",80,0)) Q 1
"RTN","AUPNSICD",16,0)
 S Y=""
"RTN","AUPNSICD",17,0)
 S X=0 F  S X=$O(^ICDS("F",80,X)) Q:X'=+X  D
"RTN","AUPNSICD",18,0)
 .I $P(^ICDS(X,0),U,4)="" Q   ;NO IMPLEMENTATION DATE?? SKIP IT
"RTN","AUPNSICD",19,0)
 .S Z($P(^ICDS(X,0),U,4))=X
"RTN","AUPNSICD",20,0)
 ;now go through and get the last one before it imp date is greater than the visit date
"RTN","AUPNSICD",21,0)
 S X=0 F  S X=$O(Z(X)) Q:X=""  D
"RTN","AUPNSICD",22,0)
 .I D<X Q
"RTN","AUPNSICD",23,0)
 .I D>X S Y=Z(X) Q
"RTN","AUPNSICD",24,0)
 I Y="" S Y=$O(Z(0)) Q Z(Y)
"RTN","AUPNSICD",25,0)
 Q Y
"RTN","AUPNSICD",26,0)
IMPOP(D) ;PEP - which coding system should be used:
"RTN","AUPNSICD",27,0)
 ;RETURN IEN of entry in ^ICDS
"RTN","AUPNSICD",28,0)
 ;1 = ICD9
"RTN","AUPNSICD",29,0)
 ;30 = ICD10
"RTN","AUPNSICD",30,0)
 ;will need to add subroutines for ICD11 when we have that.
"RTN","AUPNSICD",31,0)
 I $G(D)="" S D=DT
"RTN","AUPNSICD",32,0)
 NEW X,Y,Z
"RTN","AUPNSICD",33,0)
 I '$O(^ICDS("F",80.1,0)) Q 2
"RTN","AUPNSICD",34,0)
 S Y=""
"RTN","AUPNSICD",35,0)
 S X=0 F  S X=$O(^ICDS("F",80.1,X)) Q:X'=+X  D
"RTN","AUPNSICD",36,0)
 .I $P(^ICDS(X,0),U,4)="" Q   ;NO IMPLEMENTATION DATE?? SKIP IT
"RTN","AUPNSICD",37,0)
 .S Z($P(^ICDS(X,0),U,4))=X
"RTN","AUPNSICD",38,0)
 ;now go through and get the last one before it imp date is greater than the visit date
"RTN","AUPNSICD",39,0)
 S X=0 F  S X=$O(Z(X)) Q:X=""  D
"RTN","AUPNSICD",40,0)
 .I D<X Q
"RTN","AUPNSICD",41,0)
 .I D>X S Y=Z(X) Q
"RTN","AUPNSICD",42,0)
 I Y="" S Y=$O(Z(0)) Q Z(Y)
"RTN","AUPNSICD",43,0)
 Q Y
"RTN","AUPNSICD",44,0)
 ;
"RTN","AUPNSICD",45,0)
CHK(Y) ;EP - SCREEN OUT E CODES AND INACTIVE CODES
"RTN","AUPNSICD",46,0)
 NEW A,I,D,%
"RTN","AUPNSICD",47,0)
 I $D(DIFGLINE) Q 1   ;in filegrams so take code and accept it
"RTN","AUPNSICD",48,0)
 I $D(ACHSDIEN) Q 1   ;in CHS so take code and accept it
"RTN","AUPNSICD",49,0)
 I $G(DUZ("AG"))'="I" Q 1
"RTN","AUPNSICD",50,0)
 ;use date if available
"RTN","AUPNSICD",51,0)
 ;get visit date if known, if not known, use DT to determine whether to use
"RTN","AUPNSICD",52,0)
 ;ICD9 vs ICD10
"RTN","AUPNSICD",53,0)
 S D=""
"RTN","AUPNSICD",54,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICD",55,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICD",56,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICD",57,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICD",58,0)
 I D="" S D=DT
"RTN","AUPNSICD",59,0)
 S I=$$IMP(D)  ;get ien of coding system
"RTN","AUPNSICD",60,0)
 S %=$$ICDDX^AUPNVUTL(Y,D) I 1
"RTN","AUPNSICD",61,0)
 I $P(%,U,20)]"",$P(%,U,20)'=I Q 0   ;not correct coding system
"RTN","AUPNSICD",62,0)
 S I="CHKDX"_I
"RTN","AUPNSICD",63,0)
 G @I
"RTN","AUPNSICD",64,0)
 ;Q
"RTN","AUPNSICD",65,0)
CHKDX1 ;CODING SYSTEM 1 - ICD9
"RTN","AUPNSICD",66,0)
 I $E($P(%,U,2),1)="E" Q 0  ;no E codes
"RTN","AUPNSICD",67,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",68,0)
 ;
"RTN","AUPNSICD",69,0)
CSEX ; IF 'USE WITH SEX' FIELD HAS A VALUE CHECK THAT VALUE AGAINST AUPNSEX
"RTN","AUPNSICD",70,0)
 I '$D(AUPNSEX) Q 1
"RTN","AUPNSICD",71,0)
 I $P(%,U,11)]"",$P(%,U,11)'=AUPNSEX Q 0
"RTN","AUPNSICD",72,0)
 Q 1
"RTN","AUPNSICD",73,0)
 ;
"RTN","AUPNSICD",74,0)
CHKDX30 ;coding system 30 - ICD10
"RTN","AUPNSICD",75,0)
 I $E($P(%,U,2),1)="V" Q 0  ;no codes V00-Y99 per Leslie Racine.
"RTN","AUPNSICD",76,0)
 I $E($P(%,U,2),1)="W" Q 0
"RTN","AUPNSICD",77,0)
 I $E($P(%,U,2),1)="X" Q 0
"RTN","AUPNSICD",78,0)
 I $E($P(%,U,2),1)="Y" Q 0
"RTN","AUPNSICD",79,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",80,0)
 ;
"RTN","AUPNSICD",81,0)
CSEX30 ; IF 'USE WITH SEX' FIELD HAS A VALUE CHECK THAT VALUE AGAINST AUPNSEX
"RTN","AUPNSICD",82,0)
 I '$D(AUPNSEX) Q 1
"RTN","AUPNSICD",83,0)
 I $P(%,U,11)]"",$P(%,U,11)'=AUPNSEX Q 0
"RTN","AUPNSICD",84,0)
 Q 1
"RTN","AUPNSICD",85,0)
CPT ;EP - screen on CPT from V CPT .01 and V Procedure
"RTN","AUPNSICD",86,0)
 ;note:  DATE ADDED in the CPT table reflects the date the code was added to the local table and thus can't be used.  It should be the date added to the CPT file, AFTER CSV will be able to use it
"RTN","AUPNSICD",87,0)
 I $$CHKCPT(Y)
"RTN","AUPNSICD",88,0)
 Q:$D(^ICPT(Y))
"RTN","AUPNSICD",89,0)
 Q
"RTN","AUPNSICD",90,0)
 ;
"RTN","AUPNSICD",91,0)
CHKCPT(Y) ;check CPT for valid date, inactive flag
"RTN","AUPNSICD",92,0)
 I $D(APCDOVR) Q 1  ;override for something
"RTN","AUPNSICD",93,0)
 I $D(DIFGLINE) Q 1  ;if in MFI accept all cpt codes
"RTN","AUPNSICD",94,0)
 I $D(ACHSDIEN) Q 1  ;if in CHS link accept all cpt codes
"RTN","AUPNSICD",95,0)
 I $G(DUZ("AG"))'="I" Q 1  ;if not an IHS facility accept all cpt codes
"RTN","AUPNSICD",96,0)
 NEW A,I,D,%
"RTN","AUPNSICD",97,0)
 ;get date if available
"RTN","AUPNSICD",98,0)
 S D=""
"RTN","AUPNSICD",99,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICD",100,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICD",101,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICD",102,0)
 ;check date if have date
"RTN","AUPNSICD",103,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICD",104,0)
 I D="" S D=DT
"RTN","AUPNSICD",105,0)
 ;
"RTN","AUPNSICD",106,0)
 S %=$$CPT^ICPTCOD(Y,D)
"RTN","AUPNSICD",107,0)
 I $$VERSION^XPDUTL("BCSV")]"" Q $P(%,U,7)
"RTN","AUPNSICD",108,0)
 S A="",I=$P(^ICPT(Y,0),U,7)
"RTN","AUPNSICD",109,0)
 I D]"",I]"",D>I Q 0
"RTN","AUPNSICD",110,0)
 Q 1
"RTN","AUPNSICD",111,0)
 ;
"RTN","AUPNSICD",112,0)
 ;
"RTN","AUPNSICD",113,0)
ICDOPCHK ;EP called from input tx on V PROCEDURE .01 SCREEN OUT E CODES AND INACTIVE CODES
"RTN","AUPNSICD",114,0)
 I $$CHKOP(Y)
"RTN","AUPNSICD",115,0)
 Q:$D(^ICD0(Y))
"RTN","AUPNSICD",116,0)
 Q
"RTN","AUPNSICD",117,0)
 ;
"RTN","AUPNSICD",118,0)
CHKOP(Y) ;EP
"RTN","AUPNSICD",119,0)
 ;new subroutine for CSV
"RTN","AUPNSICD",120,0)
 I $D(DIFGLINE) Q 1  ;in MFI
"RTN","AUPNSICD",121,0)
 I $D(ACHSDIEN) Q 1  ;in CHS
"RTN","AUPNSICD",122,0)
 I $G(DUZ("AG"))'="I" Q 1   ;not IHS
"RTN","AUPNSICD",123,0)
 ;use date if available
"RTN","AUPNSICD",124,0)
 ;get visit date if known, if not known, use DT to determine whether to use
"RTN","AUPNSICD",125,0)
 ;ICD9 vs ICD10
"RTN","AUPNSICD",126,0)
 NEW A,I,D,%
"RTN","AUPNSICD",127,0)
 S D=""
"RTN","AUPNSICD",128,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICD",129,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICD",130,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICD",131,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICD",132,0)
 I D="" S D=DT
"RTN","AUPNSICD",133,0)
 S I=$$IMPOP(D)  ;get ien of coding system
"RTN","AUPNSICD",134,0)
 S %=$$ICDOP^AUPNVUTL(Y,D)
"RTN","AUPNSICD",135,0)
 I $P(%,U,15)]"",$P(%,U,15)'=I Q 0   ;not correct coding system
"RTN","AUPNSICD",136,0)
 S I="CHKOP"_I G @I
"RTN","AUPNSICD",137,0)
 ;Q
"RTN","AUPNSICD",138,0)
CHKOP2 ;CODING SYSTEM 2 - ICD9
"RTN","AUPNSICD",139,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",140,0)
OPSEX ; IF 'USE WITH SEX' FIELD HAS A VALUE CHECK THAT VALUE AGAINST AUPNSEX
"RTN","AUPNSICD",141,0)
 I '$D(AUPNSEX) Q 1
"RTN","AUPNSICD",142,0)
 I $P(%,U,11)]"",$P(%,U,11)'=AUPNSEX Q 0
"RTN","AUPNSICD",143,0)
 Q 1
"RTN","AUPNSICD",144,0)
 ;
"RTN","AUPNSICD",145,0)
CHKOP31 ;coding system 31 - ICD10
"RTN","AUPNSICD",146,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",147,0)
 ;
"RTN","AUPNSICD",148,0)
CSEX31 ; IF 'USE WITH SEX' FIELD HAS A VALUE CHECK THAT VALUE AGAINST AUPNSEX
"RTN","AUPNSICD",149,0)
 I '$D(AUPNSEX) Q 1
"RTN","AUPNSICD",150,0)
 I $P(%,U,11)]"",$P(%,U,11)'=AUPNSEX Q 0
"RTN","AUPNSICD",151,0)
 Q 1
"RTN","AUPNSICD",152,0)
CHKFH(Y) ;EP - SCREEN OUT E CODES AND INACTIVE CODES
"RTN","AUPNSICD",153,0)
 Q 1 ; temporary
"RTN","AUPNSICD",154,0)
 I $D(DIFGLINE) Q 1  ;take whatever mfi gives us
"RTN","AUPNSICD",155,0)
 NEW A,I,D,%
"RTN","AUPNSICD",156,0)
 S D=""
"RTN","AUPNSICD",157,0)
 S D=$P($G(APCDDATE),".")
"RTN","AUPNSICD",158,0)
 I D="" S D=DT
"RTN","AUPNSICD",159,0)
 S I=$$IMP(D)  ;get ien of coding system
"RTN","AUPNSICD",160,0)
 S %=$$ICDDX^AUPNVUTL(Y,D)
"RTN","AUPNSICD",161,0)
 I $P(%,U,20)]"",$P(%,U,20)'=I Q 0   ;not correct coding system
"RTN","AUPNSICD",162,0)
 S I="CHKFH"_I G @I
"RTN","AUPNSICD",163,0)
 ;
"RTN","AUPNSICD",164,0)
CHKFH1 ;
"RTN","AUPNSICD",165,0)
 S A=0 D
"RTN","AUPNSICD",166,0)
 .I $E($P(%,U,2),1,3)="V16" S A=1
"RTN","AUPNSICD",167,0)
 .I $E($P(%,U,2),1,3)="V17" S A=1
"RTN","AUPNSICD",168,0)
 .I $E($P(%,U,2),1,3)="V18" S A=1
"RTN","AUPNSICD",169,0)
 .I $E($P(%,U,2),1,3)="V19" S A=1
"RTN","AUPNSICD",170,0)
 .I $P(%,U,2)=".9999" S A=1
"RTN","AUPNSICD",171,0)
 I 'A Q 0
"RTN","AUPNSICD",172,0)
 I $$VERSION^XPDUTL("BCSV")]"" Q $P(%,U,10)
"RTN","AUPNSICD",173,0)
 S A=$P($G(^ICD9(Y,9999999)),U,4),I=$P(^ICD9(Y,0),U,11)
"RTN","AUPNSICD",174,0)
 I D]"",I]"",D>I Q 0
"RTN","AUPNSICD",175,0)
 I D]"",A]"",D<A Q 0
"RTN","AUPNSICD",176,0)
 Q 1
"RTN","AUPNSICD",177,0)
CHKFH30 ;
"RTN","AUPNSICD",178,0)
 S A=0 D
"RTN","AUPNSICD",179,0)
 .I $E($P(%,U,2),1,3)="Z80" S A=1
"RTN","AUPNSICD",180,0)
 .I $E($P(%,U,2),1,3)="Z81" S A=1
"RTN","AUPNSICD",181,0)
 .I $E($P(%,U,2),1,3)="Z82" S A=1
"RTN","AUPNSICD",182,0)
 .I $E($P(%,U,2),1,3)="Z83" S A=1
"RTN","AUPNSICD",183,0)
 .I $E($P(%,U,2),1,3)="Z84" S A=1
"RTN","AUPNSICD",184,0)
 .I $P(%,U,2)="ZZZ.999" S A=1
"RTN","AUPNSICD",185,0)
 I 'A Q 0
"RTN","AUPNSICD",186,0)
 I $$VERSION^XPDUTL("BCSV")]"" Q $P(%,U,10)
"RTN","AUPNSICD",187,0)
 S A=$P($G(^ICD9(Y,9999999)),U,4),I=$P(^ICD9(Y,0),U,11)
"RTN","AUPNSICD",188,0)
 I D]"",I]"",D>I Q 0
"RTN","AUPNSICD",189,0)
 I D]"",A]"",D<A Q 0
"RTN","AUPNSICD",190,0)
 Q 1
"RTN","AUPNSICD",191,0)
CHKE ;EP - ECODE SCREEN
"RTN","AUPNSICD",192,0)
 I $$CHKE1(Y)
"RTN","AUPNSICD",193,0)
 Q:$D(^ICD9(Y))
"RTN","AUPNSICD",194,0)
 Q
"RTN","AUPNSICD",195,0)
CHKE1(Y) ;EP SCREEN OUT E CODES AND INACTIVE CODES
"RTN","AUPNSICD",196,0)
 NEW A,I,D,%
"RTN","AUPNSICD",197,0)
 I $D(DIFGLINE) Q 1   ;in filegrams so take code and accept it
"RTN","AUPNSICD",198,0)
 I $D(ACHSDIEN) Q 1   ;in CHS so take code and accept it
"RTN","AUPNSICD",199,0)
 I $G(DUZ("AG"))'="I" Q 1
"RTN","AUPNSICD",200,0)
 ;use date if available
"RTN","AUPNSICD",201,0)
 ;get visit date if known, if not known, use DT to determine whether to use
"RTN","AUPNSICD",202,0)
 ;ICD9 vs ICD10
"RTN","AUPNSICD",203,0)
 S D=""
"RTN","AUPNSICD",204,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICD",205,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICD",206,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICD",207,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICD",208,0)
 I D="" S D=DT
"RTN","AUPNSICD",209,0)
 S I=$$IMP(D)  ;get ien of coding system
"RTN","AUPNSICD",210,0)
 S %=$$ICDDX^AUPNVUTL(Y,D)
"RTN","AUPNSICD",211,0)
 I $P(%,U,20)]"",$P(%,U,20)'=I Q 0   ;not correct coding system
"RTN","AUPNSICD",212,0)
 S I="CHKEX"_I G @I
"RTN","AUPNSICD",213,0)
 ;Q
"RTN","AUPNSICD",214,0)
CHKEX1 ;CODING SYSTEM 1 - ICD9
"RTN","AUPNSICD",215,0)
 I $E($P(%,U,2),1)'="E" Q 0  ;only E codes
"RTN","AUPNSICD",216,0)
 I $$VERSION^XPDUTL("BCSV")]"",'$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",217,0)
 I $$VERSION^XPDUTL("BCSV")]"" G CSEX
"RTN","AUPNSICD",218,0)
 S A=$P($G(^ICD9(Y,9999999)),U,4),I=$P(^ICD9(Y,0),U,11)
"RTN","AUPNSICD",219,0)
 I D]"",I]"",D>I Q 0
"RTN","AUPNSICD",220,0)
 I D]"",A]"",D<A Q 0
"RTN","AUPNSICD",221,0)
 Q 1
"RTN","AUPNSICD",222,0)
 ;
"RTN","AUPNSICD",223,0)
CHKEX30 ;coding system 30 - ICD10
"RTN","AUPNSICD",224,0)
 NEW J
"RTN","AUPNSICD",225,0)
 S J=0
"RTN","AUPNSICD",226,0)
 I $E($P(%,U,2),1)="V" S J=1  ;only codes V00-Y99 per Leslie Racine.
"RTN","AUPNSICD",227,0)
 I $E($P(%,U,2),1)="W" S J=1
"RTN","AUPNSICD",228,0)
 I $E($P(%,U,2),1)="X" S J=1
"RTN","AUPNSICD",229,0)
 I $E($P(%,U,2),1)="Y" S J=1
"RTN","AUPNSICD",230,0)
 I 'J Q 0
"RTN","AUPNSICD",231,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",232,0)
 Q 1
"RTN","AUPNSICD",233,0)
FHCHK ;PEP - called from input tx on FAMILY HISTORY .01 field
"RTN","AUPNSICD",234,0)
 ;screen out all codes but V16-V19 and make sure it is active as of date being entered
"RTN","AUPNSICD",235,0)
 ;IHS/CMI/LAB - AUPN*99.1*7 - begin mods 02/15/2002
"RTN","AUPNSICD",236,0)
 I $$CHKFH(Y)
"RTN","AUPNSICD",237,0)
 Q:$D(^ICD9(Y))
"RTN","AUPNSICD",238,0)
 Q
"RTN","AUPNSICD",239,0)
HELP ;EP
"RTN","AUPNSICD",240,0)
 D HELP^AUPNSICH
"RTN","AUPNSICD",241,0)
 Q
"RTN","AUPNSICD",242,0)
HELPFH ;EP
"RTN","AUPNSICD",243,0)
 D HELPFH^AUPNSICH
"RTN","AUPNSICD",244,0)
 Q
"RTN","AUPNSICD",245,0)
HELPE ;EP
"RTN","AUPNSICD",246,0)
 D HELPE^AUPNSICH
"RTN","AUPNSICD",247,0)
 Q
"RTN","AUPNSICD",248,0)
RFBH ;EP
"RTN","AUPNSICD",249,0)
 D HELPRFB^AUPNSICH
"RTN","AUPNSICD",250,0)
 Q
"RTN","AUPNSICD",251,0)
EOP ;
"RTN","AUPNSICD",252,0)
 S AUPNQ=0
"RTN","AUPNSICD",253,0)
 NEW DIR
"RTN","AUPNSICD",254,0)
 NEW DIRUT,DFOUT,DLOUT,DTOUT,DUOUT
"RTN","AUPNSICD",255,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","AUPNSICD",256,0)
 I $D(DUOUT) S AUPNQ=1 Q
"RTN","AUPNSICD",257,0)
 W:$D(IOF) @IOF
"RTN","AUPNSICD",258,0)
 Q
"RTN","AUPNSICD",259,0)
 ;
"RTN","AUPNSICD",260,0)
HELPPL ;EP
"RTN","AUPNSICD",261,0)
 D HELPPL^AUPNSICH
"RTN","AUPNSICD",262,0)
 Q
"RTN","AUPNSICD",263,0)
PLACE ;EP - ECODE SCREEN
"RTN","AUPNSICD",264,0)
 I $$CHKPL(Y)
"RTN","AUPNSICD",265,0)
 Q:$D(^ICD9(Y))
"RTN","AUPNSICD",266,0)
 Q
"RTN","AUPNSICD",267,0)
CHKPL(Y) ; SCREEN OUT E CODES AND INACTIVE CODES
"RTN","AUPNSICD",268,0)
 NEW A,I,D,%
"RTN","AUPNSICD",269,0)
 I $D(DIFGLINE) Q 1   ;in filegrams so take code and accept it
"RTN","AUPNSICD",270,0)
 I $D(ACHSDIEN) Q 1   ;in CHS so take code and accept it
"RTN","AUPNSICD",271,0)
 I $G(DUZ("AG"))'="I" Q 1
"RTN","AUPNSICD",272,0)
 ;use date if available
"RTN","AUPNSICD",273,0)
 ;get visit date if known, if not known, use DT to determine whether to use
"RTN","AUPNSICD",274,0)
 ;ICD9 vs ICD10
"RTN","AUPNSICD",275,0)
 S D=""
"RTN","AUPNSICD",276,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICD",277,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICD",278,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICD",279,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICD",280,0)
 I D="" S D=DT
"RTN","AUPNSICD",281,0)
 ;;S D=3140101
"RTN","AUPNSICD",282,0)
 S I=$$IMP(D)  ;get ien of coding system
"RTN","AUPNSICD",283,0)
 S %=$$ICDDX^AUPNVUTL(Y,D)
"RTN","AUPNSICD",284,0)
 I $P(%,U,20)]"",$P(%,U,20)'=I Q 0   ;not correct coding system
"RTN","AUPNSICD",285,0)
 S I="CHKPL"_I G @I
"RTN","AUPNSICD",286,0)
 ;Q
"RTN","AUPNSICD",287,0)
CHKPL1 ;CODING SYSTEM 1 - ICD9
"RTN","AUPNSICD",288,0)
 I $E($P(%,U,2),1,4)'="E849" Q 0  ;only place of occurence
"RTN","AUPNSICD",289,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",290,0)
 Q 1
"RTN","AUPNSICD",291,0)
 ;
"RTN","AUPNSICD",292,0)
CHKPL30 ;coding system 30 - ICD10
"RTN","AUPNSICD",293,0)
 NEW J
"RTN","AUPNSICD",294,0)
 S J=0
"RTN","AUPNSICD",295,0)
 I $E($P(%,U,2),1,3)="Y92" S J=1  ;only codes XXX per Leslie Racine.
"RTN","AUPNSICD",296,0)
 I 'J Q 0
"RTN","AUPNSICD",297,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",298,0)
 Q 1
"RTN","AUPNSICD",299,0)
HELPOP ;EP
"RTN","AUPNSICD",300,0)
 D HELPOP^AUPNSICH
"RTN","AUPNSICD",301,0)
 Q
"RTN","AUPNSICD",302,0)
RFB ;EP - ECODE SCREEN
"RTN","AUPNSICD",303,0)
 I $$CHKRFB(Y)
"RTN","AUPNSICD",304,0)
 Q:$D(^ICD9(Y))
"RTN","AUPNSICD",305,0)
 Q
"RTN","AUPNSICD",306,0)
CHKRFB(Y) ; SCREEN Z18-Z18.9
"RTN","AUPNSICD",307,0)
 NEW A,I,D,%
"RTN","AUPNSICD",308,0)
 I $D(DIFGLINE) Q 1   ;in filegrams so take code and accept it
"RTN","AUPNSICD",309,0)
 I $D(ACHSDIEN) Q 1   ;in CHS so take code and accept it
"RTN","AUPNSICD",310,0)
 I $G(DUZ("AG"))'="I" Q 1
"RTN","AUPNSICD",311,0)
 ;use date if available
"RTN","AUPNSICD",312,0)
 ;get visit date if known, if not known, use DT to determine whether to use
"RTN","AUPNSICD",313,0)
 ;ICD9 vs ICD10
"RTN","AUPNSICD",314,0)
 S D=""
"RTN","AUPNSICD",315,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICD",316,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICD",317,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICD",318,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICD",319,0)
 I D="" S D=DT
"RTN","AUPNSICD",320,0)
 S I=$$IMP(D)  ;get ien of coding system
"RTN","AUPNSICD",321,0)
 I I'=30 Q 0
"RTN","AUPNSICD",322,0)
 S %=$$ICDDX^AUPNVUTL(Y,D)
"RTN","AUPNSICD",323,0)
 I $P(%,U,20)'=I Q 0   ;not correct coding system
"RTN","AUPNSICD",324,0)
 S I="CHKRFB"_I G @I
"RTN","AUPNSICD",325,0)
 ;Q
"RTN","AUPNSICD",326,0)
CHKRFB1 ;CODING SYSTEM 1 - ICD9
"RTN","AUPNSICD",327,0)
 ;
"RTN","AUPNSICD",328,0)
CHKRFB30 ;coding system 30 - ICD10
"RTN","AUPNSICD",329,0)
 NEW J
"RTN","AUPNSICD",330,0)
 S J=0
"RTN","AUPNSICD",331,0)
 I $E($P(%,U,2),1,3)="Z18" S J=1  ;only codes Z18 per Leslie Racine.
"RTN","AUPNSICD",332,0)
 I 'J Q 0
"RTN","AUPNSICD",333,0)
 I '$P(%,U,10) Q 0  ;STATUS IS INACTIVE
"RTN","AUPNSICD",334,0)
 Q 1
"RTN","AUPNSICH")
0^7^B98931011
"RTN","AUPNSICH",1,0)
AUPNSICH ; IHS/CMI/LAB - Screen Purpose of Visit/ICD9 codes 24-MAY-1993 ; 
"RTN","AUPNSICH",2,0)
 ;;2.0;IHS PCC SUITE;**2,10**;MAY 14, 2009;Build 15
"RTN","AUPNSICH",3,0)
 ;IHS/TUCSON/LAB - added checks for filegram and CHS, do not
"RTN","AUPNSICH",4,0)
 ;
"RTN","AUPNSICH",5,0)
HELP ;EP
"RTN","AUPNSICH",6,0)
 NEW D,I,%
"RTN","AUPNSICH",7,0)
 S D=""
"RTN","AUPNSICH",8,0)
 I '$O(^ICDS("F",80,0)) Q
"RTN","AUPNSICH",9,0)
 I $T(LST^ATXAPI)="" Q
"RTN","AUPNSICH",10,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICH",11,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICH",12,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICH",13,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICH",14,0)
 I D="" S D=DT
"RTN","AUPNSICH",15,0)
 S I=$$IMP^AUPNSICD(D)  ;get ien of coding system
"RTN","AUPNSICH",16,0)
 S %="Enter an active "_$S(I=1:"ICD-9-CM",1:"ICD-10-CM")_" diagnosis code or descriptive text.  "
"RTN","AUPNSICH",17,0)
 D EN^DDIOL(%)
"RTN","AUPNSICH",18,0)
 I I=1 D
"RTN","AUPNSICH",19,0)
 .D EN^DDIOL("DO NOT enter a code that begins with E (these are External cause of"),EN^DDIOL("Morbidity codes).")
"RTN","AUPNSICH",20,0)
 .;D EN^DDIOL("  ")
"RTN","AUPNSICH",21,0)
 I I=30 D
"RTN","AUPNSICH",22,0)
 .D EN^DDIOL("DO NOT enter a code that begins with V, W, X or Y (these are External"),EN^DDIOL("cause of Morbidity codes).")
"RTN","AUPNSICH",23,0)
 .;D EN^DDIOL("  ")
"RTN","AUPNSICH",24,0)
 ;Q:X="?"
"RTN","AUPNSICH",25,0)
 Q:X="?BAD"
"RTN","AUPNSICH",26,0)
 ;ASK FOR LIST
"RTN","AUPNSICH",27,0)
 Q:'$$ASKLIST()
"RTN","AUPNSICH",28,0)
 NEW AUPNC
"RTN","AUPNSICH",29,0)
 K AUPNC
"RTN","AUPNSICH",30,0)
 D LST^ATXAPI(I,80,"*","CODE","AUPNC")
"RTN","AUPNSICH",31,0)
 ;display to screen until "^"
"RTN","AUPNSICH",32,0)
 NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",33,0)
 S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",34,0)
 .I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",35,0)
 .;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",36,0)
 .S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",37,0)
 .I I=1 Q:$E(AUPNX)="E"
"RTN","AUPNSICH",38,0)
 .I I=30,$E($P(%,U,2),1)="V" Q
"RTN","AUPNSICH",39,0)
 .I I=30,$E($P(%,U,2),1)="W" Q
"RTN","AUPNSICH",40,0)
 .I I=30,$E($P(%,U,2),1)="X" Q
"RTN","AUPNSICH",41,0)
 .I I=30,$E($P(%,U,2),1)="Y" Q
"RTN","AUPNSICH",42,0)
 .Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",43,0)
 .S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",44,0)
 .D EN^DDIOL(X)
"RTN","AUPNSICH",45,0)
 .S AUPNF=1
"RTN","AUPNSICH",46,0)
 Q
"RTN","AUPNSICH",47,0)
ASKLIST() ;
"RTN","AUPNSICH",48,0)
 NEW X,Y,%,I,D,DIR,DIE,DA,DIC,DIRUT,DUOUT
"RTN","AUPNSICH",49,0)
 S DIR(0)="Y",DIR("A")="Do you want the entire ICD DIAGNOSIS List",DIR("B")="N" KILL DA D ^DIR KILL DIR
"RTN","AUPNSICH",50,0)
 I $D(DIRUT) Q 0
"RTN","AUPNSICH",51,0)
 I 'Y Q 0
"RTN","AUPNSICH",52,0)
 Q 1
"RTN","AUPNSICH",53,0)
ASKLISTO() ;
"RTN","AUPNSICH",54,0)
 NEW X,Y,%,I,D,DIR,DIE,DA,DIC,DIRUT,DUOUT
"RTN","AUPNSICH",55,0)
 S DIR(0)="Y",DIR("A")="Do you want the entire ICD OPERATION/PROCEDURE List",DIR("B")="N" KILL DA D ^DIR KILL DIR
"RTN","AUPNSICH",56,0)
 I $D(DIRUT) Q 0
"RTN","AUPNSICH",57,0)
 I 'Y Q 0
"RTN","AUPNSICH",58,0)
 Q 1
"RTN","AUPNSICH",59,0)
HELPFH ;EP
"RTN","AUPNSICH",60,0)
 NEW D,I,%
"RTN","AUPNSICH",61,0)
 S D=""
"RTN","AUPNSICH",62,0)
 I '$O(^ICDS("F",80,0)) Q
"RTN","AUPNSICH",63,0)
 I $T(LST^ATXAPI)="" Q
"RTN","AUPNSICH",64,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICH",65,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICH",66,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICH",67,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICH",68,0)
 I D="" S D=DT
"RTN","AUPNSICH",69,0)
 S I=$$IMP^AUPNSICD(D)  ;get ien of coding system
"RTN","AUPNSICH",70,0)
 ;S %="Enter a valid "_$$VAL^XBDIQ1(80.4,I,.01)_" Family History Diagnosis code.  "
"RTN","AUPNSICH",71,0)
 ;D EN^DDIOL(%)
"RTN","AUPNSICH",72,0)
 D EN^DDIOL(" ")
"RTN","AUPNSICH",73,0)
 I I=1 D
"RTN","AUPNSICH",74,0)
 .D EN^DDIOL("Enter the Family History ICD that best describes the diagnosis."),EN^DDIOL("Select an active code, must be V16*, V17*, V18* or V19*.")
"RTN","AUPNSICH",75,0)
 .D EN^DDIOL("  ")
"RTN","AUPNSICH",76,0)
 I I=30 D
"RTN","AUPNSICH",77,0)
 .D EN^DDIOL("Enter the Family History ICD that best describes the diagnosis."),EN^DDIOL("Select an active code in the Z80 to Z84 range.")
"RTN","AUPNSICH",78,0)
 .D EN^DDIOL("  ")
"RTN","AUPNSICH",79,0)
 ;Q:X="?"
"RTN","AUPNSICH",80,0)
 Q:X="?BAD"
"RTN","AUPNSICH",81,0)
 Q:'$$ASKLIST()
"RTN","AUPNSICH",82,0)
 NEW AUPNC
"RTN","AUPNSICH",83,0)
 K AUPNC
"RTN","AUPNSICH",84,0)
 D LST^ATXAPI(I,80,$S(I=1:"V16-V19.Z",1:"Z80-Z84.ZZZZ"),"CODE","AUPNC")
"RTN","AUPNSICH",85,0)
 ;display to screen until "^"
"RTN","AUPNSICH",86,0)
 NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",87,0)
 S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",88,0)
 .I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",89,0)
 .;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",90,0)
 .S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",91,0)
 .Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",92,0)
 .S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",93,0)
 .D EN^DDIOL(X)
"RTN","AUPNSICH",94,0)
 .S AUPNF=1
"RTN","AUPNSICH",95,0)
 Q
"RTN","AUPNSICH",96,0)
HELPE ;EP
"RTN","AUPNSICH",97,0)
 NEW D,I,%
"RTN","AUPNSICH",98,0)
 S D=""
"RTN","AUPNSICH",99,0)
 I '$O(^ICDS("F",80,0)) Q
"RTN","AUPNSICH",100,0)
 I $T(LST^ATXAPI)="" Q
"RTN","AUPNSICH",101,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICH",102,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICH",103,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICH",104,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICH",105,0)
 I D="" S D=DT
"RTN","AUPNSICH",106,0)
 S I=$$IMP^AUPNSICD(D)  ;get ien of coding system
"RTN","AUPNSICH",107,0)
 I I=1 D  Q
"RTN","AUPNSICH",108,0)
 .D EN^DDIOL("Enter a cause of injury ""E"" code.")
"RTN","AUPNSICH",109,0)
 .D EN^DDIOL("  ")
"RTN","AUPNSICH",110,0)
 .;Q:X="?"
"RTN","AUPNSICH",111,0)
 .Q:X="?BAD"
"RTN","AUPNSICH",112,0)
 .Q:'$$ASKLIST()
"RTN","AUPNSICH",113,0)
 .NEW AUPNC
"RTN","AUPNSICH",114,0)
 .K AUPNC
"RTN","AUPNSICH",115,0)
 .D LST^ATXAPI(1,80,"E*","CODE","AUPNC")
"RTN","AUPNSICH",116,0)
 .;display to screen until "^"
"RTN","AUPNSICH",117,0)
 .NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",118,0)
 .S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",119,0)
 ..I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",120,0)
 ..;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",121,0)
 ..S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",122,0)
 ..Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",123,0)
 ..S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",124,0)
 ..D EN^DDIOL(X)
"RTN","AUPNSICH",125,0)
 ..S AUPNF=1
"RTN","AUPNSICH",126,0)
 I I=30 D  Q
"RTN","AUPNSICH",127,0)
 .D EN^DDIOL("Must be an external cause of morbidity code.  The code range is V01-Y99.")
"RTN","AUPNSICH",128,0)
 .D EN^DDIOL("  ")
"RTN","AUPNSICH",129,0)
 .;Q:X="?"
"RTN","AUPNSICH",130,0)
 .Q:X="?BAD"
"RTN","AUPNSICH",131,0)
 .Q:'$$ASKLIST()
"RTN","AUPNSICH",132,0)
 .NEW AUPNC
"RTN","AUPNSICH",133,0)
 .K AUPNC
"RTN","AUPNSICH",134,0)
 .D LST^ATXAPI(30,80,"V01-V99.Z","CODE","AUPNC")
"RTN","AUPNSICH",135,0)
 .;display to screen until "^"
"RTN","AUPNSICH",136,0)
 .NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",137,0)
 .S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",138,0)
 ..I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",139,0)
 ..;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",140,0)
 ..S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",141,0)
 ..Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",142,0)
 ..S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",143,0)
 ..D EN^DDIOL(X)
"RTN","AUPNSICH",144,0)
 ..S AUPNF=1
"RTN","AUPNSICH",145,0)
 Q
"RTN","AUPNSICH",146,0)
EOP ;
"RTN","AUPNSICH",147,0)
 S AUPNQ=0
"RTN","AUPNSICH",148,0)
 NEW DIR
"RTN","AUPNSICH",149,0)
 NEW DIRUT,DFOUT,DLOUT,DTOUT,DUOUT
"RTN","AUPNSICH",150,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","AUPNSICH",151,0)
 I $D(DUOUT) S AUPNQ=1 Q
"RTN","AUPNSICH",152,0)
 W:$D(IOF) @IOF
"RTN","AUPNSICH",153,0)
 Q
"RTN","AUPNSICH",154,0)
 ;
"RTN","AUPNSICH",155,0)
HELPPL ;EP
"RTN","AUPNSICH",156,0)
 NEW D,I,%
"RTN","AUPNSICH",157,0)
 S D=""
"RTN","AUPNSICH",158,0)
 I '$O(^ICDS("F",80,0)) Q
"RTN","AUPNSICH",159,0)
 I $T(LST^ATXAPI)="" Q
"RTN","AUPNSICH",160,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICH",161,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICH",162,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICH",163,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICH",164,0)
 I D="" S D=DT
"RTN","AUPNSICH",165,0)
 S I=$$IMP^AUPNSICD(D)  ;get ien of coding system
"RTN","AUPNSICH",166,0)
 S %="Enter a valid "_$$VAL^XBDIQ1(80.4,I,.01)_" Place of Occurrence code.  "
"RTN","AUPNSICH",167,0)
 I I=30 D EN^DDIOL(%)
"RTN","AUPNSICH",168,0)
 I I=1 D  Q
"RTN","AUPNSICH",169,0)
 .D EN^DDIOL("Enter a Place or Occurrence code in the range E849.0-E849.9.")
"RTN","AUPNSICH",170,0)
 .D EN^DDIOL("  ")
"RTN","AUPNSICH",171,0)
 .;Q:X="?"
"RTN","AUPNSICH",172,0)
 .Q:X="?BAD"
"RTN","AUPNSICH",173,0)
 .Q:'$$ASKLIST()
"RTN","AUPNSICH",174,0)
 .NEW AUPNC
"RTN","AUPNSICH",175,0)
 .K AUPNC
"RTN","AUPNSICH",176,0)
 .D LST^ATXAPI(1,80,"E849-E849.ZZ","CODE","AUPNC")
"RTN","AUPNSICH",177,0)
 .;display to screen until "^"
"RTN","AUPNSICH",178,0)
 .NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",179,0)
 .S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",180,0)
 ..I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",181,0)
 ..;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",182,0)
 ..S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",183,0)
 ..Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",184,0)
 ..S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",185,0)
 ..D EN^DDIOL(X)
"RTN","AUPNSICH",186,0)
 ..S AUPNF=1
"RTN","AUPNSICH",187,0)
 I I=30 D  Q
"RTN","AUPNSICH",188,0)
 .D EN^DDIOL("Must be in the code range Y92-Y92.9.")
"RTN","AUPNSICH",189,0)
 .D EN^DDIOL(" ")
"RTN","AUPNSICH",190,0)
 .;Q:X="?"
"RTN","AUPNSICH",191,0)
 .Q:X="?BAD"
"RTN","AUPNSICH",192,0)
 .Q:'$$ASKLIST()
"RTN","AUPNSICH",193,0)
 .NEW AUPNC
"RTN","AUPNSICH",194,0)
 .K AUPNC
"RTN","AUPNSICH",195,0)
 .D LST^ATXAPI(30,80,"Y92-Y92.ZZ","CODE","AUPNC")
"RTN","AUPNSICH",196,0)
 .;display to screen until "^"
"RTN","AUPNSICH",197,0)
 .NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",198,0)
 .S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",199,0)
 ..I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",200,0)
 ..;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",201,0)
 ..S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",202,0)
 ..Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",203,0)
 ..S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",204,0)
 ..D EN^DDIOL(X)
"RTN","AUPNSICH",205,0)
 ..S AUPNF=1
"RTN","AUPNSICH",206,0)
 Q
"RTN","AUPNSICH",207,0)
HELPOP ;EP
"RTN","AUPNSICH",208,0)
 NEW D,I,%
"RTN","AUPNSICH",209,0)
 S D=""
"RTN","AUPNSICH",210,0)
 I '$O(^ICDS("F",80.1,0)) Q
"RTN","AUPNSICH",211,0)
 I $T(LST^ATXAPI)="" Q
"RTN","AUPNSICH",212,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICH",213,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICH",214,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICH",215,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICH",216,0)
 I D="" S D=DT
"RTN","AUPNSICH",217,0)
 S I=$$IMPOP^AUPNSICD(D)  ;get ien of coding system
"RTN","AUPNSICH",218,0)
 S %="Enter an active "_$S(I=2:"ICD-9",1:"ICD-10")_" Procedure Code or descriptive text.  "
"RTN","AUPNSICH",219,0)
 D EN^DDIOL(%)
"RTN","AUPNSICH",220,0)
 ;D EN^DDIOL("Enter a Procedure name (2-245 characters in length), a Procedure")
"RTN","AUPNSICH",221,0)
 ;D EN^DDIOL("code, one or more keywords sufficient to select a Procedure name.")
"RTN","AUPNSICH",222,0)
 ;D EN^DDIOL("  ")
"RTN","AUPNSICH",223,0)
 ;Q:X="?"
"RTN","AUPNSICH",224,0)
 Q:X="?BAD"
"RTN","AUPNSICH",225,0)
 Q:'$$ASKLISTO()
"RTN","AUPNSICH",226,0)
 NEW AUPNC
"RTN","AUPNSICH",227,0)
 K AUPNC
"RTN","AUPNSICH",228,0)
 D LST^ATXAPI(I,80.1,"*","CODE","AUPNC")
"RTN","AUPNSICH",229,0)
 ;display to screen until "^"
"RTN","AUPNSICH",230,0)
 NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",231,0)
 S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",232,0)
 .I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",233,0)
 .;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",234,0)
 .S %=$$ICDOP^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",235,0)
 .Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",236,0)
 .S X=AUPNX,$E(X,12)=$P(%,U,5)
"RTN","AUPNSICH",237,0)
 .D EN^DDIOL(X)
"RTN","AUPNSICH",238,0)
 .S AUPNF=1
"RTN","AUPNSICH",239,0)
 Q
"RTN","AUPNSICH",240,0)
HELPRFB ;EP
"RTN","AUPNSICH",241,0)
 NEW D,I,%
"RTN","AUPNSICH",242,0)
 S D=""
"RTN","AUPNSICH",243,0)
 I '$O(^ICDS("F",80,0)) Q
"RTN","AUPNSICH",244,0)
 I $T(LST^ATXAPI)="" Q
"RTN","AUPNSICH",245,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICH",246,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICH",247,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICH",248,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICH",249,0)
 I D="" S D=DT
"RTN","AUPNSICH",250,0)
 S I=$$IMP^AUPNSICD(D)  ;get ien of coding system
"RTN","AUPNSICH",251,0)
 ;S %="Enter a valid "_$$VAL^XBDIQ1(80.4,I,.01)_" Place of Occurrence code.  "
"RTN","AUPNSICH",252,0)
 ;D EN^DDIOL(%)
"RTN","AUPNSICH",253,0)
 I I=1 Q
"RTN","AUPNSICH",254,0)
 I I=30 D  Q
"RTN","AUPNSICH",255,0)
 .D EN^DDIOL("Must be in the code range Z18-Z18.9.")
"RTN","AUPNSICH",256,0)
 .D EN^DDIOL(" ")
"RTN","AUPNSICH",257,0)
 .;Q:X="?"
"RTN","AUPNSICH",258,0)
 .Q:X="?BAD"
"RTN","AUPNSICH",259,0)
 .Q:'$$ASKLIST()
"RTN","AUPNSICH",260,0)
 .NEW AUPNC
"RTN","AUPNSICH",261,0)
 .K AUPNC
"RTN","AUPNSICH",262,0)
 .D LST^ATXAPI(30,80,"Z18-Z18.Z","CODE","AUPNC")
"RTN","AUPNSICH",263,0)
 .;display to screen until "^"
"RTN","AUPNSICH",264,0)
 .NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",265,0)
 .S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",266,0)
 ..I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",267,0)
 ..;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",268,0)
 ..S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",269,0)
 ..Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",270,0)
 ..S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",271,0)
 ..D EN^DDIOL(X)
"RTN","AUPNSICH",272,0)
 ..S AUPNF=1
"RTN","AUPNSICH",273,0)
 Q
"RTN","AUPNSICH",274,0)
HELPLEX ;EP
"RTN","AUPNSICH",275,0)
 NEW D,I,%
"RTN","AUPNSICH",276,0)
 S D=""
"RTN","AUPNSICH",277,0)
 I '$O(^ICDS("F",80,0)) Q
"RTN","AUPNSICH",278,0)
 I $T(LST^ATXAPI)="" Q
"RTN","AUPNSICH",279,0)
 I $G(APCDVSIT),$D(^AUPNVSIT(APCDVSIT)) D
"RTN","AUPNSICH",280,0)
 .I $P(^AUPNVSIT(APCDVSIT,0),U,7)="H",$$DSCHDATE^APCLV(APCDVSIT)]"" S D=$$DSCHDATE^APCLV(APCDVSIT) Q
"RTN","AUPNSICH",281,0)
 .S D=$P($P(^AUPNVSIT(APCDVSIT,0),U),".")
"RTN","AUPNSICH",282,0)
 I D="" S D=$P($G(APCDDATE),".")
"RTN","AUPNSICH",283,0)
 I D="" S D=DT
"RTN","AUPNSICH",284,0)
 S I=$$IMP^AUPNSICD(D)  ;get ien of coding system
"RTN","AUPNSICH",285,0)
 ;Q:X="?"
"RTN","AUPNSICH",286,0)
 Q:X="?BAD"
"RTN","AUPNSICH",287,0)
 Q:'$$ASKLIST()
"RTN","AUPNSICH",288,0)
 NEW AUPNC
"RTN","AUPNSICH",289,0)
 K AUPNC
"RTN","AUPNSICH",290,0)
 D LST^ATXAPI(I,80,"*","CODE","AUPNC")
"RTN","AUPNSICH",291,0)
 ;display to screen until "^"
"RTN","AUPNSICH",292,0)
 NEW AUPNX,AUPNY,AUPNQ,AUPNF,X
"RTN","AUPNSICH",293,0)
 S AUPNX="",AUPNQ=0,AUPNF=0 F  S AUPNX=$O(AUPNC(AUPNX)) Q:AUPNX=""!($G(AUPNQ))  D
"RTN","AUPNSICH",294,0)
 .I AUPNF,$Y>(IOSL-2) D EOP Q:AUPNQ
"RTN","AUPNSICH",295,0)
 .;CHECK FOR ACTIVE STATUS
"RTN","AUPNSICH",296,0)
 .I I=1 Q:$E(AUPNX)="E"
"RTN","AUPNSICH",297,0)
 .I I=30,$E($P(%,U,2),1)="V" Q
"RTN","AUPNSICH",298,0)
 .I I=30,$E($P(%,U,2),1)="W" Q
"RTN","AUPNSICH",299,0)
 .I I=30,$E($P(%,U,2),1)="X" Q
"RTN","AUPNSICH",300,0)
 .I I=30,$E($P(%,U,2),1)="Y" Q
"RTN","AUPNSICH",301,0)
 .S %=$$ICDDX^AUPNVUTL($P(AUPNC(AUPNX),U,1),D)
"RTN","AUPNSICH",302,0)
 .Q:'$P(%,U,10)  ;inactive on this date
"RTN","AUPNSICH",303,0)
 .S X=AUPNX,$E(X,12)=$P(%,U,4)
"RTN","AUPNSICH",304,0)
 .D EN^DDIOL(X)
"RTN","AUPNSICH",305,0)
 .S AUPNF=1
"RTN","AUPNSICH",306,0)
 Q
"RTN","AUPNVUTL")
0^6^B14090601
"RTN","AUPNVUTL",1,0)
AUPNVUTL ; IHS/CMI/LAB - AUPN UTILITIES ; 
"RTN","AUPNVUTL",2,0)
 ;;2.0;IHS PCC SUITE;**2,10**;MAY 14, 2009;Build 15
"RTN","AUPNVUTL",3,0)
SNOMED(N) ;PEP - called from various dds provider narrative
"RTN","AUPNVUTL",4,0)
 ;TRANSFORM TO ADD DESCRIPTIVE TEXT FOR SNOMED CODE IF THERE IS A "|" PIECE
"RTN","AUPNVUTL",5,0)
 I $G(N)="" Q N
"RTN","AUPNVUTL",6,0)
 S N=$P($G(^AUTNPOV(N,0)),U,1)
"RTN","AUPNVUTL",7,0)
 I N'["|" Q N  ; no vertical equals no snomed desc id
"RTN","AUPNVUTL",8,0)
 I N["| " Q N  ;prenatal v1.0
"RTN","AUPNVUTL",9,0)
 I $T(DESC^BSTSAPI)="" Q N  ;no snomed stuff installed
"RTN","AUPNVUTL",10,0)
 NEW SDI,SDIT
"RTN","AUPNVUTL",11,0)
 S SDI=$P(N,"|",2)  ;snomed descriptive id is in piece 2
"RTN","AUPNVUTL",12,0)
 S SDIT=$P($$DESC^BSTSAPI(SDI_"^^1"),U,2)
"RTN","AUPNVUTL",13,0)
 I SDIT="" Q "*"_$P(N,"|",1)  ;not snomed text??  somebody stored a bad descriptive id return "* | " per Susan
"RTN","AUPNVUTL",14,0)
 Q SDIT_" | "_$P(N,"|",1)
"RTN","AUPNVUTL",15,0)
PNPROB(N) ;PEP - called from various dds provider narrative
"RTN","AUPNVUTL",16,0)
 ;TRANSFORM TO ADD DESCRIPTIVE TEXT FOR SNOMED CODE IF THERE IS A "|" PIECE
"RTN","AUPNVUTL",17,0)
 ;N must be a valid IEN in AUTNPOV (provider narrative)
"RTN","AUPNVUTL",18,0)
 I $G(N)="" Q N
"RTN","AUPNVUTL",19,0)
 S N=$P($G(^AUTNPOV(N,0)),U,1)
"RTN","AUPNVUTL",20,0)
 I N'["|" Q "*"_N  ; no vertical equals no snomed desc id
"RTN","AUPNVUTL",21,0)
 I N["| " Q N  ;prenatal v1.0
"RTN","AUPNVUTL",22,0)
 I $T(DESC^BSTSAPI)="" Q "*"_N  ;no snomed stuff installed
"RTN","AUPNVUTL",23,0)
 NEW SDI,SDIT
"RTN","AUPNVUTL",24,0)
 S SDI=$P(N,"|",2)  ;snomed descriptive id is in piece 2
"RTN","AUPNVUTL",25,0)
 S SDIT=$P($$DESC^BSTSAPI(SDI_"^^1"),U,2)
"RTN","AUPNVUTL",26,0)
 I SDIT="" Q "*"_$P(N,"|",1)  ;not snomed text??  somebody stored a bad descriptive id return "* | " per Susan
"RTN","AUPNVUTL",27,0)
 Q SDIT_" | "_$P(N,"|",1)
"RTN","AUPNVUTL",28,0)
EDNAME(I) ;PEP - RETURN EDUCATION TOPIC TEXT
"RTN","AUPNVUTL",29,0)
 ;if the topic contains a snomed display preferred term and then subtopic
"RTN","AUPNVUTL",30,0)
 NEW N
"RTN","AUPNVUTL",31,0)
 I $G(I)="" Q I
"RTN","AUPNVUTL",32,0)
 S N=$P($G(^AUTTEDT(I,0)),U,1)
"RTN","AUPNVUTL",33,0)
 I $P($G(^AUTTEDT(I,0)),U,12)="" Q N
"RTN","AUPNVUTL",34,0)
 I $T(CONC^BSTSAPI)="" Q N  ;no snomed stuff installed
"RTN","AUPNVUTL",35,0)
 NEW SDI,SDIT
"RTN","AUPNVUTL",36,0)
 S SDI=$P(N,"-",1)  ;snomed descriptive id is in piece 2
"RTN","AUPNVUTL",37,0)
 S SDIT=$$CONCPT(SDI)
"RTN","AUPNVUTL",38,0)
 I SDIT="" Q N  ;not snomed text??  somebody stored a bad descriptive id return "* | " per Susan
"RTN","AUPNVUTL",39,0)
 Q SDIT_"-"_$P(N,"-",2)
"RTN","AUPNVUTL",40,0)
FSOT(X) ;PEP - FINDING SITE OUTPUT TX/COMPUTED FIELD
"RTN","AUPNVUTL",41,0)
 ;get each | piece, then each ":" piece and get perferred term
"RTN","AUPNVUTL",42,0)
 I $T(CONC^BSTSAPI)="" Q ""
"RTN","AUPNVUTL",43,0)
 I $G(X)="" Q ""
"RTN","AUPNVUTL",44,0)
 NEW A,B,V,D,E
"RTN","AUPNVUTL",45,0)
 S V=""
"RTN","AUPNVUTL",46,0)
 F A=1:1 S B=$P(X,"|",A) Q:B=""  D
"RTN","AUPNVUTL",47,0)
 .;S D=$P(B,":",1)
"RTN","AUPNVUTL",48,0)
 .S E=$P(B,":",2)
"RTN","AUPNVUTL",49,0)
 .I V]"" S V=V_", "
"RTN","AUPNVUTL",50,0)
 .; V=V_$$CONCPT(D)_":"_$$CONCPT(E)
"RTN","AUPNVUTL",51,0)
 .S V=V_$$CONCPT(E)
"RTN","AUPNVUTL",52,0)
 Q V
"RTN","AUPNVUTL",53,0)
TESTFS ;
"RTN","AUPNVUTL",54,0)
 ;
"RTN","AUPNVUTL",55,0)
 S X="272741003:7771000|363698007:56459004"
"RTN","AUPNVUTL",56,0)
 W $$FSOT(X)
"RTN","AUPNVUTL",57,0)
 Q
"RTN","AUPNVUTL",58,0)
CONC(X) ;EP 22
"RTN","AUPNVUTL",59,0)
 ;CALLED FROM VARIOUS PCC ROUTINES TO GET CONCEPT ID IF BSTS IS INSTALLED
"RTN","AUPNVUTL",60,0)
 I $T(CONC^BSTSAPI)="" Q ""
"RTN","AUPNVUTL",61,0)
 I $G(X)="" Q ""
"RTN","AUPNVUTL",62,0)
 Q $$CONC^BSTSAPI(X_"^^^1")
"RTN","AUPNVUTL",63,0)
CONCPT(X) ;PEP - GET CONCEPT PREFERRED TERM
"RTN","AUPNVUTL",64,0)
 ;CALLED FROM VARIOUS PCC ROUTINES TO GET CONCEPT ID PREFERRED TERM IF BSTS IS INSTALLED
"RTN","AUPNVUTL",65,0)
 I $T(CONC^BSTSAPI)="" Q ""
"RTN","AUPNVUTL",66,0)
 I $G(X)="" Q ""
"RTN","AUPNVUTL",67,0)
 NEW D,B,E,V,A,B
"RTN","AUPNVUTL",68,0)
 Q $P($$CONC^BSTSAPI(X_"^^^1"),U,4)
"RTN","AUPNVUTL",69,0)
DESCPT(X) ;PEP - GET DESC ID
"RTN","AUPNVUTL",70,0)
 I $T(DESC^BSTSAPI)="" Q ""
"RTN","AUPNVUTL",71,0)
 I $G(X)="" Q ""
"RTN","AUPNVUTL",72,0)
 Q $P($$DESC^BSTSAPI(X_"^^1"),U,2)
"RTN","AUPNVUTL",73,0)
LOINCT(X) ;EP
"RTN","AUPNVUTL",74,0)
 ;put api in here when get it from apelon group
"RTN","AUPNVUTL",75,0)
 Q ""
"RTN","AUPNVUTL",76,0)
LOINCPT(X) ;EP
"RTN","AUPNVUTL",77,0)
 ;put api in here when get it from apelon group
"RTN","AUPNVUTL",78,0)
 Q ""
"RTN","AUPNVUTL",79,0)
ICD(X,Y,Z) ;PEP - CHECK FOR ICD10
"RTN","AUPNVUTL",80,0)
 I $T(ICD^ATXAPI)]"" Q $$ICD^ATXAPI(X,Y,Z)
"RTN","AUPNVUTL",81,0)
 Q $$ICD^ATXCHK(X,Y,Z)
"RTN","AUPNVUTL",82,0)
 ;
"RTN","AUPNVUTL",83,0)
ICDDX(C,D,I) ;PEP - CHECK FOR ICD10
"RTN","AUPNVUTL",84,0)
 I $T(ICDDX^ICDEX)]"" Q $$ICDDX^ICDEX(C,$G(D))
"RTN","AUPNVUTL",85,0)
 Q $$ICDDX^ICDCODE(C,$G(D),$G(I))
"RTN","AUPNVUTL",86,0)
 ;
"RTN","AUPNVUTL",87,0)
ICDOP(C,D,I) ;PEP - CHECK FOR ICD10
"RTN","AUPNVUTL",88,0)
 I $T(ICDOP^ICDEX)]"" Q $$ICDOP^ICDEX(C,$G(D))
"RTN","AUPNVUTL",89,0)
 Q $$ICDOP^ICDCODE(C,$G(D),$G(I))
"RTN","AUPNVUTL",90,0)
 ;
"RTN","AUPNVUTL",91,0)
VSTD(C,D) ;EP - CHECK FOR ICD10
"RTN","AUPNVUTL",92,0)
 I $T(VSTD^ICDEX)]"" Q $$VSTD^ICDEX(C,$G(D))
"RTN","AUPNVUTL",93,0)
 Q $$VSTD^ICDCODE(C,$G(D))
"RTN","AUPNVUTL",94,0)
 ;
"RTN","AUPNVUTL",95,0)
VSTP(C,D) ;EP - CHECK FOR ICD10
"RTN","AUPNVUTL",96,0)
 I $T(VSTP^ICDEX)]"" Q $$VSTP^ICDEX(C,$G(D))
"RTN","AUPNVUTL",97,0)
 Q $$VSTP^ICDCODE(C,$G(D))
"RTN","AUPNVUTL",98,0)
 ;
"RTN","AUPNVUTL",99,0)
ICDD(C,A,D) ;EP - CHECK FOR ICD10
"RTN","AUPNVUTL",100,0)
 I $T(ICDD^ICDEX)]"" Q $$ICDD^ICDEX(C,A,$G(D))
"RTN","AUPNVUTL",101,0)
 Q $$ICDD^ICDCODE(C,A,$G(D))
"RTN","AUPNVUTL",102,0)
CONFSN(C) ;EP - FSN
"RTN","AUPNVUTL",103,0)
 ;CALLED FROM VARIOUS PCC ROUTINES TO GET CONCEPT ID FSN IF BSTS IS INSTALLED
"RTN","AUPNVUTL",104,0)
 I $T(CONC^BSTSAPI)="" Q ""
"RTN","AUPNVUTL",105,0)
 I $G(X)="" Q ""
"RTN","AUPNVUTL",106,0)
 Q $P($$CONC^BSTSAPI(X_"^^^1"),U,2)
"RTN","AUPNVUTL",107,0)
MC(X) ;EP - called from cross ref
"RTN","AUPNVUTL",108,0)
 I $G(X)="" Q ""
"RTN","AUPNVUTL",109,0)
 NEW A,B,C
"RTN","AUPNVUTL",110,0)
 S A=$O(^AUTTREFR("B",X,0))
"RTN","AUPNVUTL",111,0)
 I 'A Q ""
"RTN","AUPNVUTL",112,0)
 Q $P($G(^AUTTREFR(A,0)),U,4)
"RTN","AUPNVUTL",113,0)
M07(X) ;EP - map .07 to 1.01
"RTN","AUPNVUTL",114,0)
 I $G(X)="" Q ""
"RTN","AUPNVUTL",115,0)
 NEW A
"RTN","AUPNVUTL",116,0)
 S A=$O(^AUTTREFR("AM",X,0))
"RTN","AUPNVUTL",117,0)
 I 'A Q ""
"RTN","AUPNVUTL",118,0)
 Q $P(^AUTTREFR(A,0),U,1)
"RTN","AUPNVUTL",119,0)
 ;
"RTN","AUPNVUTL",120,0)
IMP(%) ;EP
"RTN","AUPNVUTL",121,0)
 I $T(IMP^ICDEX)]"" Q $$IMP^ICDEX(%)
"RTN","AUPNVUTL",122,0)
 Q 3141001
"RTN","AUPNVUTL",123,0)
REFR(%) ;PEP - REFUSAL REASON TEXT FORM
"RTN","AUPNVUTL",124,0)
 I '$G(%) Q ""
"RTN","AUPNVUTL",125,0)
 I '$D(^AUPNPREF(%,0)) Q ""
"RTN","AUPNVUTL",126,0)
 NEW A,B,C
"RTN","AUPNVUTL",127,0)
 S A=$$VAL^XBDIQ1(9000022,%,1.01)
"RTN","AUPNVUTL",128,0)
 I A]"" S A=$$CONCPT(A)
"RTN","AUPNVUTL",129,0)
 I A]"" Q A
"RTN","AUPNVUTL",130,0)
 Q $$VAL^XBDIQ1(9000022,%,.07)
"RTN","BGOUTL")
0^1^B122246595
"RTN","BGOUTL",1,0)
BGOUTL ; IHS/BAO/TMD - Utilities ;12-Jul-2015 21:49;DKM
"RTN","BGOUTL",2,0)
 ;;1.1;BGO COMPONENTS;**1,3,4,5,6,13**;Mar 20, 2007;Build 15
"RTN","BGOUTL",3,0)
 ; Compute patient's age
"RTN","BGOUTL",4,0)
 ;  DFN = Patient IEN
"RTN","BGOUTL",5,0)
 ;  DAT = Reference date (defaults to today)
"RTN","BGOUTL",6,0)
PTAGE(DFN,DAT) ;EP
"RTN","BGOUTL",7,0)
 N DOB
"RTN","BGOUTL",8,0)
 S DOB=+$P($G(^DPT(+DFN,0)),U,3)
"RTN","BGOUTL",9,0)
 S:'$G(DAT) DAT=DT
"RTN","BGOUTL",10,0)
 Q $S(DAT:$$FMDIFF^XLFDT(DT,DOB)/365.25\1,1:"")
"RTN","BGOUTL",11,0)
 ; Convert a string to mixed case
"RTN","BGOUTL",12,0)
MCASE(X) ;EP
"RTN","BGOUTL",13,0)
 N Y
"RTN","BGOUTL",14,0)
 S X=$$LOW^XLFSTR(X),Y=1
"RTN","BGOUTL",15,0)
 F  D  S Y=$F(X," ",Y) Q:'Y
"RTN","BGOUTL",16,0)
 .S $E(X,Y)=$$UP^XLFSTR($E(X,Y))
"RTN","BGOUTL",17,0)
 Q X
"RTN","BGOUTL",18,0)
 ; Check if user has specified security key
"RTN","BGOUTL",19,0)
APSEC(RET,KEY) ;EP
"RTN","BGOUTL",20,0)
 S RET=$D(^XUSEC(KEY,DUZ))
"RTN","BGOUTL",21,0)
 Q
"RTN","BGOUTL",22,0)
 ; Check security keys and parameters
"RTN","BGOUTL",23,0)
 ;   INP = <key 1>|<key 2>|...|<key n>^<param 1>|<param 2>|...|<param n>^User IEN (optional)
"RTN","BGOUTL",24,0)
 ;   Returned as:
"RTN","BGOUTL",25,0)
 ;     <key 1>|<key 2>|...|<key n>^<param 1>|<param 2>|...|<param n>
"RTN","BGOUTL",26,0)
 ;   where <key n> is boolean value for presence of key
"RTN","BGOUTL",27,0)
 ;   and <param n> is of the format <user setting>~<user class name>
"RTN","BGOUTL",28,0)
 ;   where <user setting> is the user setting for the parameter and
"RTN","BGOUTL",29,0)
 ;   <user class name> is the user class that has a true value for
"RTN","BGOUTL",30,0)
 ;   the parameter.
"RTN","BGOUTL",31,0)
CHKSEC(RET,INP) ;EP
"RTN","BGOUTL",32,0)
 N KEYS,PARAMS,C,X,LP,PARM,USR,CLS,UC,USER
"RTN","BGOUTL",33,0)
 S RET=""
"RTN","BGOUTL",34,0)
 S KEYS=$P(INP,U)
"RTN","BGOUTL",35,0)
 S PARAMS=$P(INP,U,2)
"RTN","BGOUTL",36,0)
 S USER=$P(INP,U,3)
"RTN","BGOUTL",37,0)
 I USER,USER'=DUZ S RET=$$ERR(1053) Q
"RTN","BGOUTL",38,0)
 F C=1:1 S X=$P(KEYS,"|",C) Q:X=""  S $P(KEYS,"|",C)=$$HASKEY^BGOUTL4(X)
"RTN","BGOUTL",39,0)
 F C=1:1 S PARM=$P(PARAMS,"|",C) Q:PARM=""  D
"RTN","BGOUTL",40,0)
 .S USR=$$GET^XPAR("USR.`"_DUZ,PARM)
"RTN","BGOUTL",41,0)
 .S CLS=""
"RTN","BGOUTL",42,0)
 .S LP=0
"RTN","BGOUTL",43,0)
 .F  S LP=$O(^USR(8930.3,"B",DUZ,LP)) Q:'LP  D  Q:CLS'=""
"RTN","BGOUTL",44,0)
 ..S UC=$P($G(^USR(8930.3,LP,0)),U,2)
"RTN","BGOUTL",45,0)
 ..Q:'UC
"RTN","BGOUTL",46,0)
 ..S:$$GET^XPAR("CLS.`"_UC,PARM) CLS=$P($G(^USR(8930,UC,0)),U)
"RTN","BGOUTL",47,0)
 .S $P(PARAMS,"|",C)=+USR_"~"_CLS
"RTN","BGOUTL",48,0)
 S RET=KEYS_U_PARAMS
"RTN","BGOUTL",49,0)
 Q
"RTN","BGOUTL",50,0)
 ; Return a parameter value
"RTN","BGOUTL",51,0)
CKPARM(RET,PARM) ;EP
"RTN","BGOUTL",52,0)
 S RET=$$GET^XPAR("ALL",PARM)
"RTN","BGOUTL",53,0)
 Q
"RTN","BGOUTL",54,0)
 ; Return clinic stop associated with a location
"RTN","BGOUTL",55,0)
 ;  IEN = IEN in HOSPITAL LOCATION file
"RTN","BGOUTL",56,0)
 ;  RET = Returned as Name^Code
"RTN","BGOUTL",57,0)
GETCLN(RET,IEN) ;EP
"RTN","BGOUTL",58,0)
 S RET=$P($G(^SC(+IEN,0)),U,7)
"RTN","BGOUTL",59,0)
 S:$D(^DIC(40.7,+RET,0)) RET=RET_U_$P(^(0),U,1,2)
"RTN","BGOUTL",60,0)
 Q
"RTN","BGOUTL",61,0)
 ; Return a BGO parameter value
"RTN","BGOUTL",62,0)
 ;  PID = Parameter identifier
"RTN","BGOUTL",63,0)
 ;  RET = Parameter value
"RTN","BGOUTL",64,0)
GETPARM(RET,PID) ;EP
"RTN","BGOUTL",65,0)
 I $G(PID)="" S RET=$$ERR(1054)
"RTN","BGOUTL",66,0)
 E  S RET=$$GET^XPAR("ALL","BGO PARAMETER",PID)
"RTN","BGOUTL",67,0)
 Q
"RTN","BGOUTL",68,0)
 ; Set a BGO parameter value
"RTN","BGOUTL",69,0)
 ;  INP = Parameter ID ^ Parameter Value ^ Entity (optional)
"RTN","BGOUTL",70,0)
SETPARM(RET,INP) ;EP
"RTN","BGOUTL",71,0)
 N PID,VAL,ENT,ERR
"RTN","BGOUTL",72,0)
 S PID=$P(INP,U)
"RTN","BGOUTL",73,0)
 I PID="" S RET=$$ERR(1054) Q
"RTN","BGOUTL",74,0)
 S VAL=$P(INP,U,2)
"RTN","BGOUTL",75,0)
 I VAL="" S RET=$$ERR(1055) Q
"RTN","BGOUTL",76,0)
 S ENT=$P(INP,U,3)
"RTN","BGOUTL",77,0)
 S:'$L(ENT) ENT="USR"
"RTN","BGOUTL",78,0)
 D PUT^XPAR(ENT,"BGO PARAMETER",PID,VAL,.RET)
"RTN","BGOUTL",79,0)
 S:RET RET="-"_RET
"RTN","BGOUTL",80,0)
 Q
"RTN","BGOUTL",81,0)
 ; Lock/unlock a file entry
"RTN","BGOUTL",82,0)
 ;  INP = File # ^ IEN ^ Unlock Flag
"RTN","BGOUTL",83,0)
LOCK(RET,INP) ;EP
"RTN","BGOUTL",84,0)
 N GBL,FNUM,IEN,FLG
"RTN","BGOUTL",85,0)
 S FNUM=+INP
"RTN","BGOUTL",86,0)
 S IEN=+$P(INP,U,2)
"RTN","BGOUTL",87,0)
 S FLG=+$P(INP,U,3)
"RTN","BGOUTL",88,0)
 S GBL=$$ROOT^DILFD(FNUM,,1)
"RTN","BGOUTL",89,0)
 I GBL="" S RET=$$ERR(1056) Q
"RTN","BGOUTL",90,0)
 I IEN'>0 S RET=$$ERR(1057) Q
"RTN","BGOUTL",91,0)
 S GBL=$NA(@GBL@(IEN))
"RTN","BGOUTL",92,0)
 D LOCK^BGOUTL4(.RET,GBL):FLG,LOCK^BGOUTL4(.RET,GBL,0):'FLG
"RTN","BGOUTL",93,0)
 I 'RET,'FLG S RET=$$ERR(1058)
"RTN","BGOUTL",94,0)
 Q
"RTN","BGOUTL",95,0)
 ; Fileman Lookup utility
"RTN","BGOUTL",96,0)
 ;  INP = GBL [1] ^ Lookup Value [2] ^ FROM [3] ^ DIR [4] ^ MAX [5] ^ XREF [6] ^ SCRN [7] ^ ALL [8] ^ FLDS [9]
"RTN","BGOUTL",97,0)
 ;   GBL  = File global root (open or closed, without leading ^) or file #
"RTN","BGOUTL",98,0)
 ;   FROM = Text from which to start search
"RTN","BGOUTL",99,0)
 ;   DIR  = Search direction (defaults to 1)
"RTN","BGOUTL",100,0)
 ;   MAX  = Maximum # to return (defaults to 44)
"RTN","BGOUTL",101,0)
 ;   XREF = Cross ref to use (defaults to "B")
"RTN","BGOUTL",102,0)
 ;   SCRN = Screening logic (e.g. => .04="TEST";.07=83)
"RTN","BGOUTL",103,0)
 ;   ALL  = Return all records, maximum of 9999
"RTN","BGOUTL",104,0)
 ;   FLDS = Fields to return
"RTN","BGOUTL",105,0)
 ;   VDT  = Visit Date for ICD0
"RTN","BGOUTL",106,0)
DICLKUP(RET,INP) ;EP
"RTN","BGOUTL",107,0)
 N GBL,LKP,FROM,DIR,MAX,VDT,XREF,XREFS,SCRN,ALL,FLDS,FNUM,CNT,IMP
"RTN","BGOUTL",108,0)
 S RET=$$TMPGBL
"RTN","BGOUTL",109,0)
 S GBL=$P(INP,U)
"RTN","BGOUTL",110,0)
 I GBL=9999999.88,$$CSVACT^BGOUTL2 S GBL=81.3
"RTN","BGOUTL",111,0)
 I GBL=+GBL S GBL=$$ROOT^DILFD(GBL,,1)
"RTN","BGOUTL",112,0)
 E  S GBL=$$CREF^DILF(U_GBL)
"RTN","BGOUTL",113,0)
 S FNUM=$P($G(@GBL@(0)),U,2),FNUM(0)=FNUM["P",FNUM=+FNUM
"RTN","BGOUTL",114,0)
 Q:'FNUM
"RTN","BGOUTL",115,0)
 S LKP=$P(INP,U,2)
"RTN","BGOUTL",116,0)
 S FROM=$P(INP,U,3)
"RTN","BGOUTL",117,0)
 S DIR=$P(INP,U,4)
"RTN","BGOUTL",118,0)
 S MAX=$P(INP,U,5)
"RTN","BGOUTL",119,0)
 S XREF=$P(INP,U,6)
"RTN","BGOUTL",120,0)
 S SCRN=$TR($P(INP,U,7),"~",U)
"RTN","BGOUTL",121,0)
 S ALL=$P(INP,U,8)
"RTN","BGOUTL",122,0)
 S FLDS=$P(INP,U,9)
"RTN","BGOUTL",123,0)
 S VDT=$P(INP,U,10)
"RTN","BGOUTL",124,0)
 S:FLDS="" FLDS=".01"
"RTN","BGOUTL",125,0)
 I LKP'="",FROM="" S FROM=LKP
"RTN","BGOUTL",126,0)
 S CNT=0,MAX=$S(ALL:9999,MAX>0:+MAX,1:100),DIR=$S(DIR'=-1:1,1:-1)
"RTN","BGOUTL",127,0)
 I GBL="^ICD0" S SCRN="",FLDS=".01",XREF="D"       ;Patch 14 for old terms
"RTN","BGOUTL",128,0)
 I XREF'="" D  Q
"RTN","BGOUTL",129,0)
 .S XREFS=XREF
"RTN","BGOUTL",130,0)
 .F  S XREF=$P(XREFS,"~"),XREFS=$P(XREFS,"~",2,999) D DL1 Q:(XREFS="")!CNT
"RTN","BGOUTL",131,0)
 S XREF="B"
"RTN","BGOUTL",132,0)
 I LKP="" D DL1 Q
"RTN","BGOUTL",133,0)
 F  D DL1 S XREF=$O(@GBL@(XREF)) Q:($E(XREF)'="B")!CNT
"RTN","BGOUTL",134,0)
 Q
"RTN","BGOUTL",135,0)
 ; Check specified xref
"RTN","BGOUTL",136,0)
DL1 N NEXT,IEN
"RTN","BGOUTL",137,0)
 S NEXT=FROM
"RTN","BGOUTL",138,0)
 I LKP'="",XREF="B" D  Q:IEN
"RTN","BGOUTL",139,0)
 .S IEN=$O(@GBL@(XREF,LKP,0))
"RTN","BGOUTL",140,0)
 .I IEN,$$XSCRN(IEN,SCRN) D DL2
"RTN","BGOUTL",141,0)
 F  Q:CNT'<MAX  D:$L(NEXT)  Q:'$D(NEXT)  S NEXT=$O(@GBL@(XREF,NEXT),DIR) Q:'$L(NEXT)
"RTN","BGOUTL",142,0)
 .I LKP'="",$E(NEXT,1,$L(LKP))'=LKP K NEXT Q
"RTN","BGOUTL",143,0)
 .S IEN=0
"RTN","BGOUTL",144,0)
 .F  S IEN=$O(@GBL@(XREF,NEXT,IEN)) Q:'IEN  D
"RTN","BGOUTL",145,0)
 ..N S,X,Y,I,J,FLD,OPR,VAL,N,P
"RTN","BGOUTL",146,0)
 ..I SCRN'="" D  Q:'X
"RTN","BGOUTL",147,0)
 ...I $E(SCRN,1,2)="I " S Y=IEN X SCRN S X=$T Q
"RTN","BGOUTL",148,0)
 ...F I=1:1 S S=$P(SCRN,"&",I) Q:S=""  D  Q:'X
"RTN","BGOUTL",149,0)
 ....S FLD=+S,X=0
"RTN","BGOUTL",150,0)
 ....Q:'FLD
"RTN","BGOUTL",151,0)
 ....S OPR=""
"RTN","BGOUTL",152,0)
 ....F J=1:1:3 Q:"=<>'[]"'[$E(S,$L(FLD)+J)  S OPR=OPR_$E(S,$L(FLD)+J)
"RTN","BGOUTL",153,0)
 ....Q:OPR=""
"RTN","BGOUTL",154,0)
 ....S VAL=$P(S,OPR,2,999)
"RTN","BGOUTL",155,0)
 ....S N=$P($G(^DD(FNUM,FLD,0)),U,4),P=$P(N,";",2),N=$P(N,";")
"RTN","BGOUTL",156,0)
 ....Q:N=""!(P="")
"RTN","BGOUTL",157,0)
 ....X "S X=$P($G(@GBL@(IEN,N)),U,P)"_OPR_"VAL"
"RTN","BGOUTL",158,0)
 ..D DL2
"RTN","BGOUTL",159,0)
 Q
"RTN","BGOUTL",160,0)
 ; Add to output list
"RTN","BGOUTL",161,0)
DL2 N VAL,TGT,FLD,IENS,I,X,ICDNAME,XVAL
"RTN","BGOUTL",162,0)
 S IENS=IEN_","
"RTN","BGOUTL",163,0)
 S VAL=""
"RTN","BGOUTL",164,0)
 D GETS^DIQ(FNUM,IENS,FLDS,"I","TGT")
"RTN","BGOUTL",165,0)
 I GBL="^ICD0" D
"RTN","BGOUTL",166,0)
 .I $$AICD^BGOUTL2 D
"RTN","BGOUTL",167,0)
 ..S XVAL=$$ICDOP^ICDEX(IEN,"","","I")
"RTN","BGOUTL",168,0)
 ..S IMP=$$IMP^ICDEX("10P",VDT)
"RTN","BGOUTL",169,0)
 ..I IMP<VDT D
"RTN","BGOUTL",170,0)
 ...I $P(XVAL,U,15)=31 S VAL=IEN
"RTN","BGOUTL",171,0)
 ..E  I $P(XVAL,U,15)=2 S VAL=IEN
"RTN","BGOUTL",172,0)
 .E  D
"RTN","BGOUTL",173,0)
 ..S XVAL=$$ICDOP^ICDCODE(IEN,"","","I")
"RTN","BGOUTL",174,0)
 ..I $P(XVAL,U,15)=2 S VAL=IEN
"RTN","BGOUTL",175,0)
 E  S VAL=IEN_U_NEXT
"RTN","BGOUTL",176,0)
 F I=1:1 S FLD=$P(FLDS,";",I) Q:'$L(FLD)  D
"RTN","BGOUTL",177,0)
 .S X=$G(TGT(FNUM,IENS,FLD,"I"))
"RTN","BGOUTL",178,0)
 .I FNUM(0),FLD=.01 S X=$$EXTERNAL^DILFD(FNUM,FLD,,X)
"RTN","BGOUTL",179,0)
 .I VAL'="" D
"RTN","BGOUTL",180,0)
 ..I GBL="^ICD0" S VAL=VAL_U_X_U_$P(XVAL,U,5)
"RTN","BGOUTL",181,0)
 ..E  S VAL=VAL_U_X
"RTN","BGOUTL",182,0)
 I VAL'="" S CNT=CNT+1,@RET@(CNT)=VAL
"RTN","BGOUTL",183,0)
 Q
"RTN","BGOUTL",184,0)
 ; Fileman Lookup utility (uses FIND^DIC)
"RTN","BGOUTL",185,0)
 ;  INP = GBL [1] ^ Lookup Value [2] ^ FROM [3] ^ DIR [4] ^ MAX [5] ^ XREF [6] ^ SCRN [7] ^ ALL [8] ^ FLDS [9]
"RTN","BGOUTL",186,0)
 ;   GBL  = File global root (open or closed, without leading ^) or file #
"RTN","BGOUTL",187,0)
 ;   FROM = Text from which to start search
"RTN","BGOUTL",188,0)
 ;   DIR  = Search direction (not supported)
"RTN","BGOUTL",189,0)
 ;   MAX  = Maximum # to return (defaults to 44)
"RTN","BGOUTL",190,0)
 ;   XREF = Cross ref to use (defaults to "B")
"RTN","BGOUTL",191,0)
 ;   SCRN = Screening logic (e.g. => .04="TEST";.07=83)
"RTN","BGOUTL",192,0)
 ;   ALL  = Return all records, maximum of 9999
"RTN","BGOUTL",193,0)
 ;   FLDS = Fields to return
"RTN","BGOUTL",194,0)
DICLKUP2(RET,INP) ;EP
"RTN","BGOUTL",195,0)
 N GBL,LKP,FROM,DIR,MAX,XREF,XREFS,SCRN,ALL,FLDS,FNUM,LP,X
"RTN","BGOUTL",196,0)
 S RET=$$TMPGBL
"RTN","BGOUTL",197,0)
 S GBL=$P(INP,U)
"RTN","BGOUTL",198,0)
 I GBL=+GBL S GBL=$$ROOT^DILFD(GBL,,1)
"RTN","BGOUTL",199,0)
 E  S GBL=$$CREF^DILF(U_GBL)
"RTN","BGOUTL",200,0)
 S FNUM=$P($G(@GBL@(0)),U,2),FNUM(0)=FNUM["P",FNUM=+FNUM
"RTN","BGOUTL",201,0)
 Q:'FNUM
"RTN","BGOUTL",202,0)
 S LKP=$P(INP,U,2)
"RTN","BGOUTL",203,0)
 S FROM=$P(INP,U,3)
"RTN","BGOUTL",204,0)
 S DIR=$P(INP,U,4)                                                     ; ignored
"RTN","BGOUTL",205,0)
 S MAX=$P(INP,U,5)
"RTN","BGOUTL",206,0)
 S XREF=$TR($P(INP,U,6),"~",U)
"RTN","BGOUTL",207,0)
 S SCRN=$TR($P(INP,U,7),"~",U)
"RTN","BGOUTL",208,0)
 S ALL=$P(INP,U,8)
"RTN","BGOUTL",209,0)
 S FLDS=$P(INP,U,9)
"RTN","BGOUTL",210,0)
 S:FLDS="" FLDS=".01"
"RTN","BGOUTL",211,0)
 F LP=1:1:$L(FLDS,";") D
"RTN","BGOUTL",212,0)
 .S X=$P(FLDS,";",LP)
"RTN","BGOUTL",213,0)
 .S $P(FLDS,";",LP)=X_$S(X=.01&FNUM(0):"E",1:"I")
"RTN","BGOUTL",214,0)
 I LKP'="",FROM="" S FROM=LKP
"RTN","BGOUTL",215,0)
 S MAX=$S(ALL:9999,MAX>0:+MAX,1:100),DIR=$S(DIR'=-1:1,1:-1)
"RTN","BGOUTL",216,0)
 D FIND^DIC(FNUM,,"@;IX;"_FLDS,"BP",LKP,MAX,XREF,SCRN,,RET)
"RTN","BGOUTL",217,0)
 K @RET@("DILIST",0)
"RTN","BGOUTL",218,0)
 Q
"RTN","BGOUTL",219,0)
 ; Returns true if active hospital location
"RTN","BGOUTL",220,0)
 ;  LOC = IEN of hospital location
"RTN","BGOUTL",221,0)
 ;  DAT = optional date to check (defaults to today)
"RTN","BGOUTL",222,0)
ACTHLOC(LOC,DAT) ;
"RTN","BGOUTL",223,0)
 Q $$ACTLOC^BGOUTL4(LOC,.DAT)
"RTN","BGOUTL",224,0)
 ; Returns true if user is a provider and is active
"RTN","BGOUTL",225,0)
ACTPRV(IEN,DAT) ;
"RTN","BGOUTL",226,0)
 Q $$ACTIVE^BGOUTL4(IEN,.DAT)&$$HASKEY^BGOUTL4("PROVIDER")
"RTN","BGOUTL",227,0)
 ; Returns true if routine exists
"RTN","BGOUTL",228,0)
 ;  X = Routine or routine^tag
"RTN","BGOUTL",229,0)
 ; .Y error message returned if not found
"RTN","BGOUTL",230,0)
TEST(X,Y) ;EP
"RTN","BGOUTL",231,0)
 S:X[U X=$P(X,U,2)
"RTN","BGOUTL",232,0)
 Q:'$L(X)!(X'?.1"%"1.AN) 0
"RTN","BGOUTL",233,0)
 X ^%ZOSF("TEST")
"RTN","BGOUTL",234,0)
 Q:$T 1
"RTN","BGOUTL",235,0)
 S Y=$$ERR(1059,X)
"RTN","BGOUTL",236,0)
 Q 0
"RTN","BGOUTL",237,0)
 ; Get CPT modifiers for a CPT code
"RTN","BGOUTL",238,0)
CPTMODS(RET,INP) ;EP
"RTN","BGOUTL",239,0)
 Q:'$$TEST("CPTMODS^ORWPCE",.RET)
"RTN","BGOUTL",240,0)
 D CPTMODS^ORWPCE(.RET,INP)
"RTN","BGOUTL",241,0)
 Q
"RTN","BGOUTL",242,0)
 ; Perform lookup in lexicon
"RTN","BGOUTL",243,0)
 ;  INP = Term ^ Type (ICD/CHP)
"RTN","BGOUTL",244,0)
LEXLKUP(RET,INP) ;EP
"RTN","BGOUTL",245,0)
 N TERM,TYPE,VDT
"RTN","BGOUTL",246,0)
 Q:'$$TEST("LEX^ORWPCE",.RET)
"RTN","BGOUTL",247,0)
 S TERM=$P(INP,U)
"RTN","BGOUTL",248,0)
 Q:TERM=""
"RTN","BGOUTL",249,0)
 S TYPE=$P(INP,U,2)
"RTN","BGOUTL",250,0)
 Q:TYPE=""
"RTN","BGOUTL",251,0)
 S VDT=$P(INP,U,3)
"RTN","BGOUTL",252,0)
 D LEX^ORWPCE(.RET,TERM,TYPE,VDT)
"RTN","BGOUTL",253,0)
 Q
"RTN","BGOUTL",254,0)
 ; Lexicon ICD lookup
"RTN","BGOUTL",255,0)
 ;  TERM = Term to lookup
"RTN","BGOUTL",256,0)
ICDLEX(RET,TERM) ;EP
"RTN","BGOUTL",257,0)
 S $P(TERM,U,2)="ICD"
"RTN","BGOUTL",258,0)
 D LEXLKUP(.RET,TERM)
"RTN","BGOUTL",259,0)
 Q
"RTN","BGOUTL",260,0)
 ; Return IEN of ICD code
"RTN","BGOUTL",261,0)
ICDIEN(RET,ICD) ;EP
"RTN","BGOUTL",262,0)
 S RET=$S($L(ICD):$O(^ICD9("AB",ICD,"")),1:"")
"RTN","BGOUTL",263,0)
 Q
"RTN","BGOUTL",264,0)
 ; Get ICD IEN from lexicon IEN
"RTN","BGOUTL",265,0)
ICDLEXCD(RET,LEX) ;EP
"RTN","BGOUTL",266,0)
 Q:'$$TEST("LEXCODE^ORWPCE",.RET)
"RTN","BGOUTL",267,0)
 D LEXCODE^ORWPCE(.RET,LEX,"ICD"),ICDIEN(.RET,RET)
"RTN","BGOUTL",268,0)
 Q
"RTN","BGOUTL",269,0)
 ; Get CPT IEN from lexicon IEN
"RTN","BGOUTL",270,0)
CPTLEXCD(RET,LEX) ;EP
"RTN","BGOUTL",271,0)
 Q:'$$TEST("LEXCODE^ORWPCE",.RET)
"RTN","BGOUTL",272,0)
 D LEXCODE^ORWPCE(.RET,LEX,"CHP")
"RTN","BGOUTL",273,0)
 S:$L(RET) RET=$O(^ICPT("B",RET,""))
"RTN","BGOUTL",274,0)
 Q
"RTN","BGOUTL",275,0)
 ; Returns the clinic stop associated with a visit
"RTN","BGOUTL",276,0)
 ;  VIEN = Visit IEN
"RTN","BGOUTL",277,0)
VCLN(RET,VIEN) ;EP
"RTN","BGOUTL",278,0)
 I '$G(VIEN) S RET=$$ERR(1002)
"RTN","BGOUTL",279,0)
 E  I '$D(^AUPNVSIT(VIEN,0)) S RET=$$ERR(1003)
"RTN","BGOUTL",280,0)
 E  S RET=$P(^AUPNVSIT(VIEN,0),U,8),RET=$P($G(^DIC(40.7,+RET,0)),U,2)
"RTN","BGOUTL",281,0)
 Q
"RTN","BGOUTL",282,0)
 ; Returns 1 if a visit exists for current day
"RTN","BGOUTL",283,0)
 ;  DFN = Patient IEN
"RTN","BGOUTL",284,0)
FIRVIS(RET,DFN) ;EP
"RTN","BGOUTL",285,0)
 I '$G(DFN) S RET=$$ERR(1050)
"RTN","BGOUTL",286,0)
 E  I '$D(^DPT(DFN,0)) S RET=$$ERR(1001)
"RTN","BGOUTL",287,0)
 E  I $O(^AUPNVSIT("AA",DFN,9999999-DT+.2359)) S RET=0
"RTN","BGOUTL",288,0)
 E  S RET=1
"RTN","BGOUTL",289,0)
 Q
"RTN","BGOUTL",290,0)
 ; Delete a V file entry
"RTN","BGOUTL",291,0)
 ;  INP = V File # ^ V File IEN
"RTN","BGOUTL",292,0)
VFDEL(RET,INP) ;EP
"RTN","BGOUTL",293,0)
 D VFDEL^BGOUTL2(.RET,+INP,+$P(INP,U,2))
"RTN","BGOUTL",294,0)
 Q
"RTN","BGOUTL",295,0)
 ; Fetch a record from a file
"RTN","BGOUTL",296,0)
GETREC(FNUM,IEN,FLDS) ;EP
"RTN","BGOUTL",297,0)
 N RET,FLD,IENS,VAL,I,X,Y
"RTN","BGOUTL",298,0)
 S IENS=IEN_",",RET=IEN
"RTN","BGOUTL",299,0)
 D GETS^DIQ(FNUM,IENS,FLDS,"IE","VAL")
"RTN","BGOUTL",300,0)
 F I=1:1:$L(FLDS,";") D
"RTN","BGOUTL",301,0)
 .S FLD=$P(FLDS,";",I)
"RTN","BGOUTL",302,0)
 .S X=$G(VAL(FNUM,IENS,FLD,"E")),Y=$G(VAL(FNUM,IENS,FLD,"I"))
"RTN","BGOUTL",303,0)
 .S:X'=Y X=X_"|"_Y
"RTN","BGOUTL",304,0)
 .S $P(RET,U,I+1)=X
"RTN","BGOUTL",305,0)
 Q RET
"RTN","BGOUTL",306,0)
 ; Add/edit a file entry
"RTN","BGOUTL",307,0)
UPDATE(FDA,FLG,IEN) ;EP
"RTN","BGOUTL",308,0)
 N ERR,DFN,X
"RTN","BGOUTL",309,0)
 I $G(FLG)["@" S FLG=$TR(FLG,"@")
"RTN","BGOUTL",310,0)
 E  D
"RTN","BGOUTL",311,0)
 .S X="FDA"
"RTN","BGOUTL",312,0)
 .F  S X=$Q(@X) Q:'$L(X)  K:'$L(@X) @X
"RTN","BGOUTL",313,0)
 Q:$D(FDA)'>1 ""
"RTN","BGOUTL",314,0)
 D UPDATE^DIE(.FLG,"FDA","IEN","ERR")
"RTN","BGOUTL",315,0)
 K FDA
"RTN","BGOUTL",316,0)
 Q $S($G(ERR("DIERR",1)):-ERR("DIERR",1)_U_ERR("DIERR",1,"TEXT",1),1:"")
"RTN","BGOUTL",317,0)
 ; Delete an entry from a file
"RTN","BGOUTL",318,0)
DELETE(DIK,DA) ;EP
"RTN","BGOUTL",319,0)
 N CREF,X,Y
"RTN","BGOUTL",320,0)
 S:DIK=+DIK DIK=$$ROOT^DILFD(DIK)
"RTN","BGOUTL",321,0)
 S CREF=$$CREF^DILF(DIK)
"RTN","BGOUTL",322,0)
 D ^DIK
"RTN","BGOUTL",323,0)
 Q $S($D(@CREF@(DA)):$$ERR(1060,$P($G(@CREF@(0),"UNKNOWN"),U)),1:"")
"RTN","BGOUTL",324,0)
 ; Check and validate visit
"RTN","BGOUTL",325,0)
CHKVISIT(VIEN,DFN,CAT) ;EP
"RTN","BGOUTL",326,0)
 N RET,X0
"RTN","BGOUTL",327,0)
 S RET=$$ISLOCKED^BGOUTL4(VIEN)
"RTN","BGOUTL",328,0)
 Q:RET $S(RET<0:$$ERR(1003),1:$$ERR(1061))
"RTN","BGOUTL",329,0)
 S X0=$G(^AUPNVSIT(VIEN,0))
"RTN","BGOUTL",330,0)
 I $G(DFN),$P(X0,U,5)'=DFN S RET=$$ERR(1062)
"RTN","BGOUTL",331,0)
 E  I $P(X0,U,11) S RET=$$ERR(1063)
"RTN","BGOUTL",332,0)
 E  I $L($G(CAT)),CAT'[$P(X0,U,7) S RET=$$ERR(1064,$$EXTERNAL^DILFD(9000010,.07,,$P(X0,U,7)))
"RTN","BGOUTL",333,0)
 Q RET
"RTN","BGOUTL",334,0)
 ; Get primary provider for a visit
"RTN","BGOUTL",335,0)
 ;  VIEN = Visit IEN
"RTN","BGOUTL",336,0)
 ;  Returns Provider IEN ^ Provider Name ^ V Provider IEN
"RTN","BGOUTL",337,0)
PRIPRV(VIEN) ;EP
"RTN","BGOUTL",338,0)
 N X,RET
"RTN","BGOUTL",339,0)
 Q:'VIEN $$ERR(1002)
"RTN","BGOUTL",340,0)
 S X=0,RET=$$ERR(1065)
"RTN","BGOUTL",341,0)
 F  S X=$O(^AUPNVPRV("AD",VIEN,X)) Q:'X  D  Q:RET>0
"RTN","BGOUTL",342,0)
 .S Y=$G(^AUPNVPRV(X,0))
"RTN","BGOUTL",343,0)
 .S:$P(Y,U,4)="P" RET=$P(Y,U)_U_$P($G(^VA(200,+Y,0)),U)_U_X
"RTN","BGOUTL",344,0)
 Q RET
"RTN","BGOUTL",345,0)
 ; Create an historical visit
"RTN","BGOUTL",346,0)
MAKEHIST(DFN,EVNTDT,LOC,VIEN) ;EP
"RTN","BGOUTL",347,0)
 S EVNTDT=$$CVTDATE(EVNTDT)
"RTN","BGOUTL",348,0)
 S:EVNTDT#100\1=0 EVNTDT=EVNTDT+1
"RTN","BGOUTL",349,0)
 Q:EVNTDT\1>DT $$ERR(1066)
"RTN","BGOUTL",350,0)
 I $G(VIEN) D  Q:VIEN VIEN
"RTN","BGOUTL",351,0)
 .N X,V,L
"RTN","BGOUTL",352,0)
 .S X=$G(^AUPNVSIT(VIEN,0)),L=$G(^(21)),V=VIEN,VIEN=0
"RTN","BGOUTL",353,0)
 .Q:DFN'=$P(X,U,5)
"RTN","BGOUTL",354,0)
 .Q:$P(X,U,7)'="E"
"RTN","BGOUTL",355,0)
 .I X\1'=EVNTDT,+X'=EVNTDT Q
"RTN","BGOUTL",356,0)
 .I LOC=+LOC Q:$P(X,U,6)'=LOC
"RTN","BGOUTL",357,0)
 .E  I $L(LOC),$P(L,U)'=LOC,$$GET1^DIQ(4,$P(X,U,6),.01)'=LOC Q
"RTN","BGOUTL",358,0)
 .S VIEN=V
"RTN","BGOUTL",359,0)
 Q $$FNDVIS^BGOUTL4(DFN,EVNTDT,"E","",-1,,LOC)
"RTN","BGOUTL",360,0)
 ; Convert date to internal format
"RTN","BGOUTL",361,0)
CVTDATE(X) ;EP
"RTN","BGOUTL",362,0)
 Q:"@"[X X
"RTN","BGOUTL",363,0)
 S:X?1.E1" "1.2N1":"2N.E X=$P(X," ")_"@"_$P(X," ",2,99)
"RTN","BGOUTL",364,0)
 D DT^DILF("PT",X,.X)
"RTN","BGOUTL",365,0)
 Q $S(X>0:X,1:"")
"RTN","BGOUTL",366,0)
 ; Convert date to MM/DD/YYYY format
"RTN","BGOUTL",367,0)
 ; If TM is nonzero, include time portion
"RTN","BGOUTL",368,0)
FMTDATE(X,TM) ;EP
"RTN","BGOUTL",369,0)
 Q:'X ""
"RTN","BGOUTL",370,0)
 N M,D,V
"RTN","BGOUTL",371,0)
 S V=$TR($$FMTE^XLFDT(X,$S($G(TM):"5ZM",1:"5ZD")),"@"," ")
"RTN","BGOUTL",372,0)
 Q V
"RTN","BGOUTL",373,0)
 ;S M=$E(X,4,5),D=$E(X,6,7),V=$E(X,1,3)+1700
"RTN","BGOUTL",374,0)
 ;S:M&D V=D_"/"_V
"RTN","BGOUTL",375,0)
 ;S:M V=M_"/"_V
"RTN","BGOUTL",376,0)
 ;I $G(TM) D
"RTN","BGOUTL",377,0)
 ;.S X=X#1
"RTN","BGOUTL",378,0)
 ;.Q:'X
"RTN","BGOUTL",379,0)
 ;.S X=$TR($J(X*10000\1,4),0)
"RTN","BGOUTL",380,0)
 ;.S V=V_" "_$E(X,1,2)_":"_$E(X,3,4)
"RTN","BGOUTL",381,0)
 ;Q V
"RTN","BGOUTL",382,0)
 ; Convert a string to WP format
"RTN","BGOUTL",383,0)
TOWP(X) ;EP
"RTN","BGOUTL",384,0)
 N I,L,L2,Y,Z
"RTN","BGOUTL",385,0)
 S Y=@X
"RTN","BGOUTL",386,0)
 K @X
"RTN","BGOUTL",387,0)
 S:Y="@" Y=""
"RTN","BGOUTL",388,0)
 F I=1:1 Q:'$L(Y)  D
"RTN","BGOUTL",389,0)
 .S L=$F(Y,$C(13))
"RTN","BGOUTL",390,0)
 .I 'L!(L>242) D
"RTN","BGOUTL",391,0)
 ..S L=$S($L(Y)'>240:999,1:0)
"RTN","BGOUTL",392,0)
 ..F  S L2=$F(Y," ",L) Q:'L2!(L2>242)  S L=L2
"RTN","BGOUTL",393,0)
 .I 'L S Z=$E(Y,1,240),Y=$E(Y,241,99999)
"RTN","BGOUTL",394,0)
 .E  S Z=$E(Y,1,L-2),Y=$E(Y,L,99999)
"RTN","BGOUTL",395,0)
 .S @X@(I,0)=$TR(Z,$C(13,10))
"RTN","BGOUTL",396,0)
 Q $S($D(@X):X,1:"")
"RTN","BGOUTL",397,0)
 ; Convert a value to internal format
"RTN","BGOUTL",398,0)
TOINTRNL(FNUM,FLD,VAL) ;EP
"RTN","BGOUTL",399,0)
 N RET
"RTN","BGOUTL",400,0)
 D CHK^DIE(FNUM,FLD,,VAL,.RET)
"RTN","BGOUTL",401,0)
 Q $S(U[$G(RET):"",1:RET)
"RTN","BGOUTL",402,0)
 ; Return an error code/error dialog
"RTN","BGOUTL",403,0)
ERR(CODE,PARAMS) ;EP
"RTN","BGOUTL",404,0)
 N MSG
"RTN","BGOUTL",405,0)
 S MSG=$$EZBLD^DIALOG(CODE+903620000,.PARAMS)
"RTN","BGOUTL",406,0)
 Q -CODE_U_$S($L(MSG):MSG,1:"Unknown error #"_CODE)
"RTN","BGOUTL",407,0)
 ; Return a temporary global reference
"RTN","BGOUTL",408,0)
TMPGBL(X) ;EP
"RTN","BGOUTL",409,0)
 K ^TMP("BGO"_$G(X),$J) Q $NA(^($J))
"RTN","BGOUTL",410,0)
 ; Returns status of screen application
"RTN","BGOUTL",411,0)
 ;  0=failed  1=passed
"RTN","BGOUTL",412,0)
XSCRN(IEN,SCRN) ;EP
"RTN","BGOUTL",413,0)
 N S,X,Y,I,J,FLD,OPR,VAL,N,P
"RTN","BGOUTL",414,0)
 S X=1  ; Default to passed
"RTN","BGOUTL",415,0)
 I SCRN'="" D
"RTN","BGOUTL",416,0)
 .I $E(SCRN,1,2)="I " D
"RTN","BGOUTL",417,0)
 ..S Y=IEN X SCRN S X=$T
"RTN","BGOUTL",418,0)
 .E  D
"RTN","BGOUTL",419,0)
 ..F I=1:1 S S=$P(SCRN,"&",I) Q:S=""  D  Q:'X
"RTN","BGOUTL",420,0)
 ...S FLD=+S,X=0
"RTN","BGOUTL",421,0)
 ...Q:'FLD
"RTN","BGOUTL",422,0)
 ...S OPR=""
"RTN","BGOUTL",423,0)
 ...F J=1:1:3 Q:"=<>'[]"'[$E(S,$L(FLD)+J)  S OPR=OPR_$E(S,$L(FLD)+J)
"RTN","BGOUTL",424,0)
 ...Q:OPR=""
"RTN","BGOUTL",425,0)
 ...S VAL=$P(S,OPR,2,999)
"RTN","BGOUTL",426,0)
 ...S N=$P($G(^DD(FNUM,FLD,0)),U,4),P=$P(N,";",2),N=$P(N,";")
"RTN","BGOUTL",427,0)
 ...Q:N=""!(P="")
"RTN","BGOUTL",428,0)
 ...X "S X=$P($G(@GBL@(IEN,N)),U,P)"_OPR_"VAL"
"RTN","BGOUTL",429,0)
 Q X
"RTN","BGOUTL2")
0^2^B71576538
"RTN","BGOUTL2",1,0)
BGOUTL2 ; IHS/BAO/TMD - Utilities (continued)  ;18-Jul-2015 08:52;DKM
"RTN","BGOUTL2",2,0)
 ;;1.1;BGO COMPONENTS;**1,3,5,6,10,11,12,13**;Mar 20, 2007;Build 15
"RTN","BGOUTL2",3,0)
 ; Add refusals to output stream
"RTN","BGOUTL2",4,0)
 ;  R ^ Refusal IEN [2] ^ Type IEN [3] ^ Type Name [4] ^ Item IEN [5] ^ Item Name [6] ^ Provider IEN [7] ^
"RTN","BGOUTL2",5,0)
 ;  Provider Name [8] ^ Date [9] ^ Locked [10] ^ Reason [11] ^ Comment [12]
"RTN","BGOUTL2",6,0)
 ;  Added AICD lookup
"RTN","BGOUTL2",7,0)
REFGET(RET,DFN,FNUM,CNT) ;EP
"RTN","BGOUTL2",8,0)
 N TYPE,VDT,RIEN,REC,TYPNM,DATE,REASON,COMMENT,PRV,PRVNM
"RTN","BGOUTL2",9,0)
 S TYPE=0,CNT=+$G(CNT)
"RTN","BGOUTL2",10,0)
 S:$G(RET)="" RET=$$TMPGBL^BGOUTL
"RTN","BGOUTL2",11,0)
 F  S TYPE=$O(^AUPNPREF("AA",DFN,FNUM,TYPE)) Q:'TYPE  D
"RTN","BGOUTL2",12,0)
 .S VDT=0
"RTN","BGOUTL2",13,0)
 .F  S VDT=$O(^AUPNPREF("AA",DFN,FNUM,TYPE,VDT)) Q:'VDT  D
"RTN","BGOUTL2",14,0)
 ..S RIEN=0
"RTN","BGOUTL2",15,0)
 ..F  S RIEN=$O(^AUPNPREF("AA",DFN,FNUM,TYPE,VDT,RIEN)) Q:'RIEN  D
"RTN","BGOUTL2",16,0)
 ...S CNT=CNT+1,@RET@(CNT)=$$REFGET1(RIEN)
"RTN","BGOUTL2",17,0)
 Q
"RTN","BGOUTL2",18,0)
 ; Return data for a specified refusal
"RTN","BGOUTL2",19,0)
 ;  R ^ Refusal IEN [2] ^ Type IEN [3] ^ Type Name [4] ^ Item IEN [5] ^ Item Name [6] ^ Provider IEN [7] ^
"RTN","BGOUTL2",20,0)
 ;  Provider Name [8] ^ Date [9] ^ Locked [10] ^ Reason [11] ^ Comment [12]
"RTN","BGOUTL2",21,0)
REFGET1(RIEN) ;EP
"RTN","BGOUTL2",22,0)
 N REC,PRV,COMMENT,TYPE,TYPENM,REASON,DATE,PRVNM,FNUM,ITEM,ITEMNM,ARR,IN,OUT,X,SNTXT
"RTN","BGOUTL2",23,0)
 S REC=$G(^AUPNPREF(RIEN,0)),PRV=$P($G(^(12)),U,4),COMMENT=$P($G(^(11)),U)
"RTN","BGOUTL2",24,0)
 Q:REC=""
"RTN","BGOUTL2",25,0)
 S SNTXT=""
"RTN","BGOUTL2",26,0)
 S TYPE=+REC
"RTN","BGOUTL2",27,0)
 S TYPENM=$P($G(^AUTTREFT(TYPE,0)),U)
"RTN","BGOUTL2",28,0)
 S DATE=$$FMTDATE^BGOUTL($P(REC,U,3))
"RTN","BGOUTL2",29,0)
 S ITEMNM=$P(REC,U,4)
"RTN","BGOUTL2",30,0)
 ;IHS/MSC/MGH Patch 13
"RTN","BGOUTL2",31,0)
 I TYPENM="SNOMED" D
"RTN","BGOUTL2",32,0)
 .S ITEM=$P($G(^AUPNPREF(RIEN,13)),U,1)
"RTN","BGOUTL2",33,0)
 .S X=$$CONC^BSTSAPI(ITEM_"^^^1")
"RTN","BGOUTL2",34,0)
 .S ITEMNM=$P(X,U,4)
"RTN","BGOUTL2",35,0)
 E  D
"RTN","BGOUTL2",36,0)
 .S FNUM=$P(REC,U,5)
"RTN","BGOUTL2",37,0)
 .S ITEM=$P(REC,U,6)
"RTN","BGOUTL2",38,0)
 .S:ITEMNM="" ITEMNM=$$GET1^DIQ(FNUM,ITEM,.01)
"RTN","BGOUTL2",39,0)
 S REASON=$$EXTERNAL^DILFD(9000022,.07,,$P(REC,U,7))
"RTN","BGOUTL2",40,0)
 ;IHS/MSC/MGH patch 13
"RTN","BGOUTL2",41,0)
 S CT=$P($G(^AUPNPREF(RIEN,1)),U,1)
"RTN","BGOUTL2",42,0)
 I CT'="" D
"RTN","BGOUTL2",43,0)
 .;S IN=CT_"^^^1"
"RTN","BGOUTL2",44,0)
 .;S OUT="ARR"
"RTN","BGOUTL2",45,0)
 .;S X=$$CNCLKP^BSTSAPI(.OUT,.IN)
"RTN","BGOUTL2",46,0)
 .;I X>0 D
"RTN","BGOUTL2",47,0)
 .;.S SNTXT=@OUT@(1,"PRE","TRM")
"RTN","BGOUTL2",48,0)
 .S X=$$CONC^BSTSAPI(CT_"^^^1")
"RTN","BGOUTL2",49,0)
 .S SNTXT=$P(X,U,4)
"RTN","BGOUTL2",50,0)
 S PRVNM=$S(PRV:$$GET1^DIQ(200,PRV,.01),1:"")
"RTN","BGOUTL2",51,0)
 I TYPENM="EDUCATION TOPICS" D
"RTN","BGOUTL2",52,0)
 .N TXT,SNO,IN,X,TOPTYP
"RTN","BGOUTL2",53,0)
 .I $P($G(^AUTTEDT(ITEM,0)),U,12)'="" D
"RTN","BGOUTL2",54,0)
 ..S TXT=""
"RTN","BGOUTL2",55,0)
 ..S SNO=$P($G(^AUTTEDT(ITEM,0)),U,12)
"RTN","BGOUTL2",56,0)
 ..S IN=SNO_U_36_U_U_1
"RTN","BGOUTL2",57,0)
 ..S X=$$CONC^BSTSAPI(IN)
"RTN","BGOUTL2",58,0)
 ..S TXT=$P(X,U,4)
"RTN","BGOUTL2",59,0)
 ..S TOPTYP=$P($P($G(^AUTTEDT(ITEM,0)),U,1),"-",2)
"RTN","BGOUTL2",60,0)
 ..S ITEMNM=TXT_"-"_TOPTYP
"RTN","BGOUTL2",61,0)
 Q "R"_U_RIEN_U_TYPE_U_TYPENM_U_ITEM_U_ITEMNM_U_PRV_U_PRVNM_U_DATE_U_$$REFLCK(RIEN)_U_REASON_U_COMMENT_U_SNTXT
"RTN","BGOUTL2",62,0)
 ; Store a patient refusal (using visit IEN)
"RTN","BGOUTL2",63,0)
REFSET(VIEN,ITEM,TYPE,RSN,CMNT,PRV,CT) ;EP
"RTN","BGOUTL2",64,0)
 N X,RIEN
"RTN","BGOUTL2",65,0)
 S RIEN=""
"RTN","BGOUTL2",66,0)
 S X=$G(^AUPNVSIT(VIEN,0))
"RTN","BGOUTL2",67,0)
 ;Q $$REFSET2($P(X,U,5),X\1,ITEM,TYPE,RSN,.CMNT,.PRV,IEN,CT)
"RTN","BGOUTL2",68,0)
 Q $$REFSET2($P(X,U,5),X\1,ITEM,TYPE,RSN,.CMNT,.PRV,RIEN,.CT)  ;2013-10-02 DKA P13 Correct <UNDEFINED> error
"RTN","BGOUTL2",69,0)
 ; Store a patient refusal (alternate)
"RTN","BGOUTL2",70,0)
REFSET2(DFN,DAT,ITEM,TYPE,RSN,CMNT,PRV,RIEN,CT) ;EP
"RTN","BGOUTL2",71,0)
 N FDA,ERR,FNUM,RET,IENX,OPR,ZN,CPT,IN,OUT,X,ARR,SNO
"RTN","BGOUTL2",72,0)
 S CT=$G(CT),RIEN=$G(RIEN)
"RTN","BGOUTL2",73,0)
 S CPT=$$FIND1^DIC(9999999.73,,"X","CPT")  ;Patch 10 IHS/MSC/MGH
"RTN","BGOUTL2",74,0)
 S SNO=$$FIND1^DIC(9999999.73,,"X","SNOMED") ;Patch 13
"RTN","BGOUTL2",75,0)
 S TYPE=$$FIND1^DIC(9999999.73,,"X",TYPE)
"RTN","BGOUTL2",76,0)
 Q:'TYPE $$ERR^BGOUTL(1067)
"RTN","BGOUTL2",77,0)
 S FNUM=$P(^AUTTREFT(TYPE,0),U,2),OPR=1
"RTN","BGOUTL2",78,0)
 S:'$G(RIEN) RIEN=$O(^AUPNPREF("AA",DFN,FNUM,ITEM,9999999-DAT,0))
"RTN","BGOUTL2",79,0)
 ;I "@"[RSN Q:'RIEN  S TYPE="@",OPR=2
"RTN","BGOUTL2",80,0)
 I "@"[RSN,RIEN S TYPE="@",OPR=2
"RTN","BGOUTL2",81,0)
 S:'RIEN RIEN="+1",OPR=0
"RTN","BGOUTL2",82,0)
 S:OPR=2 ZN=$G(^AUPNPREF(RIEN,0))
"RTN","BGOUTL2",83,0)
 S FDA=$NA(FDA(9000022,RIEN_","))
"RTN","BGOUTL2",84,0)
 S @FDA@(.01)="`"_TYPE
"RTN","BGOUTL2",85,0)
 S:'OPR @FDA@(.02)="`"_DFN
"RTN","BGOUTL2",86,0)
 S @FDA@(.03)=DAT
"RTN","BGOUTL2",87,0)
 S @FDA@(.08)=DAT
"RTN","BGOUTL2",88,0)
 ;IHS/MSC/MGH Added storing narrative for CPT codes Patch 10
"RTN","BGOUTL2",89,0)
 I TYPE=CPT S @FDA@(.04)=$E($$GET1^DIQ(FNUM,ITEM,2),1,80)
"RTN","BGOUTL2",90,0)
 E  D
"RTN","BGOUTL2",91,0)
 .I TYPE=SNO D
"RTN","BGOUTL2",92,0)
 ..S @FDA@(1301)=ITEM
"RTN","BGOUTL2",93,0)
 ..S @FDA@(.06)=ITEM
"RTN","BGOUTL2",94,0)
 ..K ARR
"RTN","BGOUTL2",95,0)
 ..S IN=ITEM_"^^^1"
"RTN","BGOUTL2",96,0)
 ..S OUT="ARR"
"RTN","BGOUTL2",97,0)
 ..S X=$$CNCLKP^BSTSAPI(.OUT,.IN)
"RTN","BGOUTL2",98,0)
 ..I X>0 D
"RTN","BGOUTL2",99,0)
 ...S @FDA@(1302)=ARR(1,"PRE","DSC")
"RTN","BGOUTL2",100,0)
 ...S @FDA@(.04)=ARR(1,"PRE","TRM")
"RTN","BGOUTL2",101,0)
 ..;END patch 13 mod
"RTN","BGOUTL2",102,0)
 .E  S @FDA@(.04)=$E($$GET1^DIQ(FNUM,ITEM,.01),1,80)
"RTN","BGOUTL2",103,0)
 S @FDA@(.05)=FNUM
"RTN","BGOUTL2",104,0)
 S @FDA@(.06)=ITEM
"RTN","BGOUTL2",105,0)
 S @FDA@(.07)=RSN
"RTN","BGOUTL2",106,0)
 ;IHS/MSC/MGH Patch 13 Added for reason
"RTN","BGOUTL2",107,0)
 K ARR
"RTN","BGOUTL2",108,0)
 I CT'="" D
"RTN","BGOUTL2",109,0)
 .S IN=CT_"^^^1^"
"RTN","BGOUTL2",110,0)
 .S OUT="ARR"
"RTN","BGOUTL2",111,0)
 .S @FDA@(1.01)=CT
"RTN","BGOUTL2",112,0)
 .S X=$$CNCLKP^BSTSAPI(.OUT,.IN)
"RTN","BGOUTL2",113,0)
 .I X>0 D
"RTN","BGOUTL2",114,0)
 ..S @FDA@(1.02)=ARR(1,"PRE","DSC")
"RTN","BGOUTL2",115,0)
 .;END patch 13 mod
"RTN","BGOUTL2",116,0)
 S:$D(CMNT) @FDA@(1101)=CMNT
"RTN","BGOUTL2",117,0)
 S:'$G(PRV) PRV=DUZ
"RTN","BGOUTL2",118,0)
 S @FDA@(1204)="`"_PRV
"RTN","BGOUTL2",119,0)
 ;IHS/MSC/MGH new fields patch 11
"RTN","BGOUTL2",120,0)
 I $E(RIEN)="+" D
"RTN","BGOUTL2",121,0)
 .S @FDA@(1216)="N"
"RTN","BGOUTL2",122,0)
 .S @FDA@(1217)="`"_DUZ
"RTN","BGOUTL2",123,0)
 S @FDA@(1218)="N"
"RTN","BGOUTL2",124,0)
 S @FDA@(1219)="`"_DUZ
"RTN","BGOUTL2",125,0)
 S RET=$$UPDATE^BGOUTL(.FDA,"E@",.IENX)
"RTN","BGOUTL2",126,0)
 S:$E(RIEN)="+" RIEN=$G(IENX(1))
"RTN","BGOUTL2",127,0)
 D:'RET REFEVT(RIEN,OPR,.ZN)
"RTN","BGOUTL2",128,0)
 Q RET
"RTN","BGOUTL2",129,0)
 ; Delete a refusal
"RTN","BGOUTL2",130,0)
REFDEL(IEN) ;EP
"RTN","BGOUTL2",131,0)
 N RET,X
"RTN","BGOUTL2",132,0)
 S X=$G(^AUPNPREF(IEN,0))
"RTN","BGOUTL2",133,0)
 Q:'$L(X) ""
"RTN","BGOUTL2",134,0)
 S RET=$$DELETE^BGOUTL("^AUPNPREF(",IEN)
"RTN","BGOUTL2",135,0)
 D:'RET REFEVT(IEN,2,X)
"RTN","BGOUTL2",136,0)
 Q RET
"RTN","BGOUTL2",137,0)
 ; Delete a refusal (alternate)
"RTN","BGOUTL2",138,0)
REFDEL2(VIEN,ITEM,TYPE) ;EP
"RTN","BGOUTL2",139,0)
 N X,FNUM
"RTN","BGOUTL2",140,0)
 S TYPE=$$FIND1^DIC(9999999.73,,"X",TYPE)
"RTN","BGOUTL2",141,0)
 Q:'TYPE $$ERR^BGOUTL(1067)
"RTN","BGOUTL2",142,0)
 S FNUM=$P(^AUTTREFT(TYPE,0),U,2)
"RTN","BGOUTL2",143,0)
 S X=$G(^AUPNVSIT(VIEN,0))
"RTN","BGOUTL2",144,0)
 Q $$REFDEL(+$O(^AUPNPREF("AA",+$P(X,U,5),FNUM,ITEM,9999999-(X\1),0)))
"RTN","BGOUTL2",145,0)
 ; Broadcast a refusal event
"RTN","BGOUTL2",146,0)
REFEVT(IEN,OPR,X) ;EP
"RTN","BGOUTL2",147,0)
 N DFN,TYPE
"RTN","BGOUTL2",148,0)
 S:'$D(X) X=$G(^AUPNPREF(IEN,0))
"RTN","BGOUTL2",149,0)
 S DFN=$P(X,U,2)
"RTN","BGOUTL2",150,0)
 Q:'DFN
"RTN","BGOUTL2",151,0)
 S TYPE=$P($G(^AUTTREFT(+X,0)),U)
"RTN","BGOUTL2",152,0)
 D BRDCAST^BGOUTL4("REFUSAL."_DFN_"."_TYPE,IEN_U_$$UID^BGOUTL4_U_OPR)
"RTN","BGOUTL2",153,0)
 Q
"RTN","BGOUTL2",154,0)
 ; Returns true if a refusal is locked against editing
"RTN","BGOUTL2",155,0)
REFLCK(IEN) ;EP
"RTN","BGOUTL2",156,0)
 N DAT,DAYS
"RTN","BGOUTL2",157,0)
 S DAT=+$P($G(^AUPNPREF(IEN,0)),U,3)
"RTN","BGOUTL2",158,0)
 S DAYS=$$GET^XPAR("ALL","BEHOENCX VISIT LOCKED")
"RTN","BGOUTL2",159,0)
 Q $S('DAT:-1,1:$$FMDIFF^XLFDT(DT,DAT)>$S(DAYS<1:1,1:DAYS))
"RTN","BGOUTL2",160,0)
 ; Check for duplicate V File type in a visit
"RTN","BGOUTL2",161,0)
 ; DKA 7/12/13 Patch 13 - Add EIEFLD to specify Entered in Error field
"RTN","BGOUTL2",162,0)
VFCHK(RET,FNUM,TYPE,ENTITY,VIEN,EIEFLD) ;EP ;DKA 7/12/13 Add EIEFLD to specify Entered in Error field
"RTN","BGOUTL2",163,0)
 ;D VFFND(.RET,FNUM,TYPE,VIEN)
"RTN","BGOUTL2",164,0)
 D VFFND(.RET,FNUM,TYPE,VIEN,.EIEFLD)
"RTN","BGOUTL2",165,0)
 S:RET RET=$$ERR^BGOUTL(1068,ENTITY)_U_RET
"RTN","BGOUTL2",166,0)
 Q
"RTN","BGOUTL2",167,0)
 ; Locate a V File entry
"RTN","BGOUTL2",168,0)
 ; DKA 7/12/13 Patch 13 - Add EIEFLD to specify Entered in Error field
"RTN","BGOUTL2",169,0)
VFFND(RET,FNUM,TYPE,VIEN,EIEFLD) ;EP
"RTN","BGOUTL2",170,0)
 N X,GBL
"RTN","BGOUTL2",171,0)
 S GBL=$$ROOT^DILFD(FNUM,,1)
"RTN","BGOUTL2",172,0)
 I '$L(GBL) S RET=$$ERR^BGOUTL(1069) Q
"RTN","BGOUTL2",173,0)
 S X=0,RET=""
"RTN","BGOUTL2",174,0)
 F  S X=$O(@GBL@("AD",VIEN,X)) Q:'X  D  Q:RET
"RTN","BGOUTL2",175,0)
 .I FNUM=9000010.51,$G(EIEFLD)=1.01,$P($G(@GBL@(X,1)),U) Q  ; DKA 7/12/13 Ignore Entered in Error entries
"RTN","BGOUTL2",176,0)
 .S:$P($G(@GBL@(X,0)),U)=TYPE RET=X
"RTN","BGOUTL2",177,0)
 Q
"RTN","BGOUTL2",178,0)
 ; Create root V File entry
"RTN","BGOUTL2",179,0)
 ;  FNUM = File number
"RTN","BGOUTL2",180,0)
 ;  TYPE = Entry type (.01 of V File)
"RTN","BGOUTL2",181,0)
 ;  VIEN = Visit IEN
"RTN","BGOUTL2",182,0)
 ;  NAME = Name of entity (if checking for dups)
"RTN","BGOUTL2",183,0)
 ;  FLDS = Additional field values (optional)
"RTN","BGOUTL2",184,0)
 ; .RET  = IEN of new entry or -1^error text
"RTN","BGOUTL2",185,0)
 ; DKA 7/12/13 Patch 13 - Add EIEFLD to specify Entered in Error field
"RTN","BGOUTL2",186,0)
VFNEW(RET,FNUM,TYPE,VIEN,NAME,FLDS,EIEFLD) ;EP
"RTN","BGOUTL2",187,0)
 N FDA,IEN,V0,CAT,APCDVSIT,PXCEVIEN
"RTN","BGOUTL2",188,0)
 S V0=$G(^AUPNVSIT(VIEN,0)),CAT=$P(V0,U,7)
"RTN","BGOUTL2",189,0)
 ;I $L($G(NAME)),CAT'="H" D VFCHK(.RET,FNUM,TYPE,NAME,VIEN) Q:RET
"RTN","BGOUTL2",190,0)
 I $L($G(NAME)),CAT'="H" D VFCHK(.RET,FNUM,TYPE,NAME,VIEN,.EIEFLD) Q:RET
"RTN","BGOUTL2",191,0)
 I $G(DUZ("AG"))="I" S APCDVSIT=VIEN
"RTN","BGOUTL2",192,0)
 E  S PXCEVIEN=VIEN
"RTN","BGOUTL2",193,0)
 S FDA=$NA(FDA(FNUM,"+1,"))
"RTN","BGOUTL2",194,0)
 S @FDA@(.01)=TYPE
"RTN","BGOUTL2",195,0)
 S @FDA@(.02)=$P(V0,U,5)
"RTN","BGOUTL2",196,0)
 S @FDA@(.03)=VIEN
"RTN","BGOUTL2",197,0)
 S:$D(^DD(FNUM,1201,0)) @FDA@(1201)=$S(CAT="H":$$NOW^XLFDT,1:+V0)
"RTN","BGOUTL2",198,0)
 M @FDA=FLDS
"RTN","BGOUTL2",199,0)
 S RET=$$UPDATE^BGOUTL(.FDA,,.IEN)
"RTN","BGOUTL2",200,0)
 S:'RET RET=IEN(1)
"RTN","BGOUTL2",201,0)
 Q
"RTN","BGOUTL2",202,0)
 ; Delete V File entry
"RTN","BGOUTL2",203,0)
VFDEL(RET,FNUM,VFIEN) ;EP
"RTN","BGOUTL2",204,0)
 N VIEN,GBL,X
"RTN","BGOUTL2",205,0)
 S GBL=$$ROOT^DILFD(FNUM,,1),RET=""
"RTN","BGOUTL2",206,0)
 Q:'VFIEN
"RTN","BGOUTL2",207,0)
 I '$L(GBL) S RET=$$ERR^BGOUTL(1069) Q
"RTN","BGOUTL2",208,0)
 S X=$G(@GBL@(VFIEN,0))
"RTN","BGOUTL2",209,0)
 S VIEN=$P(X,U,3)
"RTN","BGOUTL2",210,0)
 Q:'VIEN
"RTN","BGOUTL2",211,0)
 S RET=$$CHKVISIT^BGOUTL(VIEN)
"RTN","BGOUTL2",212,0)
 S:'RET RET=$$DELETE^BGOUTL(FNUM,VFIEN)
"RTN","BGOUTL2",213,0)
 D:'RET VFEVT(FNUM,VFIEN,2,X)
"RTN","BGOUTL2",214,0)
 Q
"RTN","BGOUTL2",215,0)
 ; Fetch V File entries
"RTN","BGOUTL2",216,0)
 ;  INP = Patient IEN (for entries associated with a patient) [1] ^
"RTN","BGOUTL2",217,0)
 ;        V File IEN (for single entry) [2] ^
"RTN","BGOUTL2",218,0)
 ;        Visit IEN (for entries associated with a visit) [3]
"RTN","BGOUTL2",219,0)
 ;  FNUM= V File #
"RTN","BGOUTL2",220,0)
 ;  FLDS= Fields to retrieve
"RTN","BGOUTL2",221,0)
VFGET(RET,INP,FNUM,FLDS) ;EP
"RTN","BGOUTL2",222,0)
 N VFIEN,VIEN,DFN,GBL,CNT,XREF,X
"RTN","BGOUTL2",223,0)
 S RET=$$TMPGBL^BGOUTL
"RTN","BGOUTL2",224,0)
 S GBL=$$ROOT^DILFD(FNUM,,1)
"RTN","BGOUTL2",225,0)
 I '$L(GBL) S @RET@(1)=$$ERR^BGOUTL(1069) Q
"RTN","BGOUTL2",226,0)
 S CNT=0
"RTN","BGOUTL2",227,0)
 S DFN=+INP
"RTN","BGOUTL2",228,0)
 S VFIEN=$P(INP,U,2)
"RTN","BGOUTL2",229,0)
 S VIEN=$P(INP,U,3)
"RTN","BGOUTL2",230,0)
 I VFIEN D
"RTN","BGOUTL2",231,0)
 .I '$D(@GBL@(VFIEN,0)) S @RET@(1)=$$ERR^BGOUTL(1070)
"RTN","BGOUTL2",232,0)
 .E  D GV1
"RTN","BGOUTL2",233,0)
 E  I VIEN D
"RTN","BGOUTL2",234,0)
 .S VFIEN=0
"RTN","BGOUTL2",235,0)
 .F  S VFIEN=$O(@GBL@("AD",VIEN,VFIEN)) Q:'VFIEN  D GV1
"RTN","BGOUTL2",236,0)
 E  I DFN D
"RTN","BGOUTL2",237,0)
 .S VFIEN="",XREF=$$VFPTXREF   ;P6
"RTN","BGOUTL2",238,0)
 .F  S VFIEN=$O(@GBL@(XREF,DFN,VFIEN),-1) Q:'VFIEN  D GV1
"RTN","BGOUTL2",239,0)
 E  S @RET@(1)=$$ERR^BGOUTL(1008)
"RTN","BGOUTL2",240,0)
 Q
"RTN","BGOUTL2",241,0)
GV1 S X=$$GETREC^BGOUTL(FNUM,VFIEN,FLDS)
"RTN","BGOUTL2",242,0)
 S CNT=CNT+1,@RET@(CNT)=$P(X,U)_U_$$ISLOCKED^BGOUTL4(+$P($G(@GBL@(VFIEN,0)),U,3))_U_$P(X,U,2,9999)
"RTN","BGOUTL2",243,0)
 Q
"RTN","BGOUTL2",244,0)
 ; Fire V file update events
"RTN","BGOUTL2",245,0)
 ;  FNUM  = V File #
"RTN","BGOUTL2",246,0)
 ;  VFIEN = V File IEN
"RTN","BGOUTL2",247,0)
 ;  OPR   = Operation (0 = add, 1 = edit, 2 = delete)
"RTN","BGOUTL2",248,0)
VFEVT(FNUM,VFIEN,OPR,X) ;EP
"RTN","BGOUTL2",249,0)
 N ID,GBL,DFN,VIEN,DATA
"RTN","BGOUTL2",250,0)
 S GBL=$$ROOT^DILFD(FNUM,,1)
"RTN","BGOUTL2",251,0)
 Q:'$L(GBL)
"RTN","BGOUTL2",252,0)
 Q:'$G(VFIEN)  ;P6
"RTN","BGOUTL2",253,0)
 S ID=$P(GBL,"AUPNV",2)
"RTN","BGOUTL2",254,0)
 S:'$D(X) X=$G(@GBL@(VFIEN,0))
"RTN","BGOUTL2",255,0)
 S DFN=$P(X,U,2),VIEN=$P(X,U,3),DATA=VFIEN_U_$$UID^BGOUTL4_U_OPR_U_$P(X,U)_U_VIEN
"RTN","BGOUTL2",256,0)
 D:DFN BRDCAST^BGOUTL4("PCC."_DFN_"."_ID,DATA)
"RTN","BGOUTL2",257,0)
 D:VIEN BRDCAST^BGOUTL4("VISIT."_VIEN_"."_ID,DATA)
"RTN","BGOUTL2",258,0)
 D:VIEN VFMOD(VIEN)
"RTN","BGOUTL2",259,0)
 Q
"RTN","BGOUTL2",260,0)
 ; Update the visit modification date
"RTN","BGOUTL2",261,0)
VFMOD(AUPNVSIT) ;EP
"RTN","BGOUTL2",262,0)
 Q:$G(DUZ("AG"))'="I"  ;P6
"RTN","BGOUTL2",263,0)
 N DIE,DA,DR,DIU,DIV
"RTN","BGOUTL2",264,0)
 D MOD^AUPNVSIT
"RTN","BGOUTL2",265,0)
 Q
"RTN","BGOUTL2",266,0)
 ; Returns patient xref for V files
"RTN","BGOUTL2",267,0)
VFPTXREF() ;
"RTN","BGOUTL2",268,0)
 Q $S($G(DUZ("AG"))="I":"AC",1:"C")
"RTN","BGOUTL2",269,0)
 ; Find/create narrative text in narrative file, returning IEN
"RTN","BGOUTL2",270,0)
FNDNARR(NARR,CREATE) ;EP
"RTN","BGOUTL2",271,0)
 N IEN,FDA,TRC,RET
"RTN","BGOUTL2",272,0)
 Q:'$L(NARR) ""
"RTN","BGOUTL2",273,0)
 S IEN=0,TRC=$E(NARR,1,30),NARR=$E(NARR,1,160),CREATE=$G(CREATE,1)
"RTN","BGOUTL2",274,0)
 F  S IEN=$O(^AUTNPOV("B",TRC,IEN)) Q:'IEN  Q:$P($G(^AUTNPOV(IEN,0)),U)=NARR
"RTN","BGOUTL2",275,0)
 Q:IEN!'CREATE IEN
"RTN","BGOUTL2",276,0)
 S FDA(9999999.27,"+1,",.01)=NARR
"RTN","BGOUTL2",277,0)
 S RET=$$UPDATE^BGOUTL(.FDA,"E",.IEN)
"RTN","BGOUTL2",278,0)
 Q $S(RET:RET,1:IEN(1))
"RTN","BGOUTL2",279,0)
 ;Return a subset list from the Apelon tool
"RTN","BGOUTL2",280,0)
SUBSET(RET,SUBSET) ; EP
"RTN","BGOUTL2",281,0)
 N OUT,IN,X
"RTN","BGOUTL2",282,0)
 S RET=$$SNOTMP
"RTN","BGOUTL2",283,0)
 S OUT="ARR"
"RTN","BGOUTL2",284,0)
 S IN=SUBSET_"^36^1"
"RTN","BGOUTL2",285,0)
 S X=$$SUBLST^BSTSAPI(.OUT,.IN)
"RTN","BGOUTL2",286,0)
 ;1  means success
"RTN","BGOUTL2",287,0)
 I X>0 D
"RTN","BGOUTL2",288,0)
 .M @RET=@OUT
"RTN","BGOUTL2",289,0)
 Q
"RTN","BGOUTL2",290,0)
SNOTMP() K ^TMP("BGOSN",$J) Q $NA(^($J))
"RTN","BGOUTL2",291,0)
 ; Returns true if CSV is active
"RTN","BGOUTL2",292,0)
CSVACT(RTN) ;EP
"RTN","BGOUTL2",293,0)
 Q $S(DUZ("AG")'="I":1,$$VERSION^XPDUTL("BCSV")="":0,'$L($G(RTN)):1,1:$T(+0^@RTN)'="")
"RTN","BGOUTL2",294,0)
AICD() ;EP
"RTN","BGOUTL2",295,0)
 Q $S($$VERSION^XPDUTL("AICD")="4.0":1,1:0)
"RTN","BGOUTL2",296,0)
 ; Get the SNOMED data for a Concept ID
"RTN","BGOUTL2",297,0)
SNMDCONC(RET,CONCID) ; EP
"RTN","BGOUTL2",298,0)
 S RET=$$CONC^BSTSAPI($G(CONCID))
"RTN","BGOUTL2",299,0)
 Q
"RTN","BGOUTL3")
0^3^B3068906
"RTN","BGOUTL3",1,0)
BGOUTL3 ; IHS/BAO/TMD - Utilities (continued)  ;11-Jul-2013 13:22;du
"RTN","BGOUTL3",2,0)
 ;;1.1;BGO COMPONENTS;**11,13**;Mar 20, 2007;Build 15
"RTN","BGOUTL3",3,0)
GETSET(RET,BGOFILE,BGOFLD,BGOCHK) ;gets set of codes
"RTN","BGOUTL3",4,0)
 ; RET(n)=code^text for code
"RTN","BGOUTL3",5,0)
 N BGOPCC,BGOPCCL,BGOPCCC,BGOLO,BGOHI,BGOPCCD,BGOPCCT
"RTN","BGOUTL3",6,0)
 S BGOCHK=$G(BGOCHK)
"RTN","BGOUTL3",7,0)
 S BGOLO="abcdefghijklmnopqrstuvwxyz"
"RTN","BGOUTL3",8,0)
 S BGOHI="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","BGOUTL3",9,0)
 D FIELD^DID(BGOFILE,BGOFLD,"","POINTER","BGOPCC","BGOPCC")
"RTN","BGOUTL3",10,0)
 S BGOPCCL=$L(BGOPCC("POINTER"),";")-1
"RTN","BGOUTL3",11,0)
 F BGOPCCC=1:1:BGOPCCL D
"RTN","BGOUTL3",12,0)
 . S BGOPCCD=$P($P(BGOPCC("POINTER"),";",BGOPCCC),":",1)
"RTN","BGOUTL3",13,0)
 . S BGOPCCT=$P($P(BGOPCC("POINTER"),";",BGOPCCC),":",2)
"RTN","BGOUTL3",14,0)
 . I BGOCHK'="" D CHK(BGOFILE,BGOPCCD,BGOCHK)
"RTN","BGOUTL3",15,0)
 . I BGOCHK="" S RET(BGOPCCC)=BGOPCCD_"^"_$E(BGOPCCT)_$TR($E(BGOPCCT,2,99),BGOHI,BGOLO)
"RTN","BGOUTL3",16,0)
 Q
"RTN","BGOUTL3",17,0)
CHK(BGOFILE,BGOPCCD,BGOCHK) ;See which codes are acceptable for this file
"RTN","BGOUTL3",18,0)
 N IEN,C
"RTN","BGOUTL3",19,0)
 I BGOFILE=9000010.13 D  Q         ;EXAM FILE
"RTN","BGOUTL3",20,0)
 .S IEN="" S IEN=$O(^AUTTEXAM("B",BGOCHK,IEN))
"RTN","BGOUTL3",21,0)
 .I IEN="" S BGOCHK="" Q
"RTN","BGOUTL3",22,0)
 .S C=$P($G(^AUTTEXAM(IEN,0)),U,2)
"RTN","BGOUTL3",23,0)
 .S X=BGOPCCD
"RTN","BGOUTL3",24,0)
 .D EXAM
"RTN","BGOUTL3",25,0)
 .I $D(X) S RET(BGOPCCC)=BGOPCCD_"^"_$E(BGOPCCT)_$TR($E(BGOPCCT,2,99),BGOHI,BGOLO)
"RTN","BGOUTL3",26,0)
 Q
"RTN","BGOUTL3",27,0)
EXAM ;Check exam codes
"RTN","BGOUTL3",28,0)
 I X="RF" Q  ;referral good for all exam types
"RTN","BGOUTL3",29,0)
 I X="PA",C'=34 K X Q
"RTN","BGOUTL3",30,0)
 I X="PR",C'=34 K X Q
"RTN","BGOUTL3",31,0)
 I X="PAP",C'=34 K X Q
"RTN","BGOUTL3",32,0)
 I X="A",C=34 K X Q
"RTN","BGOUTL3",33,0)
 I X="A",C=35 K X Q
"RTN","BGOUTL3",34,0)
 I X="A",C=36 K X Q
"RTN","BGOUTL3",35,0)
 I X="PO",(C'=35&(C'=36)) K X Q
"RTN","BGOUTL3",36,0)
 I X="L",(C'=42&(C'=43)) K X Q
"RTN","BGOUTL3",37,0)
 I X="M",(C'=42&(C'=43)) K X Q
"RTN","BGOUTL3",38,0)
 I X="H",(C'=42&(C'=43)) K X Q
"RTN","BGOUTL3",39,0)
 I C=42!(C=43),X'="L",X'="M",X'="H" K X Q
"RTN","BGOUTL3",40,0)
 Q
"RTN","BGOUTL4")
0^4^B2962827
"RTN","BGOUTL4",1,0)
BGOUTL4 ; IHS/RI/DKM Bridge utilities;18-Jul-2015 08:52;DKM
"RTN","BGOUTL4",2,0)
 ;;1.1;BGO COMPONENTS;;;Build 15
"RTN","BGOUTL4",3,0)
HASKEY(KEY,USR) ;
"RTN","BGOUTL4",4,0)
 I $L($T(^RGCWFUSR)) Q $$HASKEY^RGCWFUSR(.KEY,.USR)
"RTN","BGOUTL4",5,0)
 Q $$HASKEY^BEHOUSCX(.KEY,.USR)
"RTN","BGOUTL4",6,0)
ACTLOC(LOC,DAT) ;
"RTN","BGOUTL4",7,0)
 I $L($T(^RGCWENCX)) Q $$ACTLOC^RGCWENCX(.LOC,.DAT)
"RTN","BGOUTL4",8,0)
 Q $$ACTLOC^BEHOENCX(.LOC,.DAT)
"RTN","BGOUTL4",9,0)
ISLOCKED(IEN) ;
"RTN","BGOUTL4",10,0)
 I $L($T(^RGCWENCX)) Q $$ISLOCKED^RGCWENCX(.IEN)
"RTN","BGOUTL4",11,0)
 Q $$ISLOCKED^BEHOENCX(.IEN)
"RTN","BGOUTL4",12,0)
FNDVIS(DFN,DAT,CAT,LOC,CRE,PRV,ELC) ;
"RTN","BGOUTL4",13,0)
 I $L($T(^RGCWENCX)) Q $$FNDVIS^RGCWENCX(.DFN,.DAT,.CAT,.LOC,.CRE,.PRV,.ELC)
"RTN","BGOUTL4",14,0)
 Q $$FNDVIS^BEHOENCX(.DFN,.DAT,.CAT,.LOC,.CRE,.PRV,.ELC)
"RTN","BGOUTL4",15,0)
VSTR2VIS(DFN,VSTR,CREATE,PRV) ;
"RTN","BGOUTL4",16,0)
 I $L($T(^RGCWENCX)) Q $$VSTR2VIS^RGCWENCX(.DFN,.VSTR,.CREATE,.PRV)
"RTN","BGOUTL4",17,0)
 Q $$VSTR2VIS^BEHOENCX(.DFN,.VSTR,.CREATE,.PRV)
"RTN","BGOUTL4",18,0)
LOCK(DATA,GBL,OPR) ;
"RTN","BGOUTL4",19,0)
 I $L($T(^CIANBRPC)) D LOCK^CIANBRPC(.DATA,.GBL,.OPR)
"RTN","BGOUTL4",20,0)
 I $L($T(^RGNETBRP)) D LOCK^RGNETBRP(.DATA,.GBL,.OPR)
"RTN","BGOUTL4",21,0)
 Q
"RTN","BGOUTL4",22,0)
ISACTIVE(IEN,DAT) ;
"RTN","BGOUTL4",23,0)
 I $L($T(^RGCWFUSR)) Q $$ISACTIVE^RGCWFUSR(.IEN,.DAT)
"RTN","BGOUTL4",24,0)
 Q $$ACTIVE^BEHOUSCX
"RTN","BGOUTL4",25,0)
BRDCAST(TYPE,STUB,USR,AID) ;
"RTN","BGOUTL4",26,0)
 N CNT
"RTN","BGOUTL4",27,0)
 S CNT=0
"RTN","BGOUTL4",28,0)
 I $L($T(^CIANBEVT)) S CNT=$$BRDCAST^CIANBEVT(.TYPE,.STUB,.USR,.AID)
"RTN","BGOUTL4",29,0)
 I $L($T(^RGNETBEV)) S CNT=CNT+$$BRDCAST^RGNETBEV(.TYPE,.STUB,.USR,.AID)
"RTN","BGOUTL4",30,0)
 Q:$Q CNT
"RTN","BGOUTL4",31,0)
 Q
"RTN","BGOUTL4",32,0)
UID() Q $$ENV("UID")
"RTN","BGOUTL4",33,0)
ENV(VAR) Q $S($D(CIA)>1:$G(CIA(VAR)),1:$G(RGNETB(VAR)))
"SEC","^DIC",9999999.27,9999999.27,0,"AUDIT")
@
"SEC","^DIC",9999999.27,9999999.27,0,"DD")
@
"SEC","^DIC",9999999.27,9999999.27,0,"DEL")
@
"VER")
8.0^22.0
"^DD",9999999.27,9999999.27,0)
FIELD^^75702^4
"^DD",9999999.27,9999999.27,0,"DDA")
N
"^DD",9999999.27,9999999.27,0,"DT")
3150713
"^DD",9999999.27,9999999.27,0,"IX","B",9999999.27,.01)

"^DD",9999999.27,9999999.27,0,"IX","B",9999999.27,8801)

"^DD",9999999.27,9999999.27,0,"NM","PROVIDER NARRATIVE")

"^DD",9999999.27,9999999.27,0,"PT",90001.01,.06)

"^DD",9999999.27,9999999.27,0,"PT",90001.02,.06)

"^DD",9999999.27,9999999.27,0,"PT",90002.01,.06)

"^DD",9999999.27,9999999.27,0,"PT",90002.01,9101)

"^DD",9999999.27,9999999.27,0,"PT",90002.68,.06)

"^DD",9999999.27,9999999.27,0,"PT",90002.68,9101)

"^DD",9999999.27,9999999.27,0,"PT",90002.98,.06)

"^DD",9999999.27,9999999.27,0,"PT",90002.98,9101)

"^DD",9999999.27,9999999.27,0,"PT",90680.01,.05)

"^DD",9999999.27,9999999.27,0,"PT",9000010.07,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000010.07,80201)

"^DD",9999999.27,9999999.27,0,"PT",9000010.08,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000010.15,.06)

"^DD",9999999.27,9999999.27,0,"PT",9000010.15,80201)

"^DD",9999999.27,9999999.27,0,"PT",9000010.18,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000010.18,80201)

"^DD",9999999.27,9999999.27,0,"PT",9000010.24,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000010.43,.07)

"^DD",9999999.27,9999999.27,0,"PT",9000010.43,.11)

"^DD",9999999.27,9999999.27,0,"PT",9000010.6214,.03)

"^DD",9999999.27,9999999.27,0,"PT",9000010.6314,.03)

"^DD",9999999.27,9999999.27,0,"PT",9000011,.05)

"^DD",9999999.27,9999999.27,0,"PT",9000013,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000014,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000015,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000016,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000021,.04)

"^DD",9999999.27,9999999.27,0,"PT",9000098,.04)

"^DD",9999999.27,9999999.27,0,"PT",9002011.01,.04)

"^DD",9999999.27,9999999.27,0,"PT",9002011.03,.01)

"^DD",9999999.27,9999999.27,0,"PT",9002011.51,.05)

"^DD",9999999.27,9999999.27,0,"PT",9002011.6721,.02)

"^DD",9999999.27,9999999.27,0,"PT",9002274.3017,.03)

"^DD",9999999.27,9999999.27,0,"PT",9002274.3019,.04)

"^DD",9999999.27,9999999.27,0,"PT",9002274.3021,.06)

"^DD",9999999.27,9999999.27,0,"PT",9002274.4017,.03)

"^DD",9999999.27,9999999.27,0,"PT",9002274.4019,.04)

"^DD",9999999.27,9999999.27,0,"PT",9002274.4021,.06)

"^DD",9999999.27,9999999.27,0,"VRPK")
AUT
"^DD",9999999.27,9999999.27,.01,0)
NARRATIVE^RF^^0;1^K:$L(X)>160!($L(X)<2)!'(((X'?1P.E)!(X?1"|".E))!(X'?.ANP))!(X'?.ANP) X
"^DD",9999999.27,9999999.27,.01,1,0)
^.1
"^DD",9999999.27,9999999.27,.01,1,1,0)
9999999.27^B
"^DD",9999999.27,9999999.27,.01,1,1,1)
S ^AUTNPOV("B",$E(X,1,30),DA)=""
"^DD",9999999.27,9999999.27,.01,1,1,2)
K ^AUTNPOV("B",$E(X,1,30),DA)
"^DD",9999999.27,9999999.27,.01,3)
Answer must be 2-160 characters in length.
"^DD",9999999.27,9999999.27,.01,7.5)
D ^AUTNPOV
"^DD",9999999.27,9999999.27,.01,"DEL",.01,0)
I 1
"^DD",9999999.27,9999999.27,.01,"DT")
3150713
"^DD",9999999.27,9999999.27,.01,"LAYGO",.01,0)
 S IHSX=$E(X,1,30),IHSY="" X:$D(^AUTNPOV("B",IHSX)) "F IHSY=0:0 S IHSY=$O(^AUTNPOV(""B"",IHSX,IHSY)) Q:'IHSY  I $P(^AUTNPOV(IHSY,0),U,1)=X S IHSY=1 Q" X "I 'IHSY" K IHSX,IHSY
"^DD",9999999.27,9999999.27,8801,0)
MNEMONIC^F^^88;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>2!($L(X)<1) X
"^DD",9999999.27,9999999.27,8801,1,0)
^.1
"^DD",9999999.27,9999999.27,8801,1,1,0)
9999999.27^B^MNEMONIC
"^DD",9999999.27,9999999.27,8801,1,1,1)
S ^AUTNPOV("B",$E(X,1,30),DA)=1
"^DD",9999999.27,9999999.27,8801,1,1,2)
K ^AUTNPOV("B",$E(X,1,30),DA)
"^DD",9999999.27,9999999.27,8801,3)
ANSWER MUST BE 1-2 CHARACTERS IN LENGTH
"^DD",9999999.27,9999999.27,8801,"DT")
2851216
"^DD",9999999.27,9999999.27,75701,0)
CLINICAL LEXICON^P757.01'^LEX(757.01,^757;1^Q
"^DD",9999999.27,9999999.27,75701,21,0)
^^1^1^3031202^
"^DD",9999999.27,9999999.27,75701,21,1,0)
This is the clinical expression related to the provider narrative.
"^DD",9999999.27,9999999.27,75701,"DT")
3031202
"^DD",9999999.27,9999999.27,75702,0)
ORIGINATING FILE^F^^757;2^K:$L(X)>15!($L(X)<1) X
"^DD",9999999.27,9999999.27,75702,3)
Answer must be 1-15 characters in length.
"^DD",9999999.27,9999999.27,75702,21,0)
^^7^7^3031014^^^
"^DD",9999999.27,9999999.27,75702,21,1,0)
This field is used in the VA to identify what file pointing to the provider narrative
"^DD",9999999.27,9999999.27,75702,21,2,0)
file created the entry in the Provider Narrative File.
"^DD",9999999.27,9999999.27,75702,21,3,0)
This may be useful as more packages create pointers to the Provider
"^DD",9999999.27,9999999.27,75702,21,4,0)
Narrative File to store the local capture of provider terminology.
"^DD",9999999.27,9999999.27,75702,21,5,0)
 
"^DD",9999999.27,9999999.27,75702,21,6,0)
The Problem List package puts its free text file number in this field
"^DD",9999999.27,9999999.27,75702,21,7,0)
when it adds provider narratives to the Provider Narrative file.
"^DD",9999999.27,9999999.27,75702,22)

"^DD",9999999.27,9999999.27,75702,23,0)
^^1^1^3031014^
"^DD",9999999.27,9999999.27,75702,23,1,0)
This field is introduced with patch AUT*98.1*13.
"^DD",9999999.27,9999999.27,75702,"DT")
3030903
"^DD",9999999.27,9999999.27,75702,"V",0)
^.12P
"^DIC",9999999.27,9999999.27,0)
PROVIDER NARRATIVE^9999999.27A
"^DIC",9999999.27,9999999.27,0,"GL")
^AUTNPOV(
"^DIC",9999999.27,9999999.27,"%D",0)
^^3^3^2970701^^
"^DIC",9999999.27,9999999.27,"%D",1,0)
Changes to this data dictionary should be coordinated thru the IHS DBA.
"^DIC",9999999.27,9999999.27,"%D",2,0)
 
"^DIC",9999999.27,9999999.27,"%D",3,0)
This file contains each unique POV NARRATIVE QUALIFIER.
"^DIC",9999999.27,"B","PROVIDER NARRATIVE",9999999.27)

**END**
**END**
